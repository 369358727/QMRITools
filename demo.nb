(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1009952,      19584]
NotebookOptionsPosition[    976028,      19056]
NotebookOutlinePosition[    976371,      19071]
CellTagsIndexPosition[    976328,      19068]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["QMRITools Demonstration", "Title",
 CellChangeTimes->{{3.7548942958959026`*^9, 
  3.754894302342204*^9}},ExpressionUUID->"934d8265-4fcc-4427-9f34-\
640074773381"],

Cell["\<\
In this demo notebook some functionality of the QMRI toolbox is demonstrated.\
\>", "Text",
 CellChangeTimes->{{3.7548942642000513`*^9, 3.7548942928369303`*^9}, {
  3.7548943313614855`*^9, 
  3.7548943407731633`*^9}},ExpressionUUID->"22b0e3d8-9903-4283-b556-\
9ad31d8e7f65"],

Cell[CellGroupData[{

Cell["Initialization", "Subchapter",
 CellChangeTimes->{{3.7548943063775883`*^9, 
  3.754894325780166*^9}},ExpressionUUID->"4d401d3b-2658-4bc0-bbef-\
6cc2152ecc5c"],

Cell["Load the toolbox and specify the directory of the demo data", "Text",
 CellChangeTimes->{{3.7548943517375546`*^9, 
  3.754894370341078*^9}},ExpressionUUID->"a102f725-94d2-43a9-822e-\
d1dd3b7c0c23"],

Cell[BoxData[
 RowBox[{"<<", "QMRITools`"}]], "Input",
 CellChangeTimes->{{3.6907975416819487`*^9, 3.6907975437981606`*^9}, 
   3.7066051241018443`*^9, {3.7548942442159195`*^9, 3.754894244741446*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<D:\\\\Werk\\\\Workspace\\\\QMRITools\\\\testdata\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7548943440261326`*^9, 3.754894348437641*^9}, {
  3.754894384240104*^9, 3.754894391334977*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"de89fb8e-3ffb-4d57-bd77-151cf99ecb57"],

Cell[CellGroupData[{

Cell["List all Packages and toolboxes", "Subsection",
 CellChangeTimes->{{3.7548980189899817`*^9, 
  3.7548980262380056`*^9}},ExpressionUUID->"1037c5ba-e19a-4732-8360-\
f60e7a2fa01d"],

Cell["\<\
List of all the QMRITool packages and functions that are loaded\
\>", "Text",
 CellChangeTimes->{{3.7548944148778186`*^9, 
  3.754894435542356*^9}},ExpressionUUID->"9def143d-308d-45ea-9146-\
337b684f48fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QMRIToolsPackages", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6905384062405696`*^9, 3.690538415376483*^9}, {
   3.7205166672714324`*^9, 3.7205166714124327`*^9}, 3.7519491491125264`*^9, {
   3.7519502607371855`*^9, 3.75195026609664*^9}, {3.7541410126212564`*^9, 
   3.7541410154539833`*^9}, {3.7546767448038144`*^9, 3.7546767457753997`*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CardiacTools\"\>", ",", "\<\"CoilTools\"\>", 
   ",", "\<\"DenoiseTools\"\>", ",", "\<\"DixonTools\"\>", 
   ",", "\<\"ElastixTools\"\>", ",", "\<\"GeneralTools\"\>", 
   ",", "\<\"GradientTools\"\>", ",", "\<\"ImportTools\"\>", 
   ",", "\<\"IVIMTools\"\>", ",", "\<\"JcouplingTools\"\>", 
   ",", "\<\"MaskingTools\"\>", ",", "\<\"NiftiTools\"\>", 
   ",", "\<\"PhysiologyTools\"\>", ",", "\<\"PlottingTools\"\>", 
   ",", "\<\"ProcessingTools\"\>", ",", "\<\"RelaxometryTools\"\>", 
   ",", "\<\"SimulationTools\"\>", ",", "\<\"TensorTools\"\>", 
   ",", "\<\"VisteTools\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.690538401763122*^9, 3.6905384090308485`*^9}, 
   3.690538474605406*^9, 3.6907859933924627`*^9, 3.6992056955963345`*^9, 
   3.7004537291405606`*^9, 3.7004538514347887`*^9, 3.701679618524291*^9, 
   3.701680010543713*^9, 3.7016800564173374`*^9, 3.701686407390592*^9, 
   3.7017499129263563`*^9, 3.701755556297138*^9, 3.7059777024548717`*^9, 
   3.7185281851036205`*^9, 3.7185362224813013`*^9, {3.7205166517094326`*^9, 
   3.7205166729414325`*^9}, 3.734850763113201*^9, 3.7518884102830772`*^9, 
   3.751889716602153*^9, 3.751900141717314*^9, 3.7519001750269094`*^9, 
   3.751904696649757*^9, 3.7519072203174305`*^9, 3.751949035399651*^9, 
   3.7519491156695356`*^9, 3.751949421909232*^9, 3.751949882703697*^9, {
   3.7519499878314095`*^9, 3.7519499974827833`*^9}, {3.7519502408635306`*^9, 
   3.7519502664622498`*^9}, 3.7519506062984133`*^9, 3.7519528653793015`*^9, {
   3.7519537723400874`*^9, 3.7519537898387847`*^9}, 3.751954283313949*^9, 
   3.7519546138105164`*^9, 3.751954670623517*^9, 3.7519547103311234`*^9, 
   3.751954908546382*^9, 3.751955849747241*^9, 3.7519562492440825`*^9, 
   3.7541411608291097`*^9, 3.754141444438006*^9, 3.7543939283863277`*^9, 
   3.7546307298618703`*^9, 3.7546308509992943`*^9, 3.7546310662700267`*^9, 
   3.754631866016012*^9, 3.754632227732048*^9, 3.7546762614522038`*^9, 
   3.7546766150450664`*^9, {3.7546767412523613`*^9, 3.7546767466326823`*^9}, 
   3.754676793492404*^9, 3.7546782847304163`*^9, 3.754679030590165*^9, 
   3.754682670426427*^9, 3.7546830384347997`*^9, 3.7546831311418233`*^9, 
   3.754995733862534*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"27d84e42-9238-46d8-ba78-333f5e6aa156"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QMRIToolsFunctions", "[", "25", "]"}]], "Input",
 CellChangeTimes->{{3.75195384157756*^9, 3.7519538451427054`*^9}, {
  3.751953883350589*^9, 3.751953894726776*^9}, {3.751954298264811*^9, 
  3.75195431300511*^9}, {3.7541411531669445`*^9, 3.7541411772612*^9}, {
  3.7546318724060435`*^9, 3.754631887081112*^9}, {3.754631931343922*^9, 
  3.7546319316547194`*^9}, {3.7548944382622967`*^9, 3.7548944389976683`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {
     StyleBox["\<\"Functions\"\>",
      StripOnInput->False,
      FontSize->16,
      FontWeight->Bold]},
    {"\<\"\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"ADCCalc\"\>", "\<\"ClearTemporaryVariables\"\>", "\<\"DeNoise\"\
\>", "\<\"ExportNii\"\>", "\<\"GetSliceNormal\"\>", "\<\"ImportNiiT1\"\>", \
"\<\"MaskHelix\"\>", "\<\"PlotCorrection\"\>", "\<\"ReadDicom\"\>", \
"\<\"SequenceSpinEcho\"\>", "\<\"StdFilter\"\>"},
        {"\<\"AddNoise\"\>", "\<\"CoilSNRCalc\"\>", "\<\"Deriv\"\>", \
"\<\"ExportVol\"\>", "\<\"GetSliceNormalDir\"\>", "\<\"ImportNiiT2\"\>", \
"\<\"MeanNoZero\"\>", "\<\"PlotData\"\>", "\<\"ReadDicomDiff\"\>", \
"\<\"SequenceSteam\"\>", "\<\"StichData\"\>"},
        {"\<\"AlignRespLog\"\>", "\<\"ColorFAPlot\"\>", \
"\<\"DevideNoZero\"\>", "\<\"ExtractNiiFiles\"\>", \
"\<\"GetSlicePositions\"\>", "\<\"ImportPhyslog\"\>", "\<\"MeanRange\"\>", \
"\<\"PlotData3D\"\>", "\<\"ReadDicomDir\"\>", "\<\"SequenceTSE\"\>", \
"\<\"SumOfSquares\"\>"},
        {"\<\"AngleCalc\"\>", "\<\"CompilebleFunctions\"\>", \
"\<\"DictionaryMinSearch\"\>", "\<\"FACalc\"\>", "\<\"GetSpinSystem\"\>", "\<\
\"ImportRespirect\"\>", "\<\"MeanSignal\"\>", "\<\"PlotDefGrid\"\>", \
"\<\"ReadDicomDirDiff\"\>", "\<\"SetupDataStructure\"\>", "\<\"SysTable\"\>"},
        {"\<\"AngleMap\"\>", "\<\"CompressNiiFiles\"\>", \
"\<\"DixonReconstruct\"\>", "\<\"FConvert\"\>", "\<\"GfactorSimulation\"\>", \
"\<\"ImportVol\"\>", "\<\"MeanStd\"\>", "\<\"PlotDuty\"\>", \
"\<\"ReadGradients\"\>", "\<\"ShiftPar\"\>", "\<\"T1Fit\"\>"},
        {"\<\"AnisoFilterTensor\"\>", "\<\"ConcatenateDiffusionData\"\>", "\<\
\"DixonToPercent\"\>", "\<\"FConverti\"\>", "\<\"GradBmatrix\"\>", \
"\<\"InvertDataset\"\>", "\<\"MedCouple\"\>", "\<\"PlotIVIM\"\>", \
"\<\"ReadTransformParameters\"\>", "\<\"SigmaCalc\"\>", "\<\"T1rhoFit\"\>"},
        {"\<\"ApplyCrop\"\>", "\<\"ConditionNumberCalc\"\>", \
"\<\"DriftCorrect\"\>", "\<\"FiberDensityMap\"\>", "\<\"GradientPlot\"\>", \
"\<\"IVIMCalc\"\>", "\<\"MedianNoZero\"\>", "\<\"PlotMoments\"\>", \
"\<\"ReadVoxSize\"\>", "\<\"Signal\"\>", "\<\"T2Fit\"\>"},
        {"\<\"AutoCropData\"\>", "\<\"ConvertGrads\"\>", \
"\<\"DTItoolExp\"\>", "\<\"FiberLengths\"\>", "\<\"GradRead\"\>", \
"\<\"IVIMCorrectData\"\>", "\<\"MemoryUsage\"\>", "\<\"PlotPhyslog\"\>", \
"\<\"RegisterCardiacData\"\>", "\<\"SimAddPhase\"\>", "\<\"TensMat\"\>"},
        {"\<\"BayesianIVIMFit2\"\>", "\<\"Correct\"\>", "\<\"DTItoolExpFile\"\
\>", "\<\"FileSelect\"\>", "\<\"GradSeq\"\>", "\<\"IVIMFunction\"\>", \
"\<\"MergeSegmentations\"\>", "\<\"PlotRespiract\"\>", \
"\<\"RegisterData\"\>", "\<\"SimAngleParameters\"\>", "\<\"Tensor\"\>"},
        {"\<\"BayesianIVIMFit3\"\>", "\<\"CorrectBmatrix\"\>", \
"\<\"DTItoolExpInd\"\>", "\<\"FinalGrads\"\>", "\<\"GridData\"\>", \
"\<\"IVIMResiduals\"\>", "\<\"NNLeastSquares\"\>", "\<\"PlotSegmentMask\"\>", \
"\<\"RegisterDataSplit\"\>", "\<\"SimEvolve\"\>", "\<\"TensorCalc\"\>"},
        {"\<\"BlochSeries\"\>", "\<\"CorrectGradients\"\>", \
"\<\"DTItoolExpTens\"\>", "\<\"FindCoilPosition\"\>", \
"\<\"HelixAngleCalc\"\>", "\<\"JoinSets\"\>", "\<\"NoiseCorrelation\"\>", "\<\
\"PlotSegments\"\>", "\<\"RegisterDataTransform\"\>", \
"\<\"SimHamiltonian\"\>", "\<\"TensorCorrect\"\>"},
        {"\<\"Bmatrix\"\>", "\<\"CorrectJoinSetMotion\"\>", "\<\"ECalc\"\>", \
"\<\"FindCrop\"\>", "\<\"Hist\"\>", "\<\"LapFilter\"\>", "\<\"NoiseCovariance\
\"\>", "\<\"PlotSequence\"\>", "\<\"RegisterDataTransformSplit\"\>", \
"\<\"SimParameters\"\>", "\<\"TensVec\"\>"},
        {"\<\"BmatrixCalc\"\>", "\<\"CorrectParMap\"\>", "\<\"ECVCalc\"\>", "\
\<\"FindMaxDimensions\"\>", "\<\"Hist2\"\>", "\<\"ListSpherePlot\"\>", \
"\<\"NonLinearEPGFit\"\>", "\<\"PlotSimulation\"\>", \
"\<\"RegisterDiffusionData\"\>", "\<\"SimReadout\"\>", "\<\"ThetaConv\"\>"},
        {"\<\"BmatrixConv\"\>", "\<\"CreateDiffData\"\>", "\<\"EigensysCalc\"\
\>", "\<\"FindOrder\"\>", "\<\"HistogramPar\"\>", "\<\"LoadCoilSetup\"\>", \
"\<\"NormalizeData\"\>", "\<\"PlotSimulationAngle\"\>", \
"\<\"RegisterDiffusionDataSplit\"\>", "\<\"SimRotate\"\>", \
"\<\"ThetaConvi\"\>"},
        {"\<\"BmatrixInv\"\>", "\<\"CreateT2Dictionary\"\>", \
"\<\"EigenvalCalc\"\>", "\<\"FindOutliers\"\>", "\<\"HomoginizeData\"\>", "\<\
\"LoadCoilTarget\"\>", "\<\"NumberTableForm\"\>", \
"\<\"PlotSimulationAngleHist\"\>", "\<\"RemoveIsoImages\"\>", \
"\<\"SimSignal\"\>", "\<\"TransData\"\>"},
        {"\<\"BmatrixRot\"\>", "\<\"CropData\"\>", "\<\"EigenvecCalc\"\>", \
"\<\"FitData\"\>", "\<\"ImportBmat\"\>", "\<\"LoadFiberTracts\"\>", \
"\<\"OverPlusCalc\"\>", "\<\"PlotSimulationHist\"\>", "\<\"RemoveMaskOverlaps\
\"\>", "\<\"SimSpoil\"\>", "\<\"TransformData\"\>"},
        {"\<\"BmatrixToggle\"\>", "\<\"CutData\"\>", "\<\"EnergyCalc\"\>", \
"\<\"FracCorrect\"\>", "\<\"ImportBval\"\>", "\<\"LogNoZero\"\>", \
"\<\"PadToDimensions\"\>", "\<\"PlotSimulationVec\"\>", \
"\<\"RescaleData\"\>", "\<\"SimulateSliceEPG\"\>", "\<\"TransmuralPlot\"\>"},
        {"\<\"BullseyePlot\"\>", "\<\"Data2DToVector\"\>", \
"\<\"EPGSignal\"\>", "\<\"FullGrad\"\>", "\<\"ImportBvalvec\"\>", \
"\<\"MADNoZero\"\>", "\<\"ParameterCalc\"\>", "\<\"PlotSpectrum\"\>", \
"\<\"RescaleSegmentation\"\>", "\<\"SmartMask\"\>", \
"\<\"TriExponentialT2Fit\"\>"},
        {"\<\"BvalRead\"\>", "\<\"Data3DToVector\"\>", "\<\"EPGT2Fit\"\>", \
"\<\"GenerateGradients\"\>", "\<\"ImportBvec\"\>", "\<\"MakeCoilLayout\"\>", \
"\<\"ParameterFit\"\>", "\<\"Pulses\"\>", "\<\"ResidualCalc\"\>", \
"\<\"SmoothMask\"\>", "\<\"UniqueBvalPosition\"\>"},
        {"\<\"CalculateGfactor\"\>", "\<\"DataTranformation\"\>", \
"\<\"ErrorPlot\"\>", "\<\"GenerateGradientsGUI\"\>", "\<\"ImportDTI\"\>", "\<\
\"MakeECVBloodMask\"\>", "\<\"ParameterFit2\"\>", \
"\<\"QMRIToolsFuncPrint\"\>", "\<\"ReverseCrop\"\>", \
"\<\"SmoothSegmentation\"\>", "\<\"Unwrap\"\>"},
        {"\<\"CalculateMoments\"\>", "\<\"DatRead\"\>", \
"\<\"ExcludeSlices\"\>", "\<\"GetGradientScanOrder\"\>", \
"\<\"ImportExploreDTItens\"\>", "\<\"MakeNoisePlots\"\>", \
"\<\"PCADeNoise\"\>", "\<\"QMRIToolsFunctions\"\>", "\<\"RMSNoZero\"\>", \
"\<\"SNRCalc\"\>", "\<\"UnwrapSplit\"\>"},
        {"\<\"CalculateWallMap\"\>", "\<\"DatTot\"\>", "\<\"ExpNoZero\"\>", "\
\<\"GetMaskData\"\>", "\<\"ImportGradObj\"\>", "\<\"MakeSliceImages\"\>", "\<\
\"PCAFitEq\"\>", "\<\"QMRIToolsPackages\"\>", "\<\"ROIMask\"\>", \
"\<\"SNRMapCalc\"\>", "\<\"VectorToData\"\>"},
        {"\<\"CalibrateEPGT2Fit\"\>", "\<\"DatTotXLS\"\>", \
"\<\"ExportBmat\"\>", "\<\"GetMaskMeans\"\>", "\<\"ImportNii\"\>", \
"\<\"MakeWeightMask\"\>", "\<\"PCAFitHist\"\>", "\<\"RadialSample\"\>", \
"\<\"SaveImage\"\>", "\<\"SortDiffusionData\"\>", "\<\"WeightMapCalc\"\>"},
        {"\<\"CardiacSegment\"\>", "\<\"DatWrite\"\>", "\<\"ExportBval\"\>", \
"\<\"GetPulseProfile\"\>", "\<\"ImportNiiDiff\"\>", "\<\"Mask\"\>", \
"\<\"PhaseAlign\"\>", "\<\"ReadBrukerDiff\"\>", "\<\"SegmentMask\"\>", \
"\<\"SplitSegmentations\"\>", "\<\"\"\>"},
        {"\<\"CentralAxes\"\>", "\<\"DcmToNii\"\>", "\<\"ExportBvec\"\>", "\<\
\"GetSliceData\"\>", "\<\"ImportNiiDix\"\>", "\<\"MaskData\"\>", \
"\<\"PlotContour\"\>", "\<\"ReadBvalue\"\>", "\<\"SequencePulseAcquire\"\>", \
"\<\"SplitSets\"\>", "\<\"\"\>"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[2.0999999999999996`]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]},
    {"\<\"\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.7548944395781665`*^9, 3.754995734372387*^9},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"2d732253-89d6-4183-ab18-c75a8e8f46d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {
     StyleBox["\<\"Options\"\>",
      StripOnInput->False,
      FontSize->16,
      FontWeight->Bold]},
    {"\<\"\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"AffineDirections\"\>", "\<\"ConvertDcm\"\>", "\<\"DropSamples\"\
\>", "\<\"GetMaskOutput\"\>", "\<\"IVIMTensFit\"\>", "\<\"MethodReg\"\>", "\<\
\"OutputCoilSurface\"\>", "\<\"PlotRange\"\>", "\<\"RobustFitParameters\"\>", \
"\<\"Steps\"\>"},
        {"\<\"AnisoFilterSteps\"\>", "\<\"CorrectPar\"\>", \
"\<\"DropSlices\"\>", "\<\"GOutput\"\>", "\<\"JoinSetSplit\"\>", \
"\<\"MethodReg\"\>", "\<\"OutputImage\"\>", "\<\"PlotRange\"\>", \
"\<\"RotateGradient\"\>", "\<\"StepSizeI\"\>"},
        {"\<\"AnisoKappa\"\>", "\<\"CropInit\"\>", "\<\"EPGCalibrate\"\>", \
"\<\"GradType\"\>", "\<\"LineStep\"\>", "\<\"MethodRegA\"\>", \
"\<\"OutputMethod\"\>", "\<\"PlotRange\"\>", "\<\"RotateGradients\"\>", \
"\<\"Strictness\"\>"},
        {"\<\"AnisoStepTime\"\>", "\<\"CropOutput\"\>", \
"\<\"EPGFitPoints\"\>", "\<\"GRegularization\"\>", "\<\"LineThreshold\"\>", "\
\<\"MonitorCalc\"\>", "\<\"OutputPlot\"\>", "\<\"PlotRange\"\>", \
"\<\"RotationCorrect\"\>", "\<\"SwitchAxes\"\>"},
        {"\<\"AnisoWeightType\"\>", "\<\"CropPadding\"\>", \
"\<\"EPGMethod\"\>", "\<\"GridLineSpacing\"\>", "\<\"Linewidth\"\>", \
"\<\"MonitorEPGFit\"\>", "\<\"OutputSamples\"\>", "\<\"PlotRange\"\>", \
"\<\"RowSize\"\>", "\<\"TableAlignments\"\>"},
        {"\<\"AxesLabel\"\>", "\<\"CutOffMethod\"\>", "\<\"EPGRelaxPars\"\>", \
"\<\"HelixMethod\"\>", "\<\"LinewidthShape\"\>", "\<\"MonitorIVIMCalc\"\>", "\
\<\"OutputSNR\"\>", "\<\"PlotSolution\"\>", "\<\"Runs\"\>", "\<\"TableDepth\"\
\>"},
        {"\<\"AxesMethod\"\>", "\<\"DeleteTempDirectory\"\>", \
"\<\"EPGSmoothB1\"\>", "\<\"HistogramBins\"\>", \
"\<\"MagnetizationVector\"\>", "\<\"MonitorUnwrap\"\>", \
"\<\"OutputTransformation\"\>", "\<\"PlotSpace\"\>", "\<\"SampleStep\"\>", \
"\<\"TableDirections\"\>"},
        {"\<\"BackgroundValue\"\>", "\<\"DeNoiseIterations\"\>", \
"\<\"FieldStrength\"\>", "\<\"HistogramBinsA\"\>", "\<\"MakeCheckPlot\"\>", "\
\<\"MotionCorrectSets\"\>", "\<\"OutputType\"\>", "\<\"PlotStyle\"\>", \
"\<\"ScaleCorrect\"\>", "\<\"TableHeadings\"\>"},
        {"\<\"BinaryType\"\>", "\<\"DeNoiseKernel\"\>", "\<\"FileType\"\>", "\
\<\"ImageLegend\"\>", "\<\"MaskClosing\"\>", "\<\"NiiDataType\"\>", \
"\<\"OutputWeights\"\>", "\<\"PositiveZ\"\>", "\<\"Scaling\"\>", \
"\<\"TableMethod\"\>"},
        {"\<\"BloodMaskRange\"\>", "\<\"DeNoiseMonitor\"\>", \
"\<\"FilterMaps\"\>", "\<\"ImageResolution\"\>", "\<\"MaskCompartment\"\>", "\
\<\"NiiMethod\"\>", "\<\"PadDirection\"\>", "\<\"PrintTempDirectory\"\>", "\<\
\"SeedDensity\"\>", "\<\"TableSpacing\"\>"},
        {"\<\"BmatrixOut\"\>", "\<\"DictB1Range\"\>", "\<\"FilterShape\"\>", \
"\<\"ImageSize\"\>", "\<\"MaskComponents\"\>", "\<\"NiiScaling\"\>", \
"\<\"PaddOverlap\"\>", "\<\"RadialSamples\"\>", "\<\"ShowFit\"\>", \
"\<\"TempDirectory\"\>"},
        {"\<\"BsplineDirections\"\>", "\<\"DictT2fRange\"\>", "\<\"FilterSize\
\"\>", "\<\"ImageSize\"\>", "\<\"MaskFiltKernel\"\>", "\<\"NoiseSize\"\>", \
"\<\"PadValue\"\>", "\<\"ReadoutBandwith\"\>", "\<\"ShowHelixPlot\"\>", \
"\<\"TensOutput\"\>"},
        {"\<\"BsplineSpacing\"\>", "\<\"DictT2Range\"\>", \
"\<\"FilterType\"\>", "\<\"ImageSize\"\>", "\<\"MaskSmoothing\"\>", \
"\<\"NormalizeIVIM\"\>", "\<\"Parallelize\"\>", "\<\"ReadoutOutput\"\>", \
"\<\"SliceRange\"\>", "\<\"TextOffset\"\>"},
        {"\<\"BullPlotMethod\"\>", "\<\"DistanceMeasure\"\>", \
"\<\"FindTransform\"\>", "\<\"ImageSize\"\>", "\<\"MaskWallMap\"\>", \
"\<\"NormalizeSets\"\>", "\<\"Parallelize\"\>", "\<\"ReadoutPhase\"\>", \
"\<\"SliceRangeSamples\"\>", "\<\"TextSize\"\>"},
        {"\<\"CenterFrequency\"\>", "\<\"Distribution\"\>", \
"\<\"FitConstrains\"\>", "\<\"ImageSize\"\>", "\<\"MeanMethod\"\>", \
"\<\"NormalizeSignal\"\>", "\<\"PCAComponents\"\>", "\<\"ReadoutSamples\"\>", \
"\<\"SmartMaskOutput\"\>", "\<\"UnitMulti\"\>"},
        {"\<\"ChainSteps\"\>", "\<\"DixonAmplitudes\"\>", \
"\<\"FitFunction\"\>", "\<\"InterpolationOrder\"\>", "\<\"MeanRes\"\>", \
"\<\"NumberSamples\"\>", "\<\"PCAFitParameters\"\>", \
"\<\"RegistrationTarget\"\>", "\<\"SmartMethod\"\>", \
"\<\"UnwrapDimension\"\>"},
        {"\<\"CoilArrayPlot\"\>", "\<\"DixonFieldStrength\"\>", \
"\<\"FitOutput\"\>", "\<\"InterpolationOrder\"\>", "\<\"Method\"\>", \
"\<\"NumberSamplesA\"\>", "\<\"PCAKernel\"\>", "\<\"Reject\"\>", \
"\<\"SmoothHelix\"\>", "\<\"UpdateStep\"\>"},
        {"\<\"CoilSurfaceVoxelSize\"\>", "\<\"DixonFilterInput\"\>", \
"\<\"FitSigma\"\>", "\<\"InterpolationOrderReg\"\>", "\<\"Method\"\>", \
"\<\"OrderSpan\"\>", "\<\"PCAOutput\"\>", "\<\"Reject\"\>", \
"\<\"SmoothSNR\"\>", "\<\"UseGPU\"\>"},
        {"\<\"ColorFunction\"\>", "\<\"DixonFilterOutput\"\>", \
"\<\"FixPseudoDiff\"\>", "\<\"InterpolationOrderRegA\"\>", "\<\"Method\"\>", \
"\<\"OutlierIncludeZero\"\>", "\<\"PCATollerance\"\>", "\<\"RejectMap\"\>", "\
\<\"SortVecs\"\>", "\<\"UseGrad\"\>"},
        {"\<\"ColorFunction\"\>", "\<\"DixonFilterSize\"\>", \
"\<\"FixPseudoDiffSD\"\>", "\<\"Iterations\"\>", "\<\"Method\"\>", \
"\<\"OutlierIterations\"\>", "\<\"PCAWeighting\"\>", "\<\"ReportFits\"\>", \
"\<\"SpectrumColor\"\>", "\<\"UseMask\"\>"},
        {"\<\"ColorFunction\"\>", "\<\"DixonFrequencies\"\>", "\<\"FlipAxes\"\
\>", "\<\"IterationsA\"\>", "\<\"Method\"\>", "\<\"OutlierMethod\"\>", \
"\<\"PeakNumber\"\>", "\<\"Resolutions\"\>", "\<\"SphereColor\"\>", \
"\<\"UseMask\"\>"},
        {"\<\"ColorValue\"\>", "\<\"DixonIterations\"\>", "\<\"FlipBvec\"\>", \
"\<\"IVIMComponents\"\>", "\<\"Method\"\>", "\<\"OutlierOutput\"\>", \
"\<\"PhaseEncoding\"\>", "\<\"ResolutionsA\"\>", "\<\"SphereSize\"\>", \
"\<\"VisualOpt\"\>"},
        {"\<\"CompressNii\"\>", "\<\"DixonMaskThreshhold\"\>", \
"\<\"FlipGrad\"\>", "\<\"IVIMConstrained\"\>", "\<\"Method\"\>", \
"\<\"OutlierRange\"\>", "\<\"PlotColor\"\>", "\<\"ReverseData\"\>", \
"\<\"SplitMethod\"\>", "\<\"WindowTitle\"\>"},
        {"\<\"ConditionCalc\"\>", "\<\"DixonPrecessions\"\>", "\<\"FullOutput\
\"\>", "\<\"IVIMConstrains\"\>", "\<\"Method\"\>", \
"\<\"OutputCalibration\"\>", "\<\"PlotLabel\"\>", "\<\"ReverseSets\"\>", \
"\<\"StartPoints\"\>", "\<\"\"\>"},
        {"\<\"ContourStyle\"\>", "\<\"DixonTollerance\"\>", "\<\"FullSphere\"\
\>", "\<\"IVIMFixed\"\>", "\<\"Method\"\>", "\<\"OutputCheckImage\"\>", \
"\<\"PlotLabel\"\>", "\<\"RobustFit\"\>", "\<\"StartSlices\"\>", "\<\"\"\>"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[2.0999999999999996`]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$]]]},
    {"\<\"\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.7548944395781665`*^9, 3.754995734411492*^9},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"448ee829-4625-4d50-a8e4-6de013c21006"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompilebleFunctions", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7548979688171806`*^9, 3.754897973478301*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"Abs", "Decrement", "Last", "Quotient", "TimesBy"},
    {"AddTo", "Delete", "Length", "Ramp", "Tr"},
    {"And", "DeleteCases", "Less", "Random", "Transpose"},
    {"Append", "Dimensions", "LessEqual", "RandomChoice", "Unequal"},
    {"AppendTo", "Divide", "List", "RandomComplex", "Union"},
    {"Apply", "DivideBy", "Log", "RandomInteger", "Unitize"},
    {"ArcCos", "Do", "Log10", "RandomReal", "UnitStep"},
    {"ArcCosh", "Dot", "Internal`Log1p", "RandomSample", "UnsameQ"},
    {"ArcCot", "Drop", "Log2", "RandomVariate", "VectorQ"},
    {"ArcCoth", "Equal", "LogGamma", "Range", "Which"},
    {"ArcCsc", "Erf", "LogisticSigmoid", "Re", "While"},
    {"ArcCsch", "Erfc", "LucasL", "RealAbs", "With"},
    {"ArcSec", "EvenQ", "Map", "RealSign", "Xor"},
    {"ArcSech", "Exp", "MapAll", "Internal`ReciprocalSqrt", "\<\"\"\>"},
    {"ArcSin", "Internal`Expm1", "MapAt", "ReplacePart", "\<\"\"\>"},
    {"ArcSinh", "Fibonacci", "MapIndexed", "Rest", "\<\"\"\>"},
    {"ArcTan", "First", "MapThread", "Return", "\<\"\"\>"},
    {"ArcTanh", "FixedPoint", "NDSolve`FEM`MapThreadDot", 
     "Reverse", "\<\"\"\>"},
    {"Arg", "FixedPointList", "MatrixQ", "RotateLeft", "\<\"\"\>"},
    {"Array", "Flatten", "Max", "RotateRight", "\<\"\"\>"},
    {"ArrayDepth", "NDSolve`FEM`FlattenAll", "MemberQ", "Round", "\<\"\"\>"},
    {"Internal`Bag", "Floor", "Min", "RuleCondition", "\<\"\"\>"},
    {"Internal`BagPart", "Fold", "Minus", "SameQ", "\<\"\"\>"},
    {"BitAnd", "FoldList", "Mod", "Scan", "\<\"\"\>"},
    {"BitNot", "For", "Compile`Mod1", "Sec", "\<\"\"\>"},
    {"BitOr", "FractionalPart", "Module", "Sech", "\<\"\"\>"},
    {"BitXor", "FreeQ", "Most", "SeedRandom", "\<\"\"\>"},
    {"Block", "Gamma", "N", "Select", "\<\"\"\>"},
    {"BlockRandom", "Compile`GetElement", "Negative", "Set", "\<\"\"\>"},
    {"Boole", "Goto", "Nest", "SetDelayed", "\<\"\"\>"},
    {"Break", "Greater", "NestList", "Compile`SetIterate", "\<\"\"\>"},
    {"Cases", "GreaterEqual", "NonNegative", "Sign", "\<\"\"\>"},
    {"Catch", "Gudermannian", "Not", "Sin", "\<\"\"\>"},
    {"Ceiling", "Haversine", "OddQ", "Sinc", "\<\"\"\>"},
    {"Chop", "If", "Or", "Sinh", "\<\"\"\>"},
    {"Internal`CompileError", "Im", "OrderedQ", "Sort", "\<\"\"\>"},
    {"System`Private`CompileSymbol", "Implies", "Out", "Sqrt", "\<\"\"\>"},
    {"Complement", "Increment", "Outer", "Internal`Square", "\<\"\"\>"},
    {"ComposeList", "Indexed", "Part", "Internal`StuffBag", "\<\"\"\>"},
    {"CompoundExpression", "Inequality", "Partition", "Subtract", "\<\"\"\>"},
    {"Conjugate", "Compile`InnerDo", "Piecewise", "SubtractFrom", "\<\"\"\>"},
    {"ConjugateTranspose", "Insert", "Plus", "Sum", "\<\"\"\>"},
    {"Continue", "IntegerDigits", "Position", "Switch", "\<\"\"\>"},
    {"Cos", "IntegerPart", "Positive", "Table", "\<\"\"\>"},
    {"Cosh", "Intersection", "Power", "Take", "\<\"\"\>"},
    {"Cot", "InverseGudermannian", "PreDecrement", "Tan", "\<\"\"\>"},
    {"Coth", "InverseHaversine", "PreIncrement", "Tanh", "\<\"\"\>"},
    {"Count", "Compile`IteratorCount", "Prepend", "TensorRank", "\<\"\"\>"},
    {"Csc", "Join", "PrependTo", "Throw", "\<\"\"\>"},
    {"Csch", "Label", "Product", "Times", "\<\"\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{Abs, Decrement, Last, Quotient, TimesBy}, {
    AddTo, Delete, Length, Ramp, Tr}, {
    And, DeleteCases, Less, Random, Transpose}, {
    Append, Dimensions, LessEqual, RandomChoice, Unequal}, {
    AppendTo, Divide, List, RandomComplex, Union}, {
    Apply, DivideBy, Log, RandomInteger, Unitize}, {
    ArcCos, Do, Log10, RandomReal, UnitStep}, {
    ArcCosh, Dot, Internal`Log1p, RandomSample, UnsameQ}, {
    ArcCot, Drop, Log2, RandomVariate, VectorQ}, {
    ArcCoth, Equal, LogGamma, Range, Which}, {
    ArcCsc, Erf, LogisticSigmoid, Re, While}, {
    ArcCsch, Erfc, LucasL, RealAbs, With}, {
    ArcSec, EvenQ, Map, RealSign, Xor}, {
    ArcSech, Exp, MapAll, Internal`ReciprocalSqrt, {}}, {
    ArcSin, Internal`Expm1, MapAt, ReplacePart, {}}, {
    ArcSinh, Fibonacci, MapIndexed, Rest, {}}, {
    ArcTan, First, MapThread, Return, {}}, {
    ArcTanh, FixedPoint, NDSolve`FEM`MapThreadDot, Reverse, {}}, {
    Arg, FixedPointList, MatrixQ, RotateLeft, {}}, {
    Array, Flatten, Max, RotateRight, {}}, {
    ArrayDepth, NDSolve`FEM`FlattenAll, MemberQ, Round, {}}, {
    Internal`Bag, Floor, Min, RuleCondition, {}}, {
    Internal`BagPart, Fold, Minus, SameQ, {}}, {
    BitAnd, FoldList, Mod, Scan, {}}, {BitNot, For, Compile`Mod1, Sec, {}}, {
    BitOr, FractionalPart, Module, Sech, {}}, {
    BitXor, FreeQ, Most, SeedRandom, {}}, {Block, Gamma, N, Select, {}}, {
    BlockRandom, Compile`GetElement, Negative, Set, {}}, {
    Boole, Goto, Nest, SetDelayed, {}}, {
    Break, Greater, NestList, Compile`SetIterate, {}}, {
    Cases, GreaterEqual, NonNegative, Sign, {}}, {
    Catch, Gudermannian, Not, Sin, {}}, {
    Ceiling, Haversine, OddQ, Sinc, {}}, {Chop, If, Or, Sinh, {}}, {
    Internal`CompileError, Im, OrderedQ, Sort, {}}, {
    System`Private`CompileSymbol, Implies, Out, Sqrt, {}}, {
    Complement, Increment, Outer, Internal`Square, {}}, {
    ComposeList, Indexed, Part, Internal`StuffBag, {}}, {
    CompoundExpression, Inequality, Partition, Subtract, {}}, {
    Conjugate, Compile`InnerDo, Piecewise, SubtractFrom, {}}, {
    ConjugateTranspose, Insert, Plus, Sum, {}}, {
    Continue, IntegerDigits, Position, Switch, {}}, {
    Cos, IntegerPart, Positive, Table, {}}, {
    Cosh, Intersection, Power, Take, {}}, {
    Cot, InverseGudermannian, PreDecrement, Tan, {}}, {
    Coth, InverseHaversine, PreIncrement, Tanh, {}}, {
    Count, Compile`IteratorCount, Prepend, TensorRank, {}}, {
    Csc, Join, PrependTo, Throw, {}}, {
    Csch, Label, Product, Times, {}}}]]], "Output",
 CellChangeTimes->{3.754897973871845*^9, 3.7549957344706483`*^9},
 CellLabel->
  "Out[261]//TableForm=",ExpressionUUID->"0c727ef7-1fe4-46b2-bb5b-\
33381b57810a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Memory Usage", "Subsection",
 CellChangeTimes->{{3.754898004573657*^9, 
  3.754898010080146*^9}},ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-\
c7e16140406d"],

Cell[BoxData[
 RowBox[{"MemoryUsage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.754897976850383*^9, 3.7548979821966505`*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],

Cell["MemoryUsage gives a visual overview of all datasets", "Text",
 CellChangeTimes->{
  3.7548980027240057`*^9, {3.754898034906535*^9, 
   3.754898050783702*^9}},ExpressionUUID->"0b15c18e-462f-410c-a373-\
4af09d51be09"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SpufqzrU9bnuVXVvPt1/nKnqXZrWs7+jBzNItDjMGCTNSa/9KVyTeWFUA+6U
nH/OwonKXxlvylz+cW9p327iFsom8n90ZtFSCLOtGUP1D81/nke0o6930s/P
W6YQ3RRRlBHrbK0/OSvnBcfxd3tEfTVosv77j5B/bM6uZn+37e41J9g3dZC0
HXn+aFXmSG2oEbIV3prYjHMWi6NuMxTGxpuT3JmYvOG0LZRt5N85S8g/XObt
xkj3n+44fxC+3Sxr6XrpTBF1ysjZF87Q8eA4C/fPy0j/nSiZf3CtXmvdf5b8
pw4SeaD9+VlWi5Rakfdp7jmLRc38Y+MtOpd/+t3IfxdsJX9zx9wPjiAxiM3r
t5pUA3iLLMqUcdWfknIq8vdPJuv1K8gif++SM03+I7dOfjDHr7Zz5B8/Z7HE
5K/HOTaX3Y2wNZvJv3u+6Mvf3kir87q/z39//PX/YMr46v9JCI5cuPGmsiJ/
P/PPsezTLeio+35mDZIhUTcEVzanjPw6nGWfWecsFn3NPxbnYC7bkfO8JB5i
Bu+fX81hUfk7K6bmTtE+DdbntXuz+R4zy6A/xXW2npQoiLJzgyNy97j8Y2dc
7W1PvU4tDjMGiSpqtSY14HKzunw9fM7CiT3w1cabMpedh+hk/nsht/xhX9zT
s/c13/QHgLVB/gfncU+z/4qv+QNABpD/4Xk8HtmOAoC9gPwBAA4I8gcAOCDI
HwDggGSW/wkAoGQWEe8eIPMHADggyB8A4IAgfwCAA4L8AaB0vnKxdUeXBPkD
QOnUWv679UH+AAC7AvkngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwDSaf9M
y+Z/nQX5J1Ca/MVfBNq6Katg+uf+4aQe7y9DTfyjeOGfk939n0ObF4dZJ507
ciL1Ki2UZee2ME8t6UT/IuVU+a/7B7w0+X9/fvQR/fj8brbcLv1PyP+nPPk/
ede/BGf/Lq/359s7wr8rW1VjoXjOWv/v78bOuQ/mxWH6SSeEa5C7/LOEYQvF
37SNx3svtczk5T9HnFf+rfgvN/vx84b8ffLL/16dr/cwn7F/+VT+VdRTsLHf
szthLYs6rbW/pDoxFFFN7PxvjI/H4Yn4Q+96KjoQrtFjB+qVLRSCVu4x8tSy
GlqrIrfh4ibG/KVlhxVa7Mq/Ub81vwX5O2whf+dvPbcDwWY4uth9Bby//N0e
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
l2NJ73B/o7WMZ9HhOpr52CU5avw3qeVFJsu/605QOK/89QTfyF9cBW4Xt6ws
498nIP+XiMm/GbtV97/zoeUfcdHASu5giNpbbpk8V3f3yeleV9YGnBzrcp0+
VNXA6oTS38FaYid0zuzl5Kaozej9+G9Ty4tMl79thDOw9pT5i0fBNtW3qX9w
gUD+i8jfDkyZ7zQDo7q2KUwzD+QgOZb84y6Kzmh/h+OBH2edTXmuudPwjjlZ
i4VdNRy+FrpJ9MCa2fgJBx7EmFgPxz9XLS8zV/7BMes0q2femn+4324xtw3I
f2n5O0+JzLCxt7LiCZj7mGjFgbMfvCdj8irpbRQllSeV2n24nuDvU/5qHOJd
/vEWgsQgUso5xaJ3PyMnVL8UZ7O3UKO3O08tS+A2JfhGTuq01d5XXqeB/ts+
bRoff9snWNIxe5qrAPJfS/4AAMuivOcv13bC9/zl3uYi0X9unvEif+QPAGXA
b/gmgPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBKB/kngPwBoHSQfwLIHwBK
B/kngPwBoHS+crF1R5cE+QMAHBDkDwBwQJA/AMABQf4AAAcE+QMAHBDkDwBw
QJA/AJQOr3omgPwBoHS++CWv+SB/ACgd5J8A8geA0kH+CSB/ACgd5J8A8geA
0kH+CSB/AEjncT2fTtV941Yg/wSQ/464VyfJ+fpotrazyzA0zWTJ7uDIOXeP
6YptsNa7lJPOFVWkXqWFsuzcFuapJZ26Tr2yqfKvB+KKlwhN/t+fH31EPz6/
my23S/8T8v9B/rvFzpXotJt2+NjGPVJ3uWto3WSl80kdaSxVVS+FwPlSwhY2
F1q7P7miPLXMJGkUSvLKvxX/5WY/ft6Qv09u+d+rc1Wd25zlWtlMVuandoi4
OW8pSesSyKmWMu20Y16evlug6k3pSTOA5J2SdkyzUVPQ6LED9coWCkEr9xh5
almNyIjSbkfFtH0e4t19rtFiV/6N+q35LcjfIb/8T90cbAaGMqLUUV5MyroQ
Tn9nLXf08ywsWGYM3VbHe2eLqv00oyoShaFjR+o1x8g6nrmNf648taxDPHXw
uhMrmDHzj7lfyt+uCXUl633Bho/LxbmBQP4v4Y5/O1Cc5ODg8o/fzIs7/hH8
5ZKMCwTL0TQ6JhJteywTFp2PjqRJWXRQr2xhO5jvZkP0IrR+LWswWf5dH4PC
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
    "], {{0, 709}, {511, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{511, 709},
  PlotRange->{{0, 511}, {0, 709}}]], "Input",ExpressionUUID->"538c1a9a-c29d-\
462c-aafe-1d9d7b0e26f9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Data manipulation and visualisation", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, 
   3.754896730602828*^9},ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-\
22990e083b10"],

Cell[CellGroupData[{

Cell["Import and show Data", "Subsection",
 CellChangeTimes->{{3.7549994514814043`*^9, 
  3.7549994633790565`*^9}},ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-\
01d9fab680a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"simple", " ", "3", "D", " ", "dataset"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "vox"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7549964692498875`*^9, 3.7549964755607624`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "the", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"data", ",", "vox"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75489575524968*^9, 3.7548957584863043`*^9}, {
  3.754995988097462*^9, 
  3.754995993429183*^9}},ExpressionUUID->"7d5996b5-b119-4a70-987f-\
a14d8037aa23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "plot", " ", "the", " ", "data", " ", "as", " ", "a", " ", "grid"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"PlotData", "[", 
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "3"}], "]"}], "]"}], ",", "3"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7548978782380743`*^9, 3.7548979239802003`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Automatically find cross section images", "Subsection",
 CellChangeTimes->{{3.754900085790572*^9, 
  3.7549001005289216`*^9}},ExpressionUUID->"b78c9120-ccf2-40e5-87d7-\
a484213417b3"],

Cell["\<\
By also providing the voxel size the pos is in mm else it will be in vox \
position\
\>", "Text",
 CellChangeTimes->{{3.7549970681669893`*^9, 
  3.754997097646651*^9}},ExpressionUUID->"dc9dff42-f5b7-4251-8736-\
a0dca6b379bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"data", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdat", "=", 
   RowBox[{"GetSliceData", "[", 
    RowBox[{"data", ",", "pos"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{"pdat", ",", "vox", ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.754900227384843*^9, 3.754900278369254*^9}, {
  3.754900311661749*^9, 3.7549003196111603`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"5a9a50a3-b161-48d9-a14d-cc00a14c8221"],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"MakeSliceImages", "[", 
   RowBox[{"pdat", ",", "vox", ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
    RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.754900330522708*^9, 3.754900358891019*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rescaling Data", "Subsection",
 CellChangeTimes->{{3.7548972317539077`*^9, 
  3.7548972416276026`*^9}},ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-\
5cb8ad6ed729"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "dimensions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataReD", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataReD", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897282795484*^9}, {
  3.7548973385554056`*^9, 3.7548973428257017`*^9}, {3.75491362838943*^9, 
  3.75491362884214*^9}, {3.754996052863373*^9, 3.754996054764976*^9}, {
  3.754996104164212*^9, 3.7549961231872067`*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{
  3.754897343217065*^9, {3.754996042782299*^9, 3.754996067714591*^9}, {
   3.7549961053277583`*^9, 3.754996130795188*^9}},
 CellLabel->
  "Out[281]=",ExpressionUUID->"bb71510c-74f8-43af-810d-0c0d83bfa0da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50", ",", "100", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.754897343217065*^9, {3.754996042782299*^9, 3.754996067714591*^9}, {
   3.7549961053277583`*^9, 3.7549961308012037`*^9}},
 CellLabel->
  "Out[282]=",ExpressionUUID->"e231f42d-8499-4b0e-9bc2-9adc74a815d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"to", " ", "specific", " ", "voxel", " ", "Size"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"voxNew", "=", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "2"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRe", "=", 
     RowBox[{"RescaleData", "[", 
      RowBox[{"data", ",", 
       RowBox[{"{", 
        RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRe", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7548972474095426`*^9, 3.754897349049699*^9}, {
  3.7549136307567587`*^9, 3.754913632740061*^9}, {3.7549960717341003`*^9, 
  3.754996116028576*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7548973498231287`*^9, {3.7549960886843877`*^9, 3.754996132061054*^9}},
 CellLabel->
  "Out[285]=",ExpressionUUID->"17e573a1-7bdf-4fac-8551-78b546d4f566"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"38", ",", "240", ",", "240"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7548973498231287`*^9, {3.7549960886843877`*^9, 3.7549961320675716`*^9}},
 CellLabel->
  "Out[286]=",ExpressionUUID->"d3d67d74-80e3-4617-a452-8a07e749698b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cropping", "Subsection",
 CellChangeTimes->{{3.754895767888637*^9, 
  3.7548957752315803`*^9}},ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-\
5b69733ed3ff"],

Cell[CellGroupData[{

Cell["Automatic crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 
  3.754895939466611*^9}},ExpressionUUID->"968fa70b-c4b4-4d48-a949-\
8da4355d6428"],

Cell[BoxData[
 RowBox[{
  RowBox[{"crop", "=", 
   RowBox[{"FindCrop", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548957772353544`*^9, 3.75489578023491*^9}, {
  3.7548958558205953`*^9, 3.754895858171589*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataCrop", "=", 
   RowBox[{"ApplyCrop", "[", 
    RowBox[{"data", ",", "crop"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754895864337891*^9, 3.754895874794386*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548958768655567`*^9, 3.7548958814837*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Apply To Rescaled Data", "Subsubsection",
 CellChangeTimes->{{3.754996141489622*^9, 
  3.754996149022614*^9}},ExpressionUUID->"267579d6-9b73-4c4b-aa48-\
be3e08dfda04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataCR", "=", 
   RowBox[{"ApplyCrop", "[", 
    RowBox[{"dataRe", ",", "crop", ",", 
     RowBox[{"{", 
      RowBox[{"vox", ",", "voxNew"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754996151823556*^9, 3.754996180449548*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataCR", "]"}]], "Input",
 CellChangeTimes->{{3.754996181470619*^9, 3.754996185551729*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual crop", "Subsubsection",
 CellChangeTimes->{{3.7548959281933174`*^9, 
  3.7548959469545145`*^9}},ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-\
4d6d8bf9eb94"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataCrop", ",", "crop"}], "}"}], "=", 
   RowBox[{"CropData", "[", 
    RowBox[{"data", ",", "vox"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dataCrop", "]"}]}], "Input",
 CellChangeTimes->{{3.754895886578994*^9, 3.754895900203232*^9}, {
  3.754898147470261*^9, 3.7548981511626015`*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "85", ",", "122"}], "}"}]], "Output",
 CellChangeTimes->{3.754898166676848*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"9cbff17b-1b63-475e-a27e-bf527e719314"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCrop", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959110895987`*^9, 3.754895916314752*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "reverse", " ", "the", " ", "crop", " ", "to", " ", "the", " ", "original",
     " ", "dimensions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"Dimensions", "[", "data", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataRev", "=", 
     RowBox[{"ReverseCrop", "[", 
      RowBox[{"dataCrop", ",", "dim", ",", "crop"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "[", "dataRev", "]"}], "\[IndentingNewLine]", 
   RowBox[{"dataRev", "\[Equal]", "data"}]}]}]], "Input",
 CellChangeTimes->{{3.7548980821477985`*^9, 3.754898209277037*^9}, {
  3.754996203266838*^9, 
  3.7549962378253393`*^9}},ExpressionUUID->"95428a0b-7e40-4b51-92e8-\
5da74f819672"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{{3.7548981183952923`*^9, 3.7548981428724585`*^9}, {
  3.7548981968626957`*^9, 3.754898210009898*^9}},
 CellLabel->
  "Out[314]=",ExpressionUUID->"18f4e781-e28f-4dd1-81ae-1feeb8387ed5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7548981183952923`*^9, 3.7548981428724585`*^9}, {
  3.7548981968626957`*^9, 3.7548982100189414`*^9}},
 CellLabel->
  "Out[315]=",ExpressionUUID->"8f6197cf-8e3e-4a70-ad86-43ec5763186a"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Splitting Data", "Subsection",
 CellChangeTimes->{{3.7548959535708256`*^9, 
  3.7548959678359003`*^9}},ExpressionUUID->"93607360-ed31-4145-8241-\
5b261eccc5b0"],

Cell[CellGroupData[{

Cell["Split and Stitch", "Subsubsection",
 CellChangeTimes->{{3.7548966988321905`*^9, 
  3.7548967050227375`*^9}},ExpressionUUID->"4f8cb032-dea0-497b-bd1c-\
d723913ce783"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
   RowBox[{"CutData", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75489597096496*^9, 3.754895981690065*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1QtMU2cUB/DGKdZNNnXonPiobE6mCCivjgn8eRcooy2FAqX0WlhkE0Rx
DwlMb0TwxQR0cTo31kkUnZli4gPUJRcnihPRIWYwkRVRxPmIRogiEFfH+ZLx
NWlufj3339t7v3O+zrbk6D4eJZPJrPb3y+Pw61HQ8DED9AFGWs55AmcnzlM5
T+es4OzC+V3O73F25TyPsxtnd86enBdyXsTZi7M3Zx/Ovpz9OCs5f8DZH30e
o/dWDqWTP8TKxp64F/eZF+Pit/5T+64yByDmWt2XY08zB8JR3ZR9cDdzEAYP
3F/kn8MMRFRt9L7bbRm2COQ0JsccCFhC9WBsn9j82O9TE9WDUXO8Z9najCSq
h2B7ielN6414qocgcblj01uecVQPxZ7C8ps9JSqqh0JzytG193ko1cNQk5vp
eN0SRPUwPNuhmqyUs+cQDlkXjt4po+cqhmNnR9+MWx1sHSKg2lK3K7GfLEZg
9db9XpZ09twjocoKvbGtjJ6zGAnhu+W2uRPZOqjQ6uqsbXnKvl+F/T8WO5de
ZusYhWftjRWdA7TOYhTkMQ9Kf2tg9WhkFpQrHfLY90cDdblHC39ifRED66r8
e6OKqY/EGCjcJm8q/pX1mRplK9cVfH+a+lJUQ7P7yOhJQ6zPYyFe6rrdVEBz
JcbS5+z1kd0zzvn23R+eW9HuV4LajqnZHMbhylfd1xZMm035OEjf5Cvl2vep
roFkfmPD8gG6PjRwrT8pL4xm96uBvMMrpCp98bAlDdqvVudVuIPyWpT8/IfD
UQ9aT2hx/Fhbff/vUZTXIvZA29rmBg3ltchq8vHKtukpr8O1Cyc7y88nU14H
J/dX682CmfI6CLW9XxjHWSivQ66bX9tUJevfeLi0VjcNNpIRD/3SKfHtg2SR
+pLNk8RZpkfYrLx8nxcsr0fzvKpzjb0sr0f9ysC/slvJkh6xtao1A0fY9RNw
6XrnYFMYyyegrXjaubQd9HvFBKzPe1IZN4bmSUpAbqRDt7tLGuUTkXG9srZn
P7v/RCR1PJ09c04C5RPheUXj9HWMlvL282+Hjq0uVVPegLOtm8fo1tB8wYDm
S/M7S1oiKG+A5dCO1/apaX0kA1z/7jUeLgqkfBI8x7fVbbL5Uz4JrQN3D80a
Yv2aBOHFrdWafbSvSvbzncIN6568Q/lkiKnelu6WKZS3O+BijV/FU+pH+325
jkvxDq4etpQMKeN8R0HZeMqnYMWDjdkHA+ZTPgUo/Ce6LJTNUwqSZv4p33M6
gK6fAlF/T5FlYP1nRGC3aqGjiQwjpL76Lf1Kuj/RCLnpuLPHWdpfJCOyWnzj
XOYFUz4VNZ7tjqu66HykomHOtju1HbR/iKmYkNM/63ADzauUCtutXT0Rqzwo
b7LvPyr13AX0PwL7Pnnz2BnxbbYfmTDB+7lzpi/dj2RCprNx7+A2+j2yNAx2
1fjsfLnP/ZdPw5ngi5W3H7P5SYNg9kkfaqb9VLL3TVHf0k9OsD42I+OHh4sd
Lhsob8bz8metG4RUypux7tGKyPTPBcqbofP/5e5nyRbKC5ge1KXc6kb9qxCw
vdi54vUq1s8CgqdviDp1gSwIqJuzuejEQzYfAvJDHCZNYfNmFRB20m9ZN5sn
ia7L5s3GWbZkpBWcwVngLHK2cpY42zjLLCOt4AzOAmeRs5WzxNnGWZY+0grO
4CxwFjlbOUucbZz/d/wXbMMrUg==
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1XtQVHUUB/AbloHZyATKQ1JIl0ShFBERML48BRZkHyws7LJ7XdCwUFFT
8Nn1MSECCqZWiLLGS0cbGFMDX3MHxT8UlVHzbW1q6jJovkM0i4bza/LHDHPn
w5nv3r33d87BxzJHM91BEARr7++/176fBxF91xzQH/C6HTk7c3bl7M7Zi7M3
5w84j+Tsy3kU59Gc/Tl/xHks53GcAzmP5xzEeQLnYM4TOYdwngT7upw6PMsm
h0KIKAo+fp05DFFv7Z+V0sgcjjNxc7tbLMyTsVz7Yert+xbyJ9jck6/9LIk5
ArF3DpYdWDiNDBiqN7ZH54l9loBnz2vjfCwmqkei6uTcoU1bDVSPxHfXfG95
NuipHoWBD58d+LtaR/UolLmn3OzepaF6NOrrLYcWnU+hejSqyqtd835LpHoM
esx5W97dFkf1GHTl7R/f7R5N9VgUfrWltnI6qB6LsY2Hlyp/Dqd6HEbZK7If
eYVSPQ62Y75Jvyez9zoFgtNtP/8x9N6lKQipjHNZVcjOJR56Obxp6Us6Nyke
qq1+NZXr2DkmoGOkmxP6sXoCxJIdIZXh7NwToRoSVrd6IvWFlIjyR+o1e/5k
faSEtKmfW/sK6jNJifyMAGn3rwFUT8KDW3MClpyivpWSoBr8/ZAbw1lfJ8N7
nk2ZC+p7KRnO7zW/8fZCBdWnwvZEXXrfidWnQnD40eCvZ/kUWM2KmgUyzYGU
guZxxxvXNrLvp8LdnfnVwwPpfUCF5pKX0fPfofcrqXA+YURFRWtkn2UVBnSU
B9z+mM5LUOPSYI+jXTFKyqvhWbLR0+kLFeXV8NPvfLp3sZbyarRXPD9Wuy2N
8ho4mIJUkDMor8GF5cUbEo8YKa/BHz9detpWYKa8Bm827L6Waad+FbRwbb18
1vUG9TO06Jz5+VC3WgvltXDweP7kji/Nh6yF43rdpJI5bF5Ske+47J5GIiMV
xROcR7ZkkKVUKHr62xte0OfJqdD7lja7ZJMFHWyZ62ert7D767C67OmXijo2
TzpIni/ac/qz76+Dx/Zm5/GL6fmENETGJ29w+e/50/B4VdfaQQ/o/UhpOH3u
zAylIpXyaWgM8p2rLFBTPh2moq9neHQmUz4dj4K2t5QmJ1A+HfX59W6f+sRS
Ph0nzsXVa1fTeQq9c7xycIfPJTpv6JEfU3Xs1SE2L3o4Fi3WtO6j/pb1aIof
bde2sb2ZAbHy8mP1RepnZKD8pjT/QBjrt96649piYx259zmt86/D2M32cCbc
T5oOD0+nfkQmxP5FnRckNk+9XtA2e0UzzZ+cicKTCb+Y9rA9akBuniLWJXgS
5Q34dsT0npQAtg8MWHN3RmlMJVk2oHBAtv+4zWTBiB0LT60J1ZFhRMige6+u
urK8ER0NrS6HAlneCDn0m847XmGUz4JtbNWyYL/JlM/COl2w4wkV21dZyL1i
H5h5NYryWShtcx2Tlszmx4SmMk/rppW0D2FCh9eA4Huz2L40waL4q+CHAtqn
sgnvzzyVpcqlfSuYsfJKw74bM2kfw4zCs6g+amD72oz2h24VU4fRPpfNUJTs
tSuVbH5E7Bw2b1eLnvrXW0SOckJ1SaCFPk+El31JwK3LZFHE6YhFnc5aNh8i
aroE4Ugt2SpiQenG48UX2byJCD5YM2zZY7KN3Zf9v5v2ur05g7PIWeJs5Sxz
tnEWLNz9OYOzyFnibOUsc7ZxFrJftzdncBY5S5ytnGXONs7/u/4DFoEqkA==

       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {110., 26.60260846626673}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {80., 156.01012300892353`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 120.}, {80., 120.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 160.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.754996280981968*^9},
 CellLabel->
  "During evaluation of \
In[294]:=",ExpressionUUID->"7baa6da3-a77c-4a8a-86e3-efca81ada7af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"left", ",", "right", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548959833550625`*^9, 3.7548959917719293`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataStich", "=", 
   RowBox[{"StichData", "[", 
    RowBox[{"left", ",", "right"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754896002692444*^9, 3.754896037290599*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],

Cell[BoxData[
 RowBox[{"PlotData", "[", "dataStich", "]"}]], "Input",
 CellChangeTimes->{{3.754896038898155*^9, 3.7548960516428165`*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"cut", " ", "with", " ", "known", " ", "value"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
    RowBox[{"CutData", "[", 
     RowBox[{"data", ",", "80"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7549962901804953`*^9, 3.754996316284766*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example make both legs left", "Subsubsection",
 CellChangeTimes->{{3.7548960915332003`*^9, 
  3.754896117086524*^9}},ExpressionUUID->"2e5b960f-ce39-4cd9-a390-\
ec4c724d0794"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Split", " ", "in", " ", "Left", " ", "and", " ", "right", " ", "leg"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"left", ",", "right", ",", "cut"}], "}"}], "=", 
     RowBox[{"CutData", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "crop", " ", "to", " ", "minimal", " ", "Space", " ", "and", " ", "flip", 
     " ", "right", " ", "leg"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AutoCropData", "[", "#", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"left", ",", "right"}], "}"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"rightC", "=", 
     RowBox[{"Reverse", "[", 
      RowBox[{"rightC", ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataC", "=", 
     RowBox[{"{", 
      RowBox[{"leftC", ",", "rightC"}], "}"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "maximal", " ", "common", " ", "dimensions", " ", "and", " ",
      "make", " ", "into", " ", "one", " ", "dataset", " ", "of", " ", "same",
      " ", "dimensions"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dimMax", "=", 
     RowBox[{"FindMaxDimensions", "[", "dataC", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dataP", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PadToDimensions", "[", 
         RowBox[{"#", ",", "dimMax"}], "]"}], "&"}], "/@", "dataC"}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548961301895275`*^9, 3.7548961547482977`*^9}, {
  3.7548962451826963`*^9, 3.754896265258726*^9}, {3.7548964883490496`*^9, 
  3.7548964898496*^9}, {3.7548965238705263`*^9, 3.7548965522816167`*^9}, {
  3.754896607389285*^9, 3.754896665362072*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataP", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548965964969034`*^9, 3.7548965998974333`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Masking", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7548957249234715`*^9, 3.7548957340260887`*^9}, {
   3.754896730602828*^9, 
   3.7548967366514826`*^9}},ExpressionUUID->"ff48cf42-cb85-4663-b23e-\
43657c60dfe7"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549995580790825`*^9, 
  3.754999562037315*^9}},ExpressionUUID->"47e835ce-4699-4923-898e-\
db43e06f49d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simple", " ", "3", "D", " ", "dataset", " ", "with", " ", 
    "segmentations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"labels", ",", "vox"}], "}"}], "=", 
     RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7548957374891505`*^9, 3.754895753834767*^9}, {
  3.7548968059006653`*^9, 3.7548968188103466`*^9}, {3.754996484117587*^9, 
  3.754996490273179*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "labels"}], "]"}]], "Input",
 CellChangeTimes->{{3.754897587484125*^9, 3.7548975926516113`*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"d449b604-02c3-4b41-963f-9c32375bec9f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create Mask", "Subsection",
 CellChangeTimes->{{3.754896948255337*^9, 
  3.754896952256016*^9}},ExpressionUUID->"586003b9-59ba-4f2a-a670-\
aeb201812c92"],

Cell[CellGroupData[{

Cell["Automated and threshold masking", "Subsubsection",
 CellChangeTimes->{{3.754897629379714*^9, 
  3.754897646170933*^9}},ExpressionUUID->"69a2c8a5-fb3b-4839-94de-\
bdb3a0a3b69c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75489694083027*^9, 3.7548969455958157`*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-cdffb72eccbf"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "mask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754896956287656*^9, 3.7548969633718243`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"a853d33f-3e4d-4a97-be23-2d351b6b6b09"],

Cell["\<\
Create mask based on threshold, smooth the mask, close holes larger then two, \
maintain two separate masks.
Default the algorithm finds only one mask but it is possible to maintain two \
separate masks.\
\>", "Text",
 CellChangeTimes->{{3.7548970239521685`*^9, 3.7548970593877783`*^9}, {
  3.7549965137525163`*^9, 
  3.754996538270686*^9}},ExpressionUUID->"b2a29537-e3dd-40af-9ab3-\
396f946f0c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask1", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548970656280413`*^9, 3.7548971136952505`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanMask2", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"data", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7548969762405014`*^9, 3.754897019614797*^9}, {
  3.7548971000115485`*^9, 3.7548971153576403`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"cleanMask1", ",", "cleanMask2"}], "}"}]}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7548968195865602`*^9, 3.75489682314767*^9}, {
  3.7548969267494087`*^9, 3.7548969272596483`*^9}, {3.754897123440123*^9, 
  3.7548971322361813`*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],

Cell["Apply the mask", "Text",
 CellChangeTimes->{{3.7548984571554413`*^9, 
  3.7548984608932505`*^9}},ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-\
fdd16430c436"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataMask", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"data", ",", "cleanMask2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754898464052139*^9, 3.754898476810136*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", "dataMask"}], "]"}]], "Input",
 CellChangeTimes->{{3.754898478482792*^9, 3.754898483306509*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manual segmentation processing", "Subsubsection",
 CellChangeTimes->{{3.7548971432028255`*^9, 3.7548971624585037`*^9}, {
  3.754997254313919*^9, 
  3.7549972630274973`*^9}},ExpressionUUID->"ded5d62a-f398-4005-9427-\
e92efe288312"],

Cell["\<\
Separate a segmentation with multiple labels into individual masks.\
\>", "Text",
 CellChangeTimes->{{3.754897188163585*^9, 3.7548971975499716`*^9}, {
  3.7549966745269656`*^9, 
  3.754996682995769*^9}},ExpressionUUID->"30dac8a6-273d-4495-981c-\
2a1d6d3a8f80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"seg", ",", "lab"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lab", " ", 
  RowBox[{"(*", 
   RowBox[{"the", " ", "label", " ", "numbers"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "seg", "]"}]}], "Input",
 CellChangeTimes->{{3.754897200405677*^9, 3.7548972097258873`*^9}, {
  3.7548973800581846`*^9, 3.754897407083606*^9}, {3.7549966939951077`*^9, 
  3.754996707304601*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",",
    "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", "26"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.754897401998638*^9, 3.754897407645667*^9}, {
   3.7549966878547273`*^9, 3.7549967081077375`*^9}, 3.7549972742124424`*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"05e9e289-db4f-4a81-a5bf-62df53e19ddc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{{3.754897401998638*^9, 3.754897407645667*^9}, {
   3.7549966878547273`*^9, 3.7549967081077375`*^9}, 3.7549972742189636`*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"f15b2f95-bd82-4fac-9a86-946e099737ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "14", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{{3.754897401998638*^9, 3.754897407645667*^9}, {
   3.7549966878547273`*^9, 3.7549967081077375`*^9}, 3.7549972742249765`*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"33f2aa7c-ad2f-4a67-8b90-06288fcf88aa"]
}, Open  ]],

Cell["\<\
Smooth the segmentations labels should be separate volumes and can be joined \
after smoothing\
\>", "Text",
 CellChangeTimes->{{3.7548974138922253`*^9, 3.7548974270718637`*^9}, {
  3.7549967229077616`*^9, 3.754996739591938*^9}, {3.754997287286001*^9, 
  3.7549972904431376`*^9}},ExpressionUUID->"1f4758f5-443f-4df8-b208-\
0f642bb70f02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"segS", "=", 
   RowBox[{"SmoothSegmentation", "[", "seg", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsS", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{"segS", ",", "lab"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754897429058359*^9, 3.7548974455303636`*^9}, {
  3.7548975010185823`*^9, 3.754897551866062*^9}, {3.7549967217767105`*^9, 
  3.7549967425199823`*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labels", ",", "labelsS", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548974476027365`*^9, 3.75489744853773*^9}, {
  3.7548975206376605`*^9, 3.754897520693297*^9}, {3.754897554553789*^9, 
  3.754897560410267*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],

Cell["\<\
Split a Segmentation in 5 equal parts along the slice direction\
\>", "Text",
 CellChangeTimes->{{3.754900015110106*^9, 3.7549000280632486`*^9}, {
  3.7549968084521008`*^9, 
  3.75499681990247*^9}},ExpressionUUID->"1b611f18-649c-473d-992a-\
229c3cb8c4f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"segSplit", "=", 
   RowBox[{"SegmentMask", "[", 
    RowBox[{
     RowBox[{"segS", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "segSplit", "]"}]}], "Input",
 CellChangeTimes->{{3.7549000341808167`*^9, 3.754900077803177*^9}, {
  3.7549968320547333`*^9, 3.754996849848937*^9}, {3.7549969480467005`*^9, 
  3.7549969627801375`*^9}, {3.7549973916421013`*^9, 3.75499739634338*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{3.75499739669883*^9, 3.754997427186372*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"366e6703-f0ca-472c-8506-a558e6c19df0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"segPlot", "=", 
   RowBox[{"MergeSegmentations", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", "segSplit"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"MakeSliceImages", "[", 
    RowBox[{
     RowBox[{"GetSliceData", "[", 
      RowBox[{"segPlot", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "90", "}"}], ",", 
         RowBox[{"{", "57", "}"}]}], "}"}]}], "]"}], ",", "vox", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ImageLegend", "\[Rule]", "True"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7549968586522613`*^9, 3.7549969027831244`*^9}, {
   3.7549971148782835`*^9, 3.754997193776729*^9}, 3.7549972305497293`*^9, {
   3.754997362242589*^9, 3.754997385157033*^9}},
 CellLabel->
  "In[378]:=",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{
       RasterBox[CompressedData["
1:eJzt17FL1HEYx/HDcmmIiISKFs1BcAi8FqdvBS3hUoYQYsSBpEjl1NAaLU6u
UdAR4tA/0FRDoDjUeXAJokOnEKm4iURb19jg8OP64qO9hgceXvNneXdXntwZ
P1EqlS60rtq6P/+NZzOXeh7X0v7efE/X4kqa7q0/GH64mTjnvKjX3i2vjOzW
0+Vzo9cbZ9dT8+Pp1+W3q/yYeLS9cc4555xzzvlhebRe4/qXc84555xzznN4
tF7j+pdzzjnnnHPOc3i0XuP6l3POOeecc87b8WhdxvUv55xzzjnnnLfjg6fO
dJbn19LE1ptmZWEjTY1/urK/V+P/qUfbJ+ecc84555wf5NF6ih8tj7Znzjnn
nHPOOT/Io/UUj+nRdss555xzzjnnRT1aZ/GYHm23nHPOOeecc17Uo3UWj+nR
dss555xzzjnnRf1eeWBp7OROuvbz++enL7bS7OSji+tTDc7/8mi75Zxzzjnn
nPOiHq2zeEyPtlvOOeecc845/1cerb+4zuWcc84555zzHB6ty7j+5Zxzzjnn
nPN2/Ob7+43nHTupevVrX+/LZvpwu3/oW6uD+PH2aDvknHPOOeec89wercu4
/uWcc84555zzHB6ty7j+5ZxzzjnnnPMcHq3LuM7lnHPOOeec8xwerde4/uWc
c84555zzHF5/NXP3/OiP1P9rdaw6V0vblcat7tkv/Ih5tF1xzjnnnHPO+WF5
tF7j+pdzzjnnnHPOc3i0XuM6l3POOeecc87b8Wi9xnUu55xzzjnnnOfwaB3H
9S/nnHPOOeec5/BoHcf1L+ecc855ZP8NAOt4Ug==
        "], {{0, 0}, {160, 25}}, {0, 1}], 
       RasterBox[CompressedData["
1:eJztw0EJACAABLADLeHTSkYQfFvJqNrAAhuszz1WSdLe89YAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/F10TQJq
        "], {{0, 0}, {160, 25}}, {0, 1}]}, {
      AspectRatio -> 0.3125, Frame -> False, FrameLabel -> {None, None}, 
       FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
        PlotRangePadding -> 1}], 
     FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               RasterBox[CompressedData["
1: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
zg==
                "], {{
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                  7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 112.5}, {
                  7.5, -112.5}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -103.5}, 
                    Offset[{2.5, 0.}, {7.5, -103.5}]}, {{7.5, -94.5}, 
                    Offset[{2.5, 0.}, {7.5, -94.5}]}, {{7.5, -85.5}, 
                    Offset[{2.5, 0.}, {7.5, -85.5}]}, {{7.5, -76.5}, 
                    Offset[{2.5, 0.}, {7.5, -76.5}]}, {{7.5, -58.5}, 
                    Offset[{2.5, 0.}, {7.5, -58.5}]}, {{7.5, -49.5}, 
                    Offset[{2.5, 0.}, {7.5, -49.5}]}, {{7.5, -40.5}, 
                    Offset[{2.5, 0.}, {7.5, -40.5}]}, {{7.5, -31.5}, 
                    Offset[{2.5, 0.}, {7.5, -31.5}]}, {{
                    7.5, -13.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, -13.49999999999999}]}, {{
                    7.5, -4.5}, 
                    Offset[{2.5, 0.}, {7.5, -4.5}]}, {{7.5, 4.5}, 
                    Offset[{2.5, 0.}, {7.5, 4.5}]}, {{7.5, 13.5}, 
                    Offset[{2.5, 0.}, {7.5, 13.5}]}, {{7.5, 31.5}, 
                    Offset[{2.5, 0.}, {7.5, 31.5}]}, {{7.5, 40.5}, 
                    Offset[{2.5, 0.}, {7.5, 40.5}]}, {{7.5, 49.5}, 
                    Offset[{2.5, 0.}, {7.5, 49.5}]}, {{7.5, 58.5}, 
                    Offset[{2.5, 0.}, {7.5, 58.5}]}, {{7.5, 76.5}, 
                    Offset[{2.5, 0.}, {7.5, 76.5}]}, {{7.5, 
                    85.50000000000003}, 
                    Offset[{2.5, 0.}, {7.5, 85.50000000000003}]}, {{7.5, 
                    94.5}, 
                    Offset[{2.5, 0.}, {7.5, 94.5}]}, {{7.5, 103.5}, 
                    Offset[{2.5, 0.}, {7.5, 103.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]], 
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]], 
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]], 
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]]}, StripOnInput -> False], 
                    "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks",
                   StripOnInput -> False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[{
              GrayLevel[0], Bold, 12}], FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
        DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"DarkRainbow\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"0", ",", "5.`"}], "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold", ",", "12"}], "}"}], "]"}]}]}], "]"}]& )], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True],
   TemplateBox[{
     GraphicsBox[{
       RasterBox[CompressedData["
1:eJzt179L1HEcx/HDammIiIIKF80hcBC6FqdPBS7S0g+CECUOpEQqp4ZWcXFy
jYIOEYf+gaYagqKhroNLEB26gtDETUTauuhPyO/d+/v9PoYPfHis79fyHKg9
vjl9pFKpnOu8euf9/V97utg/+KiR9vdWB898WEtzQ817t+7/SJxzzjnPzhuv
vqzd2W2mC6cnrrZObab22xMvqsvrvMcebSecc84555xznneP1n1c/3LOOeec
c855Fh6t+7j+5ZxzzjnnnPNuerQeLJtH2wPnnHPOOeec592jdR/Xv5xzzjnn
nHOehY8eP3msurqRHmy/bNfef0+z0+9G9vcavMcebSecc84555xznneP1n1c
/3LOOeecc855Nz1aD5bNo+2Bc84555xzzovq0XqwbB5tD5xzzjnnnHNeVI/W
g2XzaHvgnHPOOeec86L63eqlj5NHd9KVg5+fnixsp6WZh+c3Z1v8kD3a3Tnn
nHPOOee8bB6tE4vq0e7OOeecc84550X1aD1YNo+2B84555xzzjnPu0frPq5/
Oeecc8455/x/fOz1VGu+byfVL3+9OPSsnd7cGL7+rdNZvLcebSecc84555xz
nheP1ndc/3LOOeecc855Fh6t77j+5ZxzzjnnnPMsPFrfcf3LOeecc84551l4
tL7j+pdzzjnnnHPOs/Dm88XbZye20vDv9cn6SiP9qrXGB5Y+86AebT+cc845
55xznneP1n1l82h74JxzzjnnnHP+z6P1Y1482h0555xzzjnnnB+uR+tQncs5
55xzzjnnPAuP1qf6l3POOeecc855Nz1at+pfzjnnkf0PgDf7AQ==
        "], {{0, 0}, {160, 25}}, {0, 1}], 
       RasterBox[CompressedData["
1:eJztw0EJACAABLADLeHTSkYQfFvJqNrAAhuszz1WSdLe89YAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/F10TQJq
        "], {{0, 0}, {160, 25}}, {0, 1}]}, {
      AspectRatio -> 0.3125, Frame -> False, FrameLabel -> {None, None}, 
       FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
        PlotRangePadding -> 1}], 
     FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               RasterBox[CompressedData["
1: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
zg==
                "], {{
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                  7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 112.5}, {
                  7.5, -112.5}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -103.5}, 
                    Offset[{2.5, 0.}, {7.5, -103.5}]}, {{7.5, -94.5}, 
                    Offset[{2.5, 0.}, {7.5, -94.5}]}, {{7.5, -85.5}, 
                    Offset[{2.5, 0.}, {7.5, -85.5}]}, {{7.5, -76.5}, 
                    Offset[{2.5, 0.}, {7.5, -76.5}]}, {{7.5, -58.5}, 
                    Offset[{2.5, 0.}, {7.5, -58.5}]}, {{7.5, -49.5}, 
                    Offset[{2.5, 0.}, {7.5, -49.5}]}, {{7.5, -40.5}, 
                    Offset[{2.5, 0.}, {7.5, -40.5}]}, {{7.5, -31.5}, 
                    Offset[{2.5, 0.}, {7.5, -31.5}]}, {{
                    7.5, -13.49999999999999}, 
                    Offset[{2.5, 0.}, {7.5, -13.49999999999999}]}, {{
                    7.5, -4.5}, 
                    Offset[{2.5, 0.}, {7.5, -4.5}]}, {{7.5, 4.5}, 
                    Offset[{2.5, 0.}, {7.5, 4.5}]}, {{7.5, 13.5}, 
                    Offset[{2.5, 0.}, {7.5, 13.5}]}, {{7.5, 31.5}, 
                    Offset[{2.5, 0.}, {7.5, 31.5}]}, {{7.5, 40.5}, 
                    Offset[{2.5, 0.}, {7.5, 40.5}]}, {{7.5, 49.5}, 
                    Offset[{2.5, 0.}, {7.5, 49.5}]}, {{7.5, 58.5}, 
                    Offset[{2.5, 0.}, {7.5, 58.5}]}, {{7.5, 76.5}, 
                    Offset[{2.5, 0.}, {7.5, 76.5}]}, {{7.5, 
                    85.50000000000003}, 
                    Offset[{2.5, 0.}, {7.5, 85.50000000000003}]}, {{7.5, 
                    94.5}, 
                    Offset[{2.5, 0.}, {7.5, 94.5}]}, {{7.5, 103.5}, 
                    Offset[{2.5, 0.}, {7.5, 103.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]], 
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]], 
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]], 
                    Directive[
                    Opacity[1], 
                    Directive[{
                    GrayLevel[0], Bold, 12}]]}, StripOnInput -> False], 
                    "GraphicsLabel", StripOnInput -> False]}, "GraphicsTicks",
                   StripOnInput -> False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            Directive[{
              GrayLevel[0], Bold, 12}], FontFamily -> "Arial"}, Background -> 
           Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
        DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"DarkRainbow\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"0", ",", "5.`"}], "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold", ",", "12"}], "}"}], "]"}]}]}], "]"}]& )], 
       TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.754996864367595*^9, 3.754996897371644*^9, 3.7549971471217847`*^9, 
   3.754997202806733*^9, {3.754997353327814*^9, 3.754997372978566*^9}, 
   3.754997427578925*^9},
 CellLabel->
  "Out[379]=",ExpressionUUID->"5c9b8703-bcf7-4d12-906e-147158935246"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rescaling Segmentations", "Subsection",
 CellChangeTimes->{{3.7548982710095882`*^9, 
  3.754898277261891*^9}},ExpressionUUID->"cf83491c-53d6-4317-902a-\
83e581aa5dc7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "labels", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"labels", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "labelsRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548983134739094`*^9, 3.7548983442978315`*^9}, 
   3.7548984151164074`*^9},
 CellLabel->
  "In[380]:=",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{3.754898345239294*^9, 3.7548984159010415`*^9, 
  3.754997435626833*^9},
 CellLabel->
  "Out[380]=",ExpressionUUID->"067273ae-4568-4568-a585-65b7c58d9c4a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50", ",", "100", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.754898345239294*^9, 3.7548984159010415`*^9, 
  3.7549974373199706`*^9},
 CellLabel->
  "Out[382]=",ExpressionUUID->"7153a140-ebe3-42ef-8676-3235282ebda6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", "data", "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "mask", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskRescale", "=", 
   RowBox[{"RescaleSegmentation", "[", 
    RowBox[{"mask", ",", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "maskRescale", "]"}]}], "Input",
 CellChangeTimes->{{3.7548984416639953`*^9, 3.754898450361798*^9}, 
   3.75489851302268*^9},
 CellLabel->
  "In[383]:=",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "160", ",", "160"}], "}"}]], "Output",
 CellChangeTimes->{3.754898513888842*^9, 3.7549974375826693`*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"391ce56b-9f79-4d6f-a6d9-f1723beb8bac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50", ",", "100", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.754898513888842*^9, 3.754997437780697*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"e0897190-01dc-4038-b821-c951833471a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"labelsRescale", ",", "maskRescale"}], "]"}]], "Input",
 CellChangeTimes->{{3.754898351665933*^9, 3.7548983535309544`*^9}, {
  3.7548984184096174`*^9, 3.754898420601936*^9}, {3.7548985162034864`*^9, 
  3.754898518921974*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"da20adbf-60c7-4030-adc2-fd83c41d3f1b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Registration using Elastix", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7550018766471777`*^9, 3.75500188405846*^9}, 
   3.7554985306225977`*^9},ExpressionUUID->"7e315242-c9a0-48d7-a79c-\
e62367557aee"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.755001887184451*^9, 
  3.7550018903509445`*^9}},ExpressionUUID->"932638bc-7c62-479b-bb0d-\
3cffa205baac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<twoLegs.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"water", ",", "voxW"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<water.nii.gz\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fat", ",", "voxF"}], "}"}], "=", 
    RowBox[{"ImportNii", "[", "\"\<fat.nii.gz\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maskw", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{
     RowBox[{"Mask", "[", "water", "]"}], ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maskd", "=", 
    RowBox[{"Dilation", "[", 
     RowBox[{
      RowBox[{"Mask", "[", "data", "]"}], ",", "5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataS", "=", 
   RowBox[{"First", "@", 
    RowBox[{"AutoCropData", "[", 
     RowBox[{"First", "@", 
      RowBox[{"CutData", "[", "data", "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550019174395823`*^9, 3.7550019801348104`*^9}, {
   3.7554970050231967`*^9, 3.755497020462471*^9}, {3.755497070579788*^9, 
   3.755497089024849*^9}, 3.755497197154114*^9, {3.755498244863391*^9, 
   3.75549825377567*^9}, {3.7554983679412785`*^9, 3.7554983689980946`*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1QtMU2cUB/DGKdZNNnXonPiobE6mCCivjgn8eRcooy2FAqX0WlhkE0Rx
DwlMb0TwxQR0cTo31kkUnZli4gPUJRcnihPRIWYwkRVRxPmIRogiEFfH+ZLx
NWlufj3339t7v3O+zrbk6D4eJZPJrPb3y+Pw61HQ8DED9AFGWs55AmcnzlM5
T+es4OzC+V3O73F25TyPsxtnd86enBdyXsTZi7M3Zx/Ovpz9OCs5f8DZH30e
o/dWDqWTP8TKxp64F/eZF+Pit/5T+64yByDmWt2XY08zB8JR3ZR9cDdzEAYP
3F/kn8MMRFRt9L7bbRm2COQ0JsccCFhC9WBsn9j82O9TE9WDUXO8Z9najCSq
h2B7ielN6414qocgcblj01uecVQPxZ7C8ps9JSqqh0JzytG193ko1cNQk5vp
eN0SRPUwPNuhmqyUs+cQDlkXjt4po+cqhmNnR9+MWx1sHSKg2lK3K7GfLEZg
9db9XpZ09twjocoKvbGtjJ6zGAnhu+W2uRPZOqjQ6uqsbXnKvl+F/T8WO5de
ZusYhWftjRWdA7TOYhTkMQ9Kf2tg9WhkFpQrHfLY90cDdblHC39ifRED66r8
e6OKqY/EGCjcJm8q/pX1mRplK9cVfH+a+lJUQ7P7yOhJQ6zPYyFe6rrdVEBz
JcbS5+z1kd0zzvn23R+eW9HuV4LajqnZHMbhylfd1xZMm035OEjf5Cvl2vep
roFkfmPD8gG6PjRwrT8pL4xm96uBvMMrpCp98bAlDdqvVudVuIPyWpT8/IfD
UQ9aT2hx/Fhbff/vUZTXIvZA29rmBg3ltchq8vHKtukpr8O1Cyc7y88nU14H
J/dX682CmfI6CLW9XxjHWSivQ66bX9tUJevfeLi0VjcNNpIRD/3SKfHtg2SR
+pLNk8RZpkfYrLx8nxcsr0fzvKpzjb0sr0f9ysC/slvJkh6xtao1A0fY9RNw
6XrnYFMYyyegrXjaubQd9HvFBKzPe1IZN4bmSUpAbqRDt7tLGuUTkXG9srZn
P7v/RCR1PJ09c04C5RPheUXj9HWMlvL282+Hjq0uVVPegLOtm8fo1tB8wYDm
S/M7S1oiKG+A5dCO1/apaX0kA1z/7jUeLgqkfBI8x7fVbbL5Uz4JrQN3D80a
Yv2aBOHFrdWafbSvSvbzncIN6568Q/lkiKnelu6WKZS3O+BijV/FU+pH+325
jkvxDq4etpQMKeN8R0HZeMqnYMWDjdkHA+ZTPgUo/Ce6LJTNUwqSZv4p33M6
gK6fAlF/T5FlYP1nRGC3aqGjiQwjpL76Lf1Kuj/RCLnpuLPHWdpfJCOyWnzj
XOYFUz4VNZ7tjqu66HykomHOtju1HbR/iKmYkNM/63ADzauUCtutXT0Rqzwo
b7LvPyr13AX0PwL7Pnnz2BnxbbYfmTDB+7lzpi/dj2RCprNx7+A2+j2yNAx2
1fjsfLnP/ZdPw5ngi5W3H7P5SYNg9kkfaqb9VLL3TVHf0k9OsD42I+OHh4sd
Lhsob8bz8metG4RUypux7tGKyPTPBcqbofP/5e5nyRbKC5ge1KXc6kb9qxCw
vdi54vUq1s8CgqdviDp1gSwIqJuzuejEQzYfAvJDHCZNYfNmFRB20m9ZN5sn
ia7L5s3GWbZkpBWcwVngLHK2cpY42zjLLCOt4AzOAmeRs5WzxNnGWZY+0grO
4CxwFjlbOUucbZz/d/wXbMMrUg==
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1XtQVHUUB/AbloHZyATKQ1JIl0ShFBERML48BRZkHyws7LJ7XdCwUFFT
8Nn1MSECCqZWiLLGS0cbGFMDX3MHxT8UlVHzbW1q6jJovkM0i4bza/LHDHPn
w5nv3r33d87BxzJHM91BEARr7++/176fBxF91xzQH/C6HTk7c3bl7M7Zi7M3
5w84j+Tsy3kU59Gc/Tl/xHks53GcAzmP5xzEeQLnYM4TOYdwngT7upw6PMsm
h0KIKAo+fp05DFFv7Z+V0sgcjjNxc7tbLMyTsVz7Yert+xbyJ9jck6/9LIk5
ArF3DpYdWDiNDBiqN7ZH54l9loBnz2vjfCwmqkei6uTcoU1bDVSPxHfXfG95
NuipHoWBD58d+LtaR/UolLmn3OzepaF6NOrrLYcWnU+hejSqyqtd835LpHoM
esx5W97dFkf1GHTl7R/f7R5N9VgUfrWltnI6qB6LsY2Hlyp/Dqd6HEbZK7If
eYVSPQ62Y75Jvyez9zoFgtNtP/8x9N6lKQipjHNZVcjOJR56Obxp6Us6Nyke
qq1+NZXr2DkmoGOkmxP6sXoCxJIdIZXh7NwToRoSVrd6IvWFlIjyR+o1e/5k
faSEtKmfW/sK6jNJifyMAGn3rwFUT8KDW3MClpyivpWSoBr8/ZAbw1lfJ8N7
nk2ZC+p7KRnO7zW/8fZCBdWnwvZEXXrfidWnQnD40eCvZ/kUWM2KmgUyzYGU
guZxxxvXNrLvp8LdnfnVwwPpfUCF5pKX0fPfofcrqXA+YURFRWtkn2UVBnSU
B9z+mM5LUOPSYI+jXTFKyqvhWbLR0+kLFeXV8NPvfLp3sZbyarRXPD9Wuy2N
8ho4mIJUkDMor8GF5cUbEo8YKa/BHz9detpWYKa8Bm827L6Waad+FbRwbb18
1vUG9TO06Jz5+VC3WgvltXDweP7kji/Nh6yF43rdpJI5bF5Ske+47J5GIiMV
xROcR7ZkkKVUKHr62xte0OfJqdD7lja7ZJMFHWyZ62ert7D767C67OmXijo2
TzpIni/ac/qz76+Dx/Zm5/GL6fmENETGJ29w+e/50/B4VdfaQQ/o/UhpOH3u
zAylIpXyaWgM8p2rLFBTPh2moq9neHQmUz4dj4K2t5QmJ1A+HfX59W6f+sRS
Ph0nzsXVa1fTeQq9c7xycIfPJTpv6JEfU3Xs1SE2L3o4Fi3WtO6j/pb1aIof
bde2sb2ZAbHy8mP1RepnZKD8pjT/QBjrt96649piYx259zmt86/D2M32cCbc
T5oOD0+nfkQmxP5FnRckNk+9XtA2e0UzzZ+cicKTCb+Y9rA9akBuniLWJXgS
5Q34dsT0npQAtg8MWHN3RmlMJVk2oHBAtv+4zWTBiB0LT60J1ZFhRMige6+u
urK8ER0NrS6HAlneCDn0m847XmGUz4JtbNWyYL/JlM/COl2w4wkV21dZyL1i
H5h5NYryWShtcx2Tlszmx4SmMk/rppW0D2FCh9eA4Huz2L40waL4q+CHAtqn
sgnvzzyVpcqlfSuYsfJKw74bM2kfw4zCs6g+amD72oz2h24VU4fRPpfNUJTs
tSuVbH5E7Bw2b1eLnvrXW0SOckJ1SaCFPk+El31JwK3LZFHE6YhFnc5aNh8i
aroE4Ugt2SpiQenG48UX2byJCD5YM2zZY7KN3Zf9v5v2ur05g7PIWeJs5Sxz
tnEWLNz9OYOzyFnibOUsc7ZxFrJftzdncBY5S5ytnGXONs7/u/4DFoEqkA==

       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {110., 26.60260846626673}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {80., 156.01012300892353`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 120.}, {80., 120.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 160.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.7550019461506376`*^9, 3.7550019814587975`*^9}, 
   3.755493458532965*^9, 3.755497089664591*^9, 3.7554971981316867`*^9, 
   3.7554975861507006`*^9, {3.755498358380829*^9, 3.755498371633123*^9}},
 CellLabel->
  "During evaluation of \
In[344]:=",ExpressionUUID->"1047d256-f43e-4f8a-b593-87704665c6a6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Affine Transformation", "Subsection",
 CellChangeTimes->{{3.7554969356157484`*^9, 
  3.7554969409560246`*^9}},ExpressionUUID->"5c27d6f6-8cde-4515-862a-\
aa9c9642bd78"],

Cell["Transform a dataset", "Text",
 CellChangeTimes->{{3.7550025866078415`*^9, 
  3.755002593789109*^9}},ExpressionUUID->"4c5eacb3-63dd-4261-bae3-\
aa2546f96de9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rot", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"trans", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10", ",", 
     RowBox[{"-", "5"}]}], "}"}]}], ";", 
  RowBox[{"scale", "=", 
   RowBox[{"{", 
    RowBox[{"1.05", ",", "1.10", ",", "0.95"}], "}"}]}], ";", 
  RowBox[{"scew", "=", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "0.0", ",", "0.00"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{
  3.7554935427180634`*^9, {3.7554936688766527`*^9, 3.7554936711797667`*^9}, {
   3.755493857645252*^9, 3.755493860590698*^9}, {3.755493921859911*^9, 
   3.755493924898139*^9}, {3.7554940882691007`*^9, 3.7554941002690487`*^9}, {
   3.755494147293077*^9, 3.755494151323444*^9}, {3.7554949317268133`*^9, 
   3.7554949574041276`*^9}, {3.7554950103346453`*^9, 
   3.7554950121565256`*^9}, {3.7554950576477118`*^9, 3.755495098843875*^9}, {
   3.755495251868786*^9, 3.755495259885165*^9}, {3.7554953240931206`*^9, 
   3.755495329594754*^9}, {3.7554961133439054`*^9, 3.75549613987008*^9}, 
   3.7554961714243813`*^9, {3.7554962575032167`*^9, 3.755496258845815*^9}, {
   3.7554965736785517`*^9, 3.755496576428899*^9}, {3.7554966608794184`*^9, 
   3.7554966685258923`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"DataTranformation", "[", 
    RowBox[{"dataS", ",", "vox", ",", "w", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7550036180647516`*^9, 3.7550036920620947`*^9}, {
   3.755004077409649*^9, 3.7550041133533134`*^9}, 3.7554934700311456`*^9, {
   3.755493502350135*^9, 3.7554935405656757`*^9}, 3.7554972023038435`*^9, {
   3.755497234848613*^9, 3.7554972378395543`*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataS", ",", "dataT", ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7550022340223675`*^9, 3.755002252298395*^9}, 
   3.755497204974934*^9},
 CellLabel->
  "In[296]:=",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "@", "RegisterData"}]}]], "Input",
 CellChangeTimes->{{3.755002517678853*^9, 3.755002528805188*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"527dc924-9b90-4cd1-8a40-dbeeca06c032"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"Iterations", "\[Rule]", "500"}]},
    {
     RowBox[{"Resolutions", "\[Rule]", "1"}]},
    {
     RowBox[{"HistogramBins", "\[Rule]", "64"}]},
    {
     RowBox[{"NumberSamples", "\[Rule]", "2000"}]},
    {
     RowBox[{"InterpolationOrderReg", "\[Rule]", "3"}]},
    {
     RowBox[{"BsplineSpacing", "\[Rule]", "30"}]},
    {
     RowBox[{"BsplineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]},
    {
     RowBox[{"AffineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]},
    {
     RowBox[{"MethodReg", "\[Rule]", "\<\"affine\"\>"}]},
    {
     RowBox[{"OutputImage", "\[Rule]", "True"}]},
    {
     RowBox[{"TempDirectory", "\[Rule]", "\<\"Default\"\>"}]},
    {
     RowBox[{"DeleteTempDirectory", "\[Rule]", "True"}]},
    {
     RowBox[{"PrintTempDirectory", "\[Rule]", "True"}]},
    {
     RowBox[{"OutputTransformation", "\[Rule]", "False"}]},
    {
     RowBox[{"UseGPU", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "Automatic"}], "}"}]}]},
    {
     RowBox[{"PCAComponents", "\[Rule]", "3"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.7550025228069677`*^9, 3.7550025291192803`*^9}, 
   3.755496512979104*^9, 3.755496613052389*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"eb2fabaa-d587-4a15-a6e1-b34d57c28708"]
}, Open  ]],

Cell["\<\
Register data using default parameters, however use affineDTI to ensure \
output of scale skew, rot and trans as transform instead of the translation \
rotation matrix.\
\>", "Text",
 CellChangeTimes->{{3.7550037015844655`*^9, 
  3.7550037516765904`*^9}},ExpressionUUID->"71e298ab-c4f6-4b0e-9225-\
05f491f97805"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataR", "=", 
   RowBox[{"RegisterData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataS", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dataT", ",", "vox"}], "}"}], ",", 
     RowBox[{"DeleteTempDirectory", "\[Rule]", "False"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affineDTI\>\""}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "4000"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7550023988649707`*^9, 3.7550024494733624`*^9}, {
   3.755002535812727*^9, 3.7550025408794737`*^9}, 3.755002634724679*^9, {
   3.7550028984936285`*^9, 3.7550029092135963`*^9}, {3.755003190934188*^9, 
   3.755003197011985*^9}, {3.755003506953833*^9, 3.7550035156619873`*^9}, {
   3.7554937732977695`*^9, 3.755493773625546*^9}, {3.755496822865201*^9, 
   3.755496823631248*^9}, {3.7554968777917175`*^9, 3.755496889230296*^9}, 
   3.755496966880742*^9, 3.755497213807523*^9},
 CellLabel->
  "In[284]:=",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],

Cell["\<\
Compare the input transformation to the output transformation of elastix.\
\>", "Text",
 CellChangeTimes->{{3.755003769101974*^9, 3.7550037929279623`*^9}, {
  3.7554952677230234`*^9, 
  3.7554952698980217`*^9}},ExpressionUUID->"619ccb59-1402-4b29-83d1-\
c92d637ab02a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inpTran", "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{"rot", ",", "trans", ",", "scale", ",", "scew"}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasTran", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"ReadTransformParameters", "[", 
         RowBox[{"$TemporaryDirectory", "<>", "\"\<\\\\QMRIToolsReg\>\""}], 
         "]"}]}], ",", "3"}], "]"}], ",", "0.01"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7550038191867886`*^9, 3.7550038270044966`*^9}, {
  3.755496835679539*^9, 3.7554968567675114`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TableForm", "[", 
      RowBox[{"#", ",", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<rot\>\"", ",", "\"\<trans\>\"", ",", "\"\<scale\>\"", ",", 
            "\"\<skew\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<z\>\"", ",", "\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}],
          "}"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"inpTran", ",", "elasTran"}], "}"}]}], ",", "\"\<     \>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.755496756624278*^9, 3.755496802430605*^9}, {
  3.7554968548172693`*^9, 3.7554968664934816`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"3696fe4f-f01d-45bd-92a4-16e14eb5f35f"],

Cell[BoxData[
 TemplateBox[{"     ","\"     \"",TagBox[
    TagBox[
     GridBox[{{
        StyleBox["\[Null]", ShowStringCharacters -> False], 
        TagBox["\"z\"", HoldForm], 
        TagBox["\"x\"", HoldForm], 
        TagBox["\"y\"", HoldForm]}, {
        TagBox["\"rot\"", HoldForm], "5.`", "10.`", 
        RowBox[{"-", "5.`"}]}, {
        TagBox["\"trans\"", HoldForm], "5.`", "10.`", 
        RowBox[{"-", "5.`"}]}, {
        TagBox["\"scale\"", HoldForm], "1.05`", "1.1`", "0.95`"}, {
        TagBox["\"skew\"", HoldForm], "0.`", "0.`", "0.`"}}, RowSpacings -> 1,
       ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
      Left, ColumnLines -> {1, False}, RowLines -> {1, False}, 
      ColumnAlignments -> Left], {
     OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"rot", "trans", "scale", "skew"}, {
        "z", "x", "y"}}]]],TagBox[
    TagBox[
     GridBox[{{
        StyleBox["\[Null]", ShowStringCharacters -> False], 
        TagBox["\"z\"", HoldForm], 
        TagBox["\"x\"", HoldForm], 
        TagBox["\"y\"", HoldForm]}, {
        TagBox["\"rot\"", HoldForm], "4.12`", "9.84`", 
        RowBox[{"-", "5.13`"}]}, {
        TagBox["\"trans\"", HoldForm], "5.04`", "10.05`", 
        RowBox[{"-", "5.`"}]}, {
        TagBox["\"scale\"", HoldForm], "1.03`", "1.1`", 
        "0.9500000000000001`"}, {
        TagBox["\"skew\"", HoldForm], "0.`", "0.`", "0.`"}}, RowSpacings -> 1,
       ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
      Left, ColumnLines -> {1, False}, RowLines -> {1, False}, 
      ColumnAlignments -> Left], {
     OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"rot", "trans", "scale", "skew"}, {
        "z", "x", "y"}}]]]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{{3.755496765170991*^9, 3.7554968027404065`*^9}, 
   3.7554968672194533`*^9, 3.755497038344592*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"56b7b693-0bb9-4255-9106-bbacab49843c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"data", "-", "dataT"}], ",", 
   RowBox[{"data", "-", "dataR"}], ",", "vox"}], "]"}]], "Input",
 CellChangeTimes->{{3.75500313369658*^9, 3.7550031501992936`*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],

Cell[CellGroupData[{

Cell["B-spline Registration of two legs", "Subsection",
 CellChangeTimes->{{3.7554969738975*^9, 3.7554969829936905`*^9}, {
  3.755497119471081*^9, 3.755497119982411*^9}, {3.755497161169385*^9, 
  3.7554971633752675`*^9}},ExpressionUUID->"c10c058b-a500-4c2d-bffa-\
2955b14de21a"],

Cell[CellGroupData[{

Cell["Full Registration", "Subsubsection",
 CellChangeTimes->{{3.7554980649307795`*^9, 
  3.755498069987264*^9}},ExpressionUUID->"adaf1997-c6af-46c4-ae60-\
0fb87f7483c2"],

Cell["\<\
First Perform Rigid registration to align and upscale data, then use b-spline \
to correct non rigid deformations\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554974866711407`*^9}, 
   3.7554975985448885`*^9},ExpressionUUID->"8fc205d5-3384-40ca-a0e5-\
a8c9f829c920"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
  3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
  3.755497424319078*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
LDHXMDuZXcwycxuzwuxm/r/X/wJ58ip8
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
obvuEWy37CuylA7zyanLLENpvTkdRVvz+l39nM3rdFgfpey/Mof1T4ft9dPL
Zr4zg/pnQL55cHjTWHq/ygxYfirovUtNnwcZqEi6E9y6jvJXyEBtxfD1sxrY
589A0aWTbicdKY/NGbAfqHNwj6DvT86A8K3uiLyB8tmagRNHxaM3aoOpfyZK
nhb/LDex7z8Tjo5Vbp3NlN/IhHJ+SVrqYbpfQiYszavV/tvCqH8m7J3+o7g7
mu6vORMDVEOc7eazvM/E0lG+RXm17P5nQrPA8seoTrLChPjVx0bcV9I8UJow
vWfdjR6BZJggeLWWCOlkwYSQmPi63pvIkglfCjFaaT/ZbMK22nlbPmojyyaU
5W/UbfWi/Wg1IWDI0ELTSrIiC/e+X10acIeszMLqx1neVxfTfkYW5rRm9Q4e
Rc97QhYenXJxXXKbLGWhyHDXJe0SnQdzFip9rrbEPWXPi1mo6Xh32Q7/OOqf
hfN/ndwdWU3nS5GNDFv1nqIEdv6y0dv3yfBabzqfyEbcoMOvDfKi8ytkw2fl
fmt0BZ1vKRszfOvF0NP0fGvORk35p0Hj7Cgf5GzYPX/9SUsg5Yc1G2dl6bXc
j9nzcw7atk+f0thO802Zg8iySq/HgZRPyMHT5/7l739B+SXkoMeQ2I3xXTTf
pBxE1KiUd8NY/uWgYWLFxwWfUD7KOTgovbK1uony05oDb2PA9R3PaL4pRNjG
P7iv2UB56yiiq8HbpYv93lCKmHTaT1OyiqwSsa3Q9436DjJELB8/tk/SHMp/
tYjfNretLS1j80LE5bsuNWtvksXu603Lbfrcg80vET12XQ/ZlUjungN/FNQM
iyli80zEgQXhS5sqyRYROyOsB4YfY/NNxLsZV9ovnCc3ijCPPvNL3xts3olo
G3jl9s57ZJuIrc0/tO1kvxcVbA7R70lHzkrOKs7grOYscBY5S5xLOJs5WzjL
nBs5WznbOCvyXrYjZyVnFWdwVnMWOIucJc4lnM2cLZxlzo2crZxtnBX5L9uR
s5KzijM4qzkLnEXOEucSzmbOFs4y50bOVs42zv/3+l+bDr0d
       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{105., 25.57279028471055}, {157., 311.8744783706853}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{157., 311.8744783706853}, {157., 311.8744783706853}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{160., 240.}, {160., 240.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 320.}, {-5.684341886080802*^-14, 320.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.7554975221281853`*^9, 3.7554976009552765`*^9},
 CellLabel->
  "During evaluation of \
In[301]:=",ExpressionUUID->"6cc7170a-6e42-43f8-b847-6ba7dd418875"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1QtMU2cUB/DGKdZNNnXonPiobE6mCCivjgn8eRcooy2FAqX0WlhkE0Rx
DwlMb0TwxQR0cTo31kkUnZli4gPUJRcnihPRIWYwkRVRxPmIRogiEFfH+ZLx
NWlufj3339t7v3O+zrbk6D4eJZPJrPb3y+Pw61HQ8DED9AFGWs55AmcnzlM5
T+es4OzC+V3O73F25TyPsxtnd86enBdyXsTZi7M3Zx/Ovpz9OCs5f8DZH30e
o/dWDqWTP8TKxp64F/eZF+Pit/5T+64yByDmWt2XY08zB8JR3ZR9cDdzEAYP
3F/kn8MMRFRt9L7bbRm2COQ0JsccCFhC9WBsn9j82O9TE9WDUXO8Z9najCSq
h2B7ielN6414qocgcblj01uecVQPxZ7C8ps9JSqqh0JzytG193ko1cNQk5vp
eN0SRPUwPNuhmqyUs+cQDlkXjt4po+cqhmNnR9+MWx1sHSKg2lK3K7GfLEZg
9db9XpZ09twjocoKvbGtjJ6zGAnhu+W2uRPZOqjQ6uqsbXnKvl+F/T8WO5de
ZusYhWftjRWdA7TOYhTkMQ9Kf2tg9WhkFpQrHfLY90cDdblHC39ifRED66r8
e6OKqY/EGCjcJm8q/pX1mRplK9cVfH+a+lJUQ7P7yOhJQ6zPYyFe6rrdVEBz
JcbS5+z1kd0zzvn23R+eW9HuV4LajqnZHMbhylfd1xZMm035OEjf5Cvl2vep
roFkfmPD8gG6PjRwrT8pL4xm96uBvMMrpCp98bAlDdqvVudVuIPyWpT8/IfD
UQ9aT2hx/Fhbff/vUZTXIvZA29rmBg3ltchq8vHKtukpr8O1Cyc7y88nU14H
J/dX682CmfI6CLW9XxjHWSivQ66bX9tUJevfeLi0VjcNNpIRD/3SKfHtg2SR
+pLNk8RZpkfYrLx8nxcsr0fzvKpzjb0sr0f9ysC/slvJkh6xtao1A0fY9RNw
6XrnYFMYyyegrXjaubQd9HvFBKzPe1IZN4bmSUpAbqRDt7tLGuUTkXG9srZn
P7v/RCR1PJ09c04C5RPheUXj9HWMlvL282+Hjq0uVVPegLOtm8fo1tB8wYDm
S/M7S1oiKG+A5dCO1/apaX0kA1z/7jUeLgqkfBI8x7fVbbL5Uz4JrQN3D80a
Yv2aBOHFrdWafbSvSvbzncIN6568Q/lkiKnelu6WKZS3O+BijV/FU+pH+325
jkvxDq4etpQMKeN8R0HZeMqnYMWDjdkHA+ZTPgUo/Ce6LJTNUwqSZv4p33M6
gK6fAlF/T5FlYP1nRGC3aqGjiQwjpL76Lf1Kuj/RCLnpuLPHWdpfJCOyWnzj
XOYFUz4VNZ7tjqu66HykomHOtju1HbR/iKmYkNM/63ADzauUCtutXT0Rqzwo
b7LvPyr13AX0PwL7Pnnz2BnxbbYfmTDB+7lzpi/dj2RCprNx7+A2+j2yNAx2
1fjsfLnP/ZdPw5ngi5W3H7P5SYNg9kkfaqb9VLL3TVHf0k9OsD42I+OHh4sd
Lhsob8bz8metG4RUypux7tGKyPTPBcqbofP/5e5nyRbKC5ge1KXc6kb9qxCw
vdi54vUq1s8CgqdviDp1gSwIqJuzuejEQzYfAvJDHCZNYfNmFRB20m9ZN5sn
ia7L5s3GWbZkpBWcwVngLHK2cpY42zjLLCOt4AzOAmeRs5WzxNnGWZY+0grO
4CxwFjlbOUucbZz/d/wXbMMrUg==
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1XtQVHUUB/AbloHZyATKQ1JIl0ShFBERML48BRZkHyws7LJ7XdCwUFFT
8Nn1MSECCqZWiLLGS0cbGFMDX3MHxT8UlVHzbW1q6jJovkM0i4bza/LHDHPn
w5nv3r33d87BxzJHM91BEARr7++/176fBxF91xzQH/C6HTk7c3bl7M7Zi7M3
5w84j+Tsy3kU59Gc/Tl/xHks53GcAzmP5xzEeQLnYM4TOYdwngT7upw6PMsm
h0KIKAo+fp05DFFv7Z+V0sgcjjNxc7tbLMyTsVz7Yert+xbyJ9jck6/9LIk5
ArF3DpYdWDiNDBiqN7ZH54l9loBnz2vjfCwmqkei6uTcoU1bDVSPxHfXfG95
NuipHoWBD58d+LtaR/UolLmn3OzepaF6NOrrLYcWnU+hejSqyqtd835LpHoM
esx5W97dFkf1GHTl7R/f7R5N9VgUfrWltnI6qB6LsY2Hlyp/Dqd6HEbZK7If
eYVSPQ62Y75Jvyez9zoFgtNtP/8x9N6lKQipjHNZVcjOJR56Obxp6Us6Nyke
qq1+NZXr2DkmoGOkmxP6sXoCxJIdIZXh7NwToRoSVrd6IvWFlIjyR+o1e/5k
faSEtKmfW/sK6jNJifyMAGn3rwFUT8KDW3MClpyivpWSoBr8/ZAbw1lfJ8N7
nk2ZC+p7KRnO7zW/8fZCBdWnwvZEXXrfidWnQnD40eCvZ/kUWM2KmgUyzYGU
guZxxxvXNrLvp8LdnfnVwwPpfUCF5pKX0fPfofcrqXA+YURFRWtkn2UVBnSU
B9z+mM5LUOPSYI+jXTFKyqvhWbLR0+kLFeXV8NPvfLp3sZbyarRXPD9Wuy2N
8ho4mIJUkDMor8GF5cUbEo8YKa/BHz9detpWYKa8Bm827L6Waad+FbRwbb18
1vUG9TO06Jz5+VC3WgvltXDweP7kji/Nh6yF43rdpJI5bF5Ske+47J5GIiMV
xROcR7ZkkKVUKHr62xte0OfJqdD7lja7ZJMFHWyZ62ert7D767C67OmXijo2
TzpIni/ac/qz76+Dx/Zm5/GL6fmENETGJ29w+e/50/B4VdfaQQ/o/UhpOH3u
zAylIpXyaWgM8p2rLFBTPh2moq9neHQmUz4dj4K2t5QmJ1A+HfX59W6f+sRS
Ph0nzsXVa1fTeQq9c7xycIfPJTpv6JEfU3Xs1SE2L3o4Fi3WtO6j/pb1aIof
bde2sb2ZAbHy8mP1RepnZKD8pjT/QBjrt96649piYx259zmt86/D2M32cCbc
T5oOD0+nfkQmxP5FnRckNk+9XtA2e0UzzZ+cicKTCb+Y9rA9akBuniLWJXgS
5Q34dsT0npQAtg8MWHN3RmlMJVk2oHBAtv+4zWTBiB0LT60J1ZFhRMige6+u
urK8ER0NrS6HAlneCDn0m847XmGUz4JtbNWyYL/JlM/COl2w4wkV21dZyL1i
H5h5NYryWShtcx2Tlszmx4SmMk/rppW0D2FCh9eA4Huz2L40waL4q+CHAtqn
sgnvzzyVpcqlfSuYsfJKw74bM2kfw4zCs6g+amD72oz2h24VU4fRPpfNUJTs
tSuVbH5E7Bw2b1eLnvrXW0SOckJ1SaCFPk+El31JwK3LZFHE6YhFnc5aNh8i
aroE4Ugt2SpiQenG48UX2byJCD5YM2zZY7KN3Zf9v5v2ur05g7PIWeJs5Sxz
tnEWLNz9OYOzyFnibOUsc7ZxFrJftzdncBY5S5ytnGXONs7/u/4DFoEqkA==

       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {110., 26.60260846626673}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {80., 156.01012300892353`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 120.}, {80., 120.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 160.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.7554975221281853`*^9, 3.755497601087663*^9},
 CellLabel->
  "During evaluation of \
In[301]:=",ExpressionUUID->"e0327bd3-e034-46ef-9afd-87b286222aba"]
}, Open  ]]
}, Open  ]],

Cell["Show the result using FlipView", "Text",
 CellChangeTimes->{{3.7554979330790215`*^9, 
  3.7554979449646964`*^9}},ExpressionUUID->"869142fd-77a5-4044-bfa0-\
ffaeaff29d3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Constrained in one direction", "Subsubsection",
 CellChangeTimes->{{3.755498072434825*^9, 
  3.755498082354246*^9}},ExpressionUUID->"f38c2344-3618-4b65-86d0-\
b42b8689639d"],

Cell["\<\
Constrain the b-spline to one direction, e.g. the EPI phase encoding\
\>", "Text",
 CellChangeTimes->{{3.755497446401965*^9, 3.7554975197909365`*^9}, 
   3.7554980513906684`*^9},ExpressionUUID->"8b20a75d-31f3-4056-ac74-\
f1127d0d96dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"dataB2", "=", 
   RowBox[{"RegisterDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "4000"}], ",", " ", 
     RowBox[{"MethodReg", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<rigid\>\"", ",", "\"\<bspline\>\""}], "}"}]}], ",", 
     RowBox[{"BsplineDirections", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BsplineSpacing", "\[Rule]", "25"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755497124088678*^9, 3.7554971281453304`*^9}, {
  3.7554973375502577`*^9, 3.755497361022441*^9}, {3.75549739332679*^9, 
  3.755497424319078*^9}, {3.755497990528892*^9, 3.755498016273543*^9}, {
  3.755498142259413*^9, 3.755498169600134*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
LDHXMDuZXcwycxuzwuxm/r/X/wJ58ip8
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
obvuEWy37CuylA7zyanLLENpvTkdRVvz+l39nM3rdFgfpey/Mof1T4ft9dPL
Zr4zg/pnQL55cHjTWHq/ygxYfirovUtNnwcZqEi6E9y6jvJXyEBtxfD1sxrY
589A0aWTbicdKY/NGbAfqHNwj6DvT86A8K3uiLyB8tmagRNHxaM3aoOpfyZK
nhb/LDex7z8Tjo5Vbp3NlN/IhHJ+SVrqYbpfQiYszavV/tvCqH8m7J3+o7g7
mu6vORMDVEOc7eazvM/E0lG+RXm17P5nQrPA8seoTrLChPjVx0bcV9I8UJow
vWfdjR6BZJggeLWWCOlkwYSQmPi63pvIkglfCjFaaT/ZbMK22nlbPmojyyaU
5W/UbfWi/Wg1IWDI0ELTSrIiC/e+X10acIeszMLqx1neVxfTfkYW5rRm9Q4e
Rc97QhYenXJxXXKbLGWhyHDXJe0SnQdzFip9rrbEPWXPi1mo6Xh32Q7/OOqf
hfN/ndwdWU3nS5GNDFv1nqIEdv6y0dv3yfBabzqfyEbcoMOvDfKi8ytkw2fl
fmt0BZ1vKRszfOvF0NP0fGvORk35p0Hj7Cgf5GzYPX/9SUsg5Yc1G2dl6bXc
j9nzcw7atk+f0thO802Zg8iySq/HgZRPyMHT5/7l739B+SXkoMeQ2I3xXTTf
pBxE1KiUd8NY/uWgYWLFxwWfUD7KOTgovbK1uony05oDb2PA9R3PaL4pRNjG
P7iv2UB56yiiq8HbpYv93lCKmHTaT1OyiqwSsa3Q9436DjJELB8/tk/SHMp/
tYjfNretLS1j80LE5bsuNWtvksXu603Lbfrcg80vET12XQ/ZlUjungN/FNQM
iyli80zEgQXhS5sqyRYROyOsB4YfY/NNxLsZV9ovnCc3ijCPPvNL3xts3olo
G3jl9s57ZJuIrc0/tO1kvxcVbA7R70lHzkrOKs7grOYscBY5S5xLOJs5WzjL
nBs5WznbOCvyXrYjZyVnFWdwVnMWOIucJc4lnM2cLZxlzo2crZxtnBX5L9uR
s5KzijM4qzkLnEXOEucSzmbOFs4y50bOVs42zv/3+l+bDr0d
       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{105., 25.57279028471055}, {157., 311.8744783706853}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{157., 311.8744783706853}, {157., 311.8744783706853}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{160., 240.}, {160., 240.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 320.}, {-5.684341886080802*^-14, 320.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.755498017325323*^9, 3.755498170314263*^9},
 CellLabel->
  "During evaluation of \
In[335]:=",ExpressionUUID->"ff809583-b6a4-4d5c-8152-5b0dd1ac336e"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1QtMU2cUB/DGKdZNNnXonPiobE6mCCivjgn8eRcooy2FAqX0WlhkE0Rx
DwlMb0TwxQR0cTo31kkUnZli4gPUJRcnihPRIWYwkRVRxPmIRogiEFfH+ZLx
NWlufj3339t7v3O+zrbk6D4eJZPJrPb3y+Pw61HQ8DED9AFGWs55AmcnzlM5
T+es4OzC+V3O73F25TyPsxtnd86enBdyXsTZi7M3Zx/Ovpz9OCs5f8DZH30e
o/dWDqWTP8TKxp64F/eZF+Pit/5T+64yByDmWt2XY08zB8JR3ZR9cDdzEAYP
3F/kn8MMRFRt9L7bbRm2COQ0JsccCFhC9WBsn9j82O9TE9WDUXO8Z9najCSq
h2B7ielN6414qocgcblj01uecVQPxZ7C8ps9JSqqh0JzytG193ko1cNQk5vp
eN0SRPUwPNuhmqyUs+cQDlkXjt4po+cqhmNnR9+MWx1sHSKg2lK3K7GfLEZg
9db9XpZ09twjocoKvbGtjJ6zGAnhu+W2uRPZOqjQ6uqsbXnKvl+F/T8WO5de
ZusYhWftjRWdA7TOYhTkMQ9Kf2tg9WhkFpQrHfLY90cDdblHC39ifRED66r8
e6OKqY/EGCjcJm8q/pX1mRplK9cVfH+a+lJUQ7P7yOhJQ6zPYyFe6rrdVEBz
JcbS5+z1kd0zzvn23R+eW9HuV4LajqnZHMbhylfd1xZMm035OEjf5Cvl2vep
roFkfmPD8gG6PjRwrT8pL4xm96uBvMMrpCp98bAlDdqvVudVuIPyWpT8/IfD
UQ9aT2hx/Fhbff/vUZTXIvZA29rmBg3ltchq8vHKtukpr8O1Cyc7y88nU14H
J/dX682CmfI6CLW9XxjHWSivQ66bX9tUJevfeLi0VjcNNpIRD/3SKfHtg2SR
+pLNk8RZpkfYrLx8nxcsr0fzvKpzjb0sr0f9ysC/slvJkh6xtao1A0fY9RNw
6XrnYFMYyyegrXjaubQd9HvFBKzPe1IZN4bmSUpAbqRDt7tLGuUTkXG9srZn
P7v/RCR1PJ09c04C5RPheUXj9HWMlvL282+Hjq0uVVPegLOtm8fo1tB8wYDm
S/M7S1oiKG+A5dCO1/apaX0kA1z/7jUeLgqkfBI8x7fVbbL5Uz4JrQN3D80a
Yv2aBOHFrdWafbSvSvbzncIN6568Q/lkiKnelu6WKZS3O+BijV/FU+pH+325
jkvxDq4etpQMKeN8R0HZeMqnYMWDjdkHA+ZTPgUo/Ce6LJTNUwqSZv4p33M6
gK6fAlF/T5FlYP1nRGC3aqGjiQwjpL76Lf1Kuj/RCLnpuLPHWdpfJCOyWnzj
XOYFUz4VNZ7tjqu66HykomHOtju1HbR/iKmYkNM/63ADzauUCtutXT0Rqzwo
b7LvPyr13AX0PwL7Pnnz2BnxbbYfmTDB+7lzpi/dj2RCprNx7+A2+j2yNAx2
1fjsfLnP/ZdPw5ngi5W3H7P5SYNg9kkfaqb9VLL3TVHf0k9OsD42I+OHh4sd
Lhsob8bz8metG4RUypux7tGKyPTPBcqbofP/5e5nyRbKC5ge1KXc6kb9qxCw
vdi54vUq1s8CgqdviDp1gSwIqJuzuejEQzYfAvJDHCZNYfNmFRB20m9ZN5sn
ia7L5s3GWbZkpBWcwVngLHK2cpY42zjLLCOt4AzOAmeRs5WzxNnGWZY+0grO
4CxwFjlbOUucbZz/d/wXbMMrUg==
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1XtQVHUUB/AbloHZyATKQ1JIl0ShFBERML48BRZkHyws7LJ7XdCwUFFT
8Nn1MSECCqZWiLLGS0cbGFMDX3MHxT8UlVHzbW1q6jJovkM0i4bza/LHDHPn
w5nv3r33d87BxzJHM91BEARr7++/176fBxF91xzQH/C6HTk7c3bl7M7Zi7M3
5w84j+Tsy3kU59Gc/Tl/xHks53GcAzmP5xzEeQLnYM4TOYdwngT7upw6PMsm
h0KIKAo+fp05DFFv7Z+V0sgcjjNxc7tbLMyTsVz7Yert+xbyJ9jck6/9LIk5
ArF3DpYdWDiNDBiqN7ZH54l9loBnz2vjfCwmqkei6uTcoU1bDVSPxHfXfG95
NuipHoWBD58d+LtaR/UolLmn3OzepaF6NOrrLYcWnU+hejSqyqtd835LpHoM
esx5W97dFkf1GHTl7R/f7R5N9VgUfrWltnI6qB6LsY2Hlyp/Dqd6HEbZK7If
eYVSPQ62Y75Jvyez9zoFgtNtP/8x9N6lKQipjHNZVcjOJR56Obxp6Us6Nyke
qq1+NZXr2DkmoGOkmxP6sXoCxJIdIZXh7NwToRoSVrd6IvWFlIjyR+o1e/5k
faSEtKmfW/sK6jNJifyMAGn3rwFUT8KDW3MClpyivpWSoBr8/ZAbw1lfJ8N7
nk2ZC+p7KRnO7zW/8fZCBdWnwvZEXXrfidWnQnD40eCvZ/kUWM2KmgUyzYGU
guZxxxvXNrLvp8LdnfnVwwPpfUCF5pKX0fPfofcrqXA+YURFRWtkn2UVBnSU
B9z+mM5LUOPSYI+jXTFKyqvhWbLR0+kLFeXV8NPvfLp3sZbyarRXPD9Wuy2N
8ho4mIJUkDMor8GF5cUbEo8YKa/BHz9detpWYKa8Bm827L6Waad+FbRwbb18
1vUG9TO06Jz5+VC3WgvltXDweP7kji/Nh6yF43rdpJI5bF5Ske+47J5GIiMV
xROcR7ZkkKVUKHr62xte0OfJqdD7lja7ZJMFHWyZ62ert7D767C67OmXijo2
TzpIni/ac/qz76+Dx/Zm5/GL6fmENETGJ29w+e/50/B4VdfaQQ/o/UhpOH3u
zAylIpXyaWgM8p2rLFBTPh2moq9neHQmUz4dj4K2t5QmJ1A+HfX59W6f+sRS
Ph0nzsXVa1fTeQq9c7xycIfPJTpv6JEfU3Xs1SE2L3o4Fi3WtO6j/pb1aIof
bde2sb2ZAbHy8mP1RepnZKD8pjT/QBjrt96649piYx259zmt86/D2M32cCbc
T5oOD0+nfkQmxP5FnRckNk+9XtA2e0UzzZ+cicKTCb+Y9rA9akBuniLWJXgS
5Q34dsT0npQAtg8MWHN3RmlMJVk2oHBAtv+4zWTBiB0LT60J1ZFhRMige6+u
urK8ER0NrS6HAlneCDn0m847XmGUz4JtbNWyYL/JlM/COl2w4wkV21dZyL1i
H5h5NYryWShtcx2Tlszmx4SmMk/rppW0D2FCh9eA4Huz2L40waL4q+CHAtqn
sgnvzzyVpcqlfSuYsfJKw74bM2kfw4zCs6g+amD72oz2h24VU4fRPpfNUJTs
tSuVbH5E7Bw2b1eLnvrXW0SOckJ1SaCFPk+El31JwK3LZFHE6YhFnc5aNh8i
aroE4Ugt2SpiQenG48UX2byJCD5YM2zZY7KN3Zf9v5v2ur05g7PIWeJs5Sxz
tnEWLNz9OYOzyFnibOUsc7ZxFrJftzdncBY5S5ytnGXONs7/u/4DFoEqkA==

       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {110., 26.60260846626673}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {80., 156.01012300892353`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 120.}, {80., 120.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 160.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.755498017325323*^9, 3.755498170438629*^9},
 CellLabel->
  "During evaluation of \
In[335]:=",ExpressionUUID->"5f02643f-e458-4743-b302-574a20ab3b55"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"GetSlicePositions", "[", 
    RowBox[{"dataB2", ",", 
     RowBox[{"MakeCheckPlot", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"dataB2", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"watIm", "=", 
   RowBox[{"Grid", "@", 
    RowBox[{"MakeSliceImages", "[", 
     RowBox[{
      RowBox[{"GetSliceData", "[", 
       RowBox[{"water", ",", "pos"}], "]"}], ",", "voxW", ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<GrayTones\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"FlipView", "[", 
  RowBox[{"{", 
   RowBox[{"datIm", ",", "watIm"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549001402595067`*^9, 3.7549001450991135`*^9}, {
  3.754900182877452*^9, 3.75490019767517*^9}, {3.7549971051334467`*^9, 
  3.75499710529536*^9}, {3.755497779940259*^9, 3.7554978936477385`*^9}, {
  3.755497951667218*^9, 3.755497959091016*^9}, {3.7554980024647155`*^9, 
  3.755498007583373*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Register And Apply to other Data", "Subsection",
 CellChangeTimes->{{3.7554982597977324`*^9, 
  3.755498271396658*^9}},ExpressionUUID->"52e9fa03-400d-4512-9bf9-\
1437a0e5fcb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"watR", ",", "fatR"}], "}"}], "=", 
   RowBox[{"RegisterDataTransformSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "maskd", ",", "vox"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"water", ",", "maskw", ",", "voxW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"fat", ",", "voxF"}], "}"}], ",", 
     RowBox[{"MethodReg", "\[Rule]", "\"\<affine\>\""}], ",", 
     RowBox[{"Iterations", "\[Rule]", "250"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755498275094519*^9, 3.755498319890134*^9}, {
  3.7554983831047416`*^9, 3.7554983952150755`*^9}, {3.7554984445763817`*^9, 
  3.7554984498083334`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1QtMU2cUB/DGKdZNNnXonPiobE6mCCivjgn8eRcooy2FAqX0WlhkE0Rx
DwlMb0TwxQR0cTo31kkUnZli4gPUJRcnihPRIWYwkRVRxPmIRogiEFfH+ZLx
NWlufj3339t7v3O+zrbk6D4eJZPJrPb3y+Pw61HQ8DED9AFGWs55AmcnzlM5
T+es4OzC+V3O73F25TyPsxtnd86enBdyXsTZi7M3Zx/Ovpz9OCs5f8DZH30e
o/dWDqWTP8TKxp64F/eZF+Pit/5T+64yByDmWt2XY08zB8JR3ZR9cDdzEAYP
3F/kn8MMRFRt9L7bbRm2COQ0JsccCFhC9WBsn9j82O9TE9WDUXO8Z9najCSq
h2B7ielN6414qocgcblj01uecVQPxZ7C8ps9JSqqh0JzytG193ko1cNQk5vp
eN0SRPUwPNuhmqyUs+cQDlkXjt4po+cqhmNnR9+MWx1sHSKg2lK3K7GfLEZg
9db9XpZ09twjocoKvbGtjJ6zGAnhu+W2uRPZOqjQ6uqsbXnKvl+F/T8WO5de
ZusYhWftjRWdA7TOYhTkMQ9Kf2tg9WhkFpQrHfLY90cDdblHC39ifRED66r8
e6OKqY/EGCjcJm8q/pX1mRplK9cVfH+a+lJUQ7P7yOhJQ6zPYyFe6rrdVEBz
JcbS5+z1kd0zzvn23R+eW9HuV4LajqnZHMbhylfd1xZMm035OEjf5Cvl2vep
roFkfmPD8gG6PjRwrT8pL4xm96uBvMMrpCp98bAlDdqvVudVuIPyWpT8/IfD
UQ9aT2hx/Fhbff/vUZTXIvZA29rmBg3ltchq8vHKtukpr8O1Cyc7y88nU14H
J/dX682CmfI6CLW9XxjHWSivQ66bX9tUJevfeLi0VjcNNpIRD/3SKfHtg2SR
+pLNk8RZpkfYrLx8nxcsr0fzvKpzjb0sr0f9ysC/slvJkh6xtao1A0fY9RNw
6XrnYFMYyyegrXjaubQd9HvFBKzPe1IZN4bmSUpAbqRDt7tLGuUTkXG9srZn
P7v/RCR1PJ09c04C5RPheUXj9HWMlvL282+Hjq0uVVPegLOtm8fo1tB8wYDm
S/M7S1oiKG+A5dCO1/apaX0kA1z/7jUeLgqkfBI8x7fVbbL5Uz4JrQN3D80a
Yv2aBOHFrdWafbSvSvbzncIN6568Q/lkiKnelu6WKZS3O+BijV/FU+pH+325
jkvxDq4etpQMKeN8R0HZeMqnYMWDjdkHA+ZTPgUo/Ce6LJTNUwqSZv4p33M6
gK6fAlF/T5FlYP1nRGC3aqGjiQwjpL76Lf1Kuj/RCLnpuLPHWdpfJCOyWnzj
XOYFUz4VNZ7tjqu66HykomHOtju1HbR/iKmYkNM/63ADzauUCtutXT0Rqzwo
b7LvPyr13AX0PwL7Pnnz2BnxbbYfmTDB+7lzpi/dj2RCprNx7+A2+j2yNAx2
1fjsfLnP/ZdPw5ngi5W3H7P5SYNg9kkfaqb9VLL3TVHf0k9OsD42I+OHh4sd
Lhsob8bz8metG4RUypux7tGKyPTPBcqbofP/5e5nyRbKC5ge1KXc6kb9qxCw
vdi54vUq1s8CgqdviDp1gSwIqJuzuejEQzYfAvJDHCZNYfNmFRB20m9ZN5sn
ia7L5s3GWbZkpBWcwVngLHK2cpY42zjLLCOt4AzOAmeRs5WzxNnGWZY+0grO
4CxwFjlbOUucbZz/d/wXbMMrUg==
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1XtQVHUUB/AbloHZyATKQ1JIl0ShFBERML48BRZkHyws7LJ7XdCwUFFT
8Nn1MSECCqZWiLLGS0cbGFMDX3MHxT8UlVHzbW1q6jJovkM0i4bza/LHDHPn
w5nv3r33d87BxzJHM91BEARr7++/176fBxF91xzQH/C6HTk7c3bl7M7Zi7M3
5w84j+Tsy3kU59Gc/Tl/xHks53GcAzmP5xzEeQLnYM4TOYdwngT7upw6PMsm
h0KIKAo+fp05DFFv7Z+V0sgcjjNxc7tbLMyTsVz7Yert+xbyJ9jck6/9LIk5
ArF3DpYdWDiNDBiqN7ZH54l9loBnz2vjfCwmqkei6uTcoU1bDVSPxHfXfG95
NuipHoWBD58d+LtaR/UolLmn3OzepaF6NOrrLYcWnU+hejSqyqtd835LpHoM
esx5W97dFkf1GHTl7R/f7R5N9VgUfrWltnI6qB6LsY2Hlyp/Dqd6HEbZK7If
eYVSPQ62Y75Jvyez9zoFgtNtP/8x9N6lKQipjHNZVcjOJR56Obxp6Us6Nyke
qq1+NZXr2DkmoGOkmxP6sXoCxJIdIZXh7NwToRoSVrd6IvWFlIjyR+o1e/5k
faSEtKmfW/sK6jNJifyMAGn3rwFUT8KDW3MClpyivpWSoBr8/ZAbw1lfJ8N7
nk2ZC+p7KRnO7zW/8fZCBdWnwvZEXXrfidWnQnD40eCvZ/kUWM2KmgUyzYGU
guZxxxvXNrLvp8LdnfnVwwPpfUCF5pKX0fPfofcrqXA+YURFRWtkn2UVBnSU
B9z+mM5LUOPSYI+jXTFKyqvhWbLR0+kLFeXV8NPvfLp3sZbyarRXPD9Wuy2N
8ho4mIJUkDMor8GF5cUbEo8YKa/BHz9detpWYKa8Bm827L6Waad+FbRwbb18
1vUG9TO06Jz5+VC3WgvltXDweP7kji/Nh6yF43rdpJI5bF5Ske+47J5GIiMV
xROcR7ZkkKVUKHr62xte0OfJqdD7lja7ZJMFHWyZ62ert7D767C67OmXijo2
TzpIni/ac/qz76+Dx/Zm5/GL6fmENETGJ29w+e/50/B4VdfaQQ/o/UhpOH3u
zAylIpXyaWgM8p2rLFBTPh2moq9neHQmUz4dj4K2t5QmJ1A+HfX59W6f+sRS
Ph0nzsXVa1fTeQq9c7xycIfPJTpv6JEfU3Xs1SE2L3o4Fi3WtO6j/pb1aIof
bde2sb2ZAbHy8mP1RepnZKD8pjT/QBjrt96649piYx259zmt86/D2M32cCbc
T5oOD0+nfkQmxP5FnRckNk+9XtA2e0UzzZ+cicKTCb+Y9rA9akBuniLWJXgS
5Q34dsT0npQAtg8MWHN3RmlMJVk2oHBAtv+4zWTBiB0LT60J1ZFhRMige6+u
urK8ER0NrS6HAlneCDn0m847XmGUz4JtbNWyYL/JlM/COl2w4wkV21dZyL1i
H5h5NYryWShtcx2Tlszmx4SmMk/rppW0D2FCh9eA4Huz2L40waL4q+CHAtqn
sgnvzzyVpcqlfSuYsfJKw74bM2kfw4zCs6g+amD72oz2h24VU4fRPpfNUJTs
tSuVbH5E7Bw2b1eLnvrXW0SOckJ1SaCFPk+El31JwK3LZFHE6YhFnc5aNh8i
aroE4Ugt2SpiQenG48UX2byJCD5YM2zZY7KN3Zf9v5v2ur05g7PIWeJs5Sxz
tnEWLNz9OYOzyFnibOUsc7ZxFrJftzdncBY5S5ytnGXONs7/u/4DFoEqkA==

       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {110., 26.60260846626673}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 156.01012300892353`}, {80., 156.01012300892353`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 120.}, {80., 120.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 160.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.7554984507438664`*^9},
 CellLabel->
  "During evaluation of \
In[352]:=",ExpressionUUID->"468154aa-5ab2-4d0e-b167-4f17eb2141f0"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
LDHXMDuZXcwycxuzwuxm/r/X/wJ58ip8
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
obvuEWy37CuylA7zyanLLENpvTkdRVvz+l39nM3rdFgfpey/Mof1T4ft9dPL
Zr4zg/pnQL55cHjTWHq/ygxYfirovUtNnwcZqEi6E9y6jvJXyEBtxfD1sxrY
589A0aWTbicdKY/NGbAfqHNwj6DvT86A8K3uiLyB8tmagRNHxaM3aoOpfyZK
nhb/LDex7z8Tjo5Vbp3NlN/IhHJ+SVrqYbpfQiYszavV/tvCqH8m7J3+o7g7
mu6vORMDVEOc7eazvM/E0lG+RXm17P5nQrPA8seoTrLChPjVx0bcV9I8UJow
vWfdjR6BZJggeLWWCOlkwYSQmPi63pvIkglfCjFaaT/ZbMK22nlbPmojyyaU
5W/UbfWi/Wg1IWDI0ELTSrIiC/e+X10acIeszMLqx1neVxfTfkYW5rRm9Q4e
Rc97QhYenXJxXXKbLGWhyHDXJe0SnQdzFip9rrbEPWXPi1mo6Xh32Q7/OOqf
hfN/ndwdWU3nS5GNDFv1nqIEdv6y0dv3yfBabzqfyEbcoMOvDfKi8ytkw2fl
fmt0BZ1vKRszfOvF0NP0fGvORk35p0Hj7Cgf5GzYPX/9SUsg5Yc1G2dl6bXc
j9nzcw7atk+f0thO802Zg8iySq/HgZRPyMHT5/7l739B+SXkoMeQ2I3xXTTf
pBxE1KiUd8NY/uWgYWLFxwWfUD7KOTgovbK1uony05oDb2PA9R3PaL4pRNjG
P7iv2UB56yiiq8HbpYv93lCKmHTaT1OyiqwSsa3Q9436DjJELB8/tk/SHMp/
tYjfNretLS1j80LE5bsuNWtvksXu603Lbfrcg80vET12XQ/ZlUjungN/FNQM
iyli80zEgQXhS5sqyRYROyOsB4YfY/NNxLsZV9ovnCc3ijCPPvNL3xts3olo
G3jl9s57ZJuIrc0/tO1kvxcVbA7R70lHzkrOKs7grOYscBY5S5xLOJs5WzjL
nBs5WznbOCvyXrYjZyVnFWdwVnMWOIucJc4lnM2cLZxlzo2crZxtnBX5L9uR
s5KzijM4qzkLnEXOEucSzmbOFs4y50bOVs42zv/3+l+bDr0d
       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{105., 25.57279028471055}, {157., 311.8744783706853}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{157., 311.8744783706853}, {157., 311.8744783706853}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{160., 240.}, {160., 240.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 320.}, {-5.684341886080802*^-14, 320.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.7554984510025177`*^9},
 CellLabel->
  "During evaluation of \
In[352]:=",ExpressionUUID->"7d482505-af6e-4120-989d-ff8e3fa3be67"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"data", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"watR", ",", "fatR"}], "}"}], "]"}], ",", "vox"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7554984005698614`*^9, 3.7554984135662374`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon and Phase unwrapping", "Subchapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 
  3.754895112634607*^9}},ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-\
865e5a0d73d1"],

Cell[CellGroupData[{

Cell["Simulated data", "Subsection",
 CellChangeTimes->{{3.7548951197254925`*^9, 3.754895134108882*^9}, {
  3.7548952739283686`*^9, 
  3.754895275862955*^9}},ExpressionUUID->"a6da33c3-efdf-4208-ba9d-\
24feeed10a88"],

Cell[CellGroupData[{

Cell["Simulate some Data", "Subsubsection",
 CellChangeTimes->{{3.7548989462240496`*^9, 3.754898949663735*^9}, {
  3.754998398991782*^9, 
  3.7549984023582215`*^9}},ExpressionUUID->"2edddb44-1bfb-48ca-829f-\
4e01ababe642"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xdat", "=", 
    RowBox[{"ydat", "=", "250"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Create", " ", "some", " ", "gradients"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{"N", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "+", "j"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"10", " ", 
            RowBox[{"Sqrt", "[", "i", "]"}]}], " ", "+", 
           RowBox[{"10", " ", 
            RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{"i", "-", 
              RowBox[{".5", "xdat"}]}], "]"}], "1.2"], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Sqrt", "[", "j", "]"}]}]}], ")"}], " ", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", "Pi", " ", 
             RowBox[{"(", 
              RowBox[{"i", "/", "60"}], ")"}]}], "]"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "Pi", " ", 
             RowBox[{"(", 
              RowBox[{"j", "/", "60"}], ")"}]}], "]"}]}], ")"}]}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "xdat"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "ydat"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"normalize", " ", "and", " ", "add", " ", "some", " ", "noise"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noise", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "/", "100"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"xdat", ",", "ydat"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gradients", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"noise", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", 
           RowBox[{"Min", "[", "#", "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "-", 
           RowBox[{"Min", "[", "#", "]"}]}], ")"}]}], "-", "0.5"}], ")"}], 
      "&"}], "/@", 
     RowBox[{"TransData", "[", 
      RowBox[{"gradients", ",", "\"\<r\>\""}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "numer", " ", "of", " ", "wraps", " ", "over", " ", "the", " ", 
    "gradient"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nwraps", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "5", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"un", "=", 
    RowBox[{"nwraps", "*", "2", "Pi", " ", "gradients"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"wrap", " ", "the", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"im", " ", "=", 
   RowBox[{"Mod", "[", 
    RowBox[{"un", ",", 
     RowBox[{"2", "Pi"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549976917055855`*^9, 3.754997793597664*^9}, 
   3.754997849787154*^9, {3.754997938490676*^9, 3.754997938950401*^9}, {
   3.7549980726370535`*^9, 3.754998097766305*^9}, {3.754998131589113*^9, 
   3.7549983965618825`*^9}, {3.7549984543741026`*^9, 3.754998533495485*^9}, {
   3.7549985780393105`*^9, 
   3.7549985926172285`*^9}},ExpressionUUID->"9b91eb61-00ab-48df-a447-\
fedb2fd2f5db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Show", " ", "The", " ", "wrapped", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"ArrayPlot", "/@", "im"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754899296253713*^9, 3.754899302074945*^9}, {
  3.7548997047204943`*^9, 3.754899726571189*^9}, {3.7548999202062306`*^9, 
  3.754899923419654*^9}, {3.7549985691741757`*^9, 
  3.754998575763955*^9}},ExpressionUUID->"8d073112-10fc-4030-921c-\
ef26a3c0437e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Unwrap simulated Data", "Subsubsection",
 CellChangeTimes->{{3.7548952024977303`*^9, 3.7548952076400723`*^9}, 
   3.7548952687600183`*^9},ExpressionUUID->"b587fa99-4fd2-4a9f-84c3-\
cef7608ce734"],

Cell[BoxData[
 RowBox[{
  RowBox[{"unw", "=", 
   RowBox[{"Unwrap", "/@", "im"}]}], ";"}]], "Input",
 CellLabel->
  "In[564]:=",ExpressionUUID->"1d7b806a-dd41-45bf-9618-e62a5081374b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"correct", " ", "to", " ", "mean", " ", "phase"}], " ", "=", 
    "0"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"unw2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "-", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"2", "Pi"}]}], "]"}]}], "&"}], "/@", "unw"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"un2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "-", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"2", "Pi"}]}], "]"}]}], "&"}], "/@", "un"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Show", " ", "the", " ", "results"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"ArrayPlot", ",", 
       RowBox[{"{", 
        RowBox[{"im", ",", "un2", ",", "unw2"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.754899510078083*^9, 3.7548996092769794`*^9}, {
   3.754899730076022*^9, 3.754899740058651*^9}, 3.754899897935336*^9, {
   3.754998598008664*^9, 
   3.7549986049417105`*^9}},ExpressionUUID->"7e46033f-85f1-4dc7-bd60-\
9ce5bc39fd40"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dixon data", "Subsection",
 CellChangeTimes->{{3.754895417479931*^9, 3.754895434517124*^9}, 
   3.754997531203142*^9},ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-\
822a0387c0f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsubsection",
 CellChangeTimes->{{3.754997533020477*^9, 
  3.7549975367605343`*^9}},ExpressionUUID->"177a1753-5f03-4991-89d8-\
98a1aa966a50"],

Cell["\<\
Very specific case of dixon data converted from a phipils MRI scanner with \
magnitude, phase, real, imaginary, fat, water and B0 which was converted from \
dcm to Nii using DcmToNii.
You only need the real and imaginary data to perform the reconstructions. \
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, 
   3.7549026270064087`*^9, {3.7549986310072975`*^9, 
   3.7549986675954037`*^9}},ExpressionUUID->"87f508a6-1540-4424-bb30-\
6ac782debcec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dix", ",", " ", "B0", ",", 
     RowBox[{"{", 
      RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], ",", 
     "dixvox"}], "}"}], "=", 
   RowBox[{"ImportNiiDix", "[", "\"\<Dixondata.nii\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754895436716581*^9, 3.754895475639389*^9}, {
  3.7548955587023845`*^9, 3.7548956000566998`*^9}, {3.7548956465255575`*^9, 
  3.754895647049635*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nEcho", ",", "echo"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.76"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"echos", "=", 
    RowBox[{
     RowBox[{"Range", "[", "nEcho", "]"}], 
     RowBox[{"echo", "/", "1000"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"in", " ", "seconds"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7549009826085634`*^9, 3.7549010174370785`*^9}, {
  3.7549013021727595`*^9, 3.75490131146694*^9}, {3.754902432765706*^9, 
  3.7549024396770434`*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"real", ",", "imag", ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7548955873392324`*^9, 3.754895602809918*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],

Cell["Mask the background for better fitting", "Text",
 CellChangeTimes->{{3.754998713229601*^9, 
  3.754998728766362*^9}},ExpressionUUID->"5d8722a6-0f30-46da-9a66-\
70fc6e81a4e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanMag", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "mag"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mask", "=", 
    RowBox[{"Mask", "[", 
     RowBox[{"meanMag", ",", "5", ",", 
      RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
      RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
      RowBox[{"MaskClosing", "\[Rule]", "2"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"MaskData", "[", 
      RowBox[{"#", ",", "mask"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"real", ",", "imag", ",", "mag", ",", "phase"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.754901597258956*^9, 3.754901597375744*^9}, {
  3.754998684206936*^9, 3.7549987122940793`*^9}, {3.754998827495366*^9, 
  3.7549988310379753`*^9}},
 CellLabel->
  "In[584]:=",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create a B0Map from phase data", "Subsubsection",
 CellChangeTimes->{{3.7549011981743827`*^9, 
  3.7549012066710663`*^9}},ExpressionUUID->"fad4d634-1ff8-466d-8264-\
61cf6051a1dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B0Map", "=", 
   RowBox[{"mask", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "-", 
      RowBox[{"phase", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B0MapU", "=", 
   RowBox[{"UnwrapSplit", "[", 
    RowBox[{"B0Map", ",", "mag"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hz", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"2", "Pi", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"nEcho", "-", "1"}], ")"}], 
        RowBox[{"echo", "/", "1000"}]}], ")"}]}], ")"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "convert", " ", "the", " ", "B0map", " ", "to", " ", "Hz", " ", "for", " ",
     "dixon", " ", "reconstruction"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"B0Hz", "=", 
   RowBox[{"hz", " ", "B0MapU"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549010337577896`*^9, 3.7549010764325085`*^9}, {
  3.7549011783346214`*^9, 3.7549012406207705`*^9}, {3.7549016324444876`*^9, 
  3.7549016325870314`*^9}, {3.7549987461412563`*^9, 3.7549987618038483`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"f00cc5d1-3776-4533-888e-d37a4fe114b1"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
KnMX8/+9/g5XQki8
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
C4zrGYuMWxgbGfcw/r/X/wLMaaI0
       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{158., 305.08155005694675`}, {158., 305.08155005694675`}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{158., 305.08155005694675`}, {158., 305.08155005694675`}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{160., 240.}, {160., 240.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 320.}, {0, 320.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.754901069142455*^9, 3.754901078106738*^9}, 
   3.754901242398651*^9, 3.7549013780247307`*^9, 3.7549016340598927`*^9, 
   3.754998737705699*^9, 3.754998839375986*^9},
 CellLabel->
  "During evaluation of \
In[587]:=",ExpressionUUID->"79846589-a18d-4d5e-adb4-9e03c42f49c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0Map", ",", "B0Hz", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.754901161022546*^9, 3.754901171131878*^9}, {
  3.754901417212268*^9, 3.754901418059086*^9}, {3.7549987770718904`*^9, 
  3.7549988046390266`*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate a T2 star map from the echos", "Subsubsection",
 CellChangeTimes->{{3.75490125599796*^9, 
  3.7549012670385733`*^9}},ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-\
09b964323db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s0", ",", "T2star"}], "}"}], "=", 
   RowBox[{"T2Fit", "[", 
    RowBox[{"mag", ",", "echos"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754901290700407*^9, 3.754901324588889*^9}, {
   3.7549013810507326`*^9, 3.754901394283003*^9}, {3.7549016467968245`*^9, 
   3.754901652796183*^9}, {3.7549021603045063`*^9, 3.754902160892595*^9}, {
   3.7549022127335978`*^9, 3.7549022158522654`*^9}, 3.7549024289920497`*^9},
 CellLabel->
  "In[581]:=",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"s0", ",", "T2star", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549013968454103`*^9, 3.7549014130665936`*^9}, {
  3.754901466908824*^9, 3.75490147737572*^9}, {3.7549021722049284`*^9, 
  3.754902181595815*^9}},
 CellLabel->
  "In[582]:=",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Perform iDeal reconstruction with initial B0 and T2star", \
"Subsubsection",
 CellChangeTimes->{{3.754901503069392*^9, 
  3.754901520094133*^9}},ExpressionUUID->"202a85c6-aa77-469d-80b0-\
13a415d3aa61"],

Cell["The reconstruction uses a 8 peak fat spectrum by default.", "Text",
 CellChangeTimes->{{3.754901708095419*^9, 3.754901724207772*^9}, 
   3.754998889567275*^9},ExpressionUUID->"e24414a3-74e8-46ce-b0b6-\
aa68e3bb6b37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "DixonReconstruct", "]"}]}]], "Input",
 CellChangeTimes->{{3.7549017008317294`*^9, 3.7549017047021294`*^9}, {
  3.7549988929307747`*^9, 3.7549988959752254`*^9}},
 CellLabel->
  "In[591]:=",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"DixonPrecessions", "\[Rule]", 
      RowBox[{"-", "1"}]}]},
    {
     RowBox[{"DixonFieldStrength", "\[Rule]", "3"}]},
    {
     RowBox[{"DixonFrequencies", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "3.8`", ",", "3.4`", ",", "3.13`", ",", "2.67`", ",", "2.46`", ",", 
          "1.92`", ",", "0.57`", ",", 
          RowBox[{"-", "0.6`"}]}], "}"}]}], "}"}]}]},
    {
     RowBox[{"DixonAmplitudes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "0.089`", ",", "0.598`", ",", "0.047`", ",", "0.077`", ",", "0.052`",
           ",", "0.011`", ",", "0.035`", ",", "0.066`"}], "}"}]}], "}"}]}]},
    {
     RowBox[{"DixonIterations", "\[Rule]", "5"}]},
    {
     RowBox[{"DixonTollerance", "\[Rule]", "0.01`"}]},
    {
     RowBox[{"DixonMaskThreshhold", "\[Rule]", "0.05`"}]},
    {
     RowBox[{"DixonFilterInput", "\[Rule]", "True"}]},
    {
     RowBox[{"DixonFilterOutput", "\[Rule]", "True"}]},
    {
     RowBox[{"DixonFilterSize", "\[Rule]", "1"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7549021318263674`*^9, 3.7549988967371626`*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"5bdc8e8c-dd4e-4d46-a349-35c98a1430a3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"perform", " ", "the", " ", "IDEAL", " ", "dixon", " ", "fit"}], 
    ",", " ", 
    RowBox[{"B0map", " ", "in", " ", "Hz"}], ",", " ", 
    RowBox[{"T2star", " ", "in", " ", "s"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fraction", ",", "watfat", ",", "iopImages", ",", 
      RowBox[{"{", 
       RowBox[{"B0fit", ",", "t2St", ",", "r2St"}], "}"}], ",", "itt", ",", 
      "resDix"}], "}"}], "=", 
    RowBox[{"DixonReconstruct", "[", 
     RowBox[{
     "real", ",", "imag", ",", "echos", ",", "B0Hz", ",", "T2star", ",", 
      RowBox[{"DixonFilterInput", "\[Rule]", "True"}], ",", 
      RowBox[{"DixonFilterOutput", "\[Rule]", "True"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.754901525562724*^9, 3.754901528603548*^9}, {
  3.754901978846877*^9, 3.754901984012291*^9}, {3.754902191998588*^9, 
  3.7549022027641563`*^9}, {3.7549023148142376`*^9, 3.7549023278657026`*^9}, {
  3.7549024464298067`*^9, 3.75490245145186*^9}, {3.7549026391006436`*^9, 
  3.754902642427657*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"B0fit", ",", "t2St", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.05"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549019554403896`*^9, 3.7549019595644007`*^9}, {
  3.7549020857896004`*^9, 3.754902087723256*^9}, {3.754902383757766*^9, 
  3.754902394123337*^9}, {3.7549024747014837`*^9, 3.7549024767484083`*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"iopImages", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028300607553`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"watfat", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"watfat", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "dixvox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549016899492655`*^9, 3.7549016978680615`*^9}, {
  3.7549028011392927`*^9, 3.7549028266850023`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"fraction", ",", "dixvox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549015332953105`*^9, 3.7549015571315794`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ME-SE  (TSE) T2 mapping", "Subchapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
  3.75489562596196*^9, 3.754895628456525*^9}, {3.7549025592745514`*^9, 
  3.7549025710189853`*^9}},ExpressionUUID->"b341beda-5ee8-44a9-9312-\
619b2c8f81f1"],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.7549991104024525`*^9, 
  3.7549991145354114`*^9}},ExpressionUUID->"b8cae968-01be-4d76-93c4-\
914725dacb60"],

Cell["\<\
Very specific case of T2 data converted from a phipils MRI scanner using a \
multi echo spin echo acquisition and exported with the T2 map which was \
converted from dcm to Nii using DcmToNii.\
\>", "Text",
 CellChangeTimes->{{3.7548954792598314`*^9, 3.7548955300130854`*^9}, {
   3.754902580410942*^9, 3.7549026194989295`*^9}, 
   3.7549029519227858`*^9},ExpressionUUID->"838c8185-e694-4949-9dd0-\
0c59b961e8bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"T2data", ",", "fit", ",", "T2vox"}], "}"}], "=", 
   RowBox[{"ImportNiiT2", "[", "\"\<T2data.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echo", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Necho", ",", "T2echo"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"17", ",", "7.6"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"echos", "=", 
   RowBox[{
    RowBox[{"Range", "[", "Necho", "]"}], "T2echo"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754902725324188*^9, 3.754902785821125*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanT2", "=", 
   RowBox[{"NormalizeData", "[", 
    RowBox[{"Mean", "@", 
     RowBox[{"Transpose", "@", "T2data"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"meanT2", ",", "15", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"T2data", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"T2data", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754903335308236*^9, 3.7549033466208315`*^9}, {
   3.754903384462629*^9, 3.7549034269760156`*^9}, 3.754913701077524*^9},
 CellLabel->
  "In[600]:=",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define Slice Profiles", "Subsection",
 CellChangeTimes->{{3.7549037926246223`*^9, 
  3.7549037996799846`*^9}},ExpressionUUID->"e4d814b7-307b-44b1-8176-\
77d613190d5c"],

Cell["\<\
To accurately fit the data the slice profile needs to be defined with the \
exitiation and refocussing pulses\
\>", "Text",
 CellChangeTimes->{{3.7549028998233905`*^9, 
  3.754902948209705*^9}},ExpressionUUID->"84309912-9796-472d-8aa5-\
a93ea74bc056"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ex", ",", "ref"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"90", ",", "180"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"flip", " ", "angles"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"exitation", ",", "refocus", ",", "plots"}], "}"}], "=", 
    RowBox[{"GetPulseProfile", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<sg_150_100_167\>\"", ",", "ex", ",", 
        RowBox[{"{", 
         RowBox[{"2.2845", ",", "3.9632", ",", "768"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"exitation", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<sinc_centre\>\"", ",", "ref", ",", 
        RowBox[{"{", 
         RowBox[{"1.9037", ",", "2.0560", ",", "486"}], "}"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"refocussing", " ", "puls"}], ",", 
        RowBox[{"{", 
         RowBox[{"name", ",", "angle", ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "t", ",", "w"}], "}"}]}], "}"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SliceRange", "\[Rule]", "12"}], ",", 
      RowBox[{"SliceRangeSamples", "\[Rule]", "15"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "sliceRangeSamples", " ", "determines", " ", "the", " ", "speed", " ", 
    "of", " ", "the", " ", "EPGT2", " ", "fit"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angle", "=", 
   RowBox[{"{", 
    RowBox[{"exitation", ",", "refocus"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.754902749179872*^9, {3.754902845965876*^9, 3.7549028890530605`*^9}, {
   3.754902919632263*^9, 3.7549029249090977`*^9}, {3.75490298065442*^9, 
   3.754902999821941*^9}, {3.7549032406720304`*^9, 3.7549032407331963`*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slices", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"SimulateSliceEPG", "[", 
      RowBox[{"exitation", ",", "refocus", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1000", ",", "70"}], "}"}], ",", "echo", ",", "#"}], 
        "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"0.8", ",", "1.", ",", "1.2"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{"Row", "[", "slices", "]"}]}], "Input",
 CellChangeTimes->{{3.75490295733055*^9, 3.75490303724695*^9}, {
  3.754903110045624*^9, 3.754903180060878*^9}, {3.7549032511356535`*^9, 
  3.754903254044939*^9}, {3.754903298110441*^9, 3.754903309416548*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],

Cell[CellGroupData[{

Cell["calibrate and Fit the data", "Subsection",
 CellChangeTimes->{{3.7549136808715067`*^9, 
  3.754913705573042*^9}},ExpressionUUID->"a32b7405-2d28-4efa-ad38-\
9fc2d3fe6ff7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T2f", ",", "B1", ",", "S0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"stdT2f", ",", "stdB1", ",", "stdS0"}], "}"}]}], "}"}], "=", 
  RowBox[{"CalibrateEPGT2Fit", "[", 
   RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
    RowBox[{"EPGRelaxPars", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1400.", ",", "365."}], "}"}]}], "}"}]}], ",", 
    RowBox[{"EPGFitPoints", "\[Rule]", "20"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549036012855253`*^9, 3.75490366959524*^9}, {
   3.7549101256964436`*^9, 3.7549101531350975`*^9}, 3.7549139103888135`*^9, {
   3.7549181943181515`*^9, 3.7549181966994443`*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "136.1197672907556`", ",", "1.100079735967464`", ",", 
     "278.3770061339385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "14.547850637124045`", ",", "0.20203959025473375`", ",", 
     "53.4521234099252`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7549182096178136`*^9, 3.7549991838111954`*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"c61b8349-772e-459b-801f-872114982cd9"]
}, Open  ]],

Cell["\<\
Perform the EPGfit, only fitting water signal and calibrating the fat T2 from \
the subcutaneous fat\
\>", "Text",
 CellChangeTimes->{{3.7549994845540285`*^9, 
  3.7549994980291653`*^9}},ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-\
c468cb86b649"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T2map", ",", "B1Map"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"watEPG", ",", "fatEPG", ",", "ffEPG"}], "}"}], ",", "resEPG"}],
     "}"}], " ", "=", " ", 
   RowBox[{"EPGT2Fit", "[", 
    RowBox[{"T2data", ",", "echo", ",", "angle", ",", 
     RowBox[{"EPGCalibrate", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputCalibration", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7549034567488422`*^9, 3.7549035295651903`*^9}, {
  3.7549994821031966`*^9, 
  3.754999489810546*^9}},ExpressionUUID->"8de819ca-705a-4220-8130-\
c192af8d549b"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549042371860256`*^9, 3.7549042619343824`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],

Cell["perform the EPGfit, fitting both water and fat signal", "Text",
 CellChangeTimes->{
  3.7549995006740847`*^9},ExpressionUUID->"3ef473e1-450e-4731-ae4d-\
89c5b79bd2a1"],

Cell[BoxData["\<\"The dictionary contains 908871 values, and took 17.8 \
seconds to generate.\"\>"], "Print",
 CellChangeTimes->{3.754916254717434*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"fac8500f-e172-4333-a9f7-7e02973e79b9"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "B1Map", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"T2map", ",", "T2fmap", ",", "T2vox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"100", ",", "200"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549099865144615`*^9, 3.7549099905281663`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DTI and IVIM ", "Subchapter",
 CellChangeTimes->{{3.7548951014856977`*^9, 3.754895112634607*^9}, {
   3.75489562596196*^9, 3.754895628456525*^9}, 
   3.7549109686882687`*^9},ExpressionUUID->"47034db1-d0d6-4b23-af6e-\
0f6546045b3b"],

Cell[CellGroupData[{

Cell["Generating diffusion gradients", "Subsection",
 CellChangeTimes->{{3.754910970230391*^9, 
  3.754910977730441*^9}},ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-\
8612c20d46c3"],

Cell["Generate gradients in the notebook.", "Text",
 CellChangeTimes->{{3.75491113415291*^9, 3.754911143400069*^9}, 
   3.754913719097209*^9},ExpressionUUID->"ea42799b-6877-4b38-b569-\
13addb9d2db3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"GenerateGradients", "[", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6", ",", "12", ",", "24"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bval", "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100", ",", "250", ",", "600"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Length", "[", "#2", "]"}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"bval", ",", "grad"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grads", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"grad", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvals", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"bvals", ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549109906143837`*^9, 3.754911107683816*^9}, {
  3.7549144751927624`*^9, 3.7549144808054914`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grads", ",", "bvals"}], "]"}]], "Input",
 CellChangeTimes->{{3.754911113493312*^9, 3.754911119058152*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],

Cell["Or generate Gradients in the GUI", "Text",
 CellChangeTimes->{{3.7549111465330987`*^9, 
  3.7549111568381367`*^9}},ExpressionUUID->"06fed56e-cf72-4eab-877f-\
8a2fa48264d1"],

Cell[BoxData[
 RowBox[{"GenerateGradientsGUI", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7549111235416102`*^9, 
  3.7549111293220572`*^9}},ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-\
10a30bdf2cee"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import The Data", "Subsection",
 CellChangeTimes->{{3.755000756204663*^9, 
  3.7550007614125185`*^9}},ExpressionUUID->"37567aef-8b97-425f-abdf-\
d82ae053b962"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNiiDiff", "[", "\"\<DTIdata.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"datareg", ",", "dwivox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<DTIdata-reg.nii\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tens", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"ImportNii", "[", 
     RowBox[{"\"\<DTI-tensor.nii\>\"", ",", 
      RowBox[{"NiiMethod", "\[Rule]", "\"\<data\>\""}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"labels", ",", "vox"}], "}"}], "=", 
   RowBox[{"ImportNii", "[", "\"\<labels.nii\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754895634046774*^9, 3.754895667562751*^9}, 
   3.7549147982158546`*^9, {3.7549998933836317`*^9, 3.7549998936081953`*^9}, {
   3.7550004747855062`*^9, 3.7550004893652954`*^9}, {3.7550005862069235`*^9, 
   3.755000615146139*^9}, {3.7550007439214835`*^9, 3.7550007442834463`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Prep the IVIM and DTI data", "Subsection",
 CellChangeTimes->{{3.75491344533817*^9, 3.754913448807496*^9}, {
  3.754913730092126*^9, 3.754913732275964*^9}, {3.7549138844520955`*^9, 
  3.7549138871242504`*^9}, {3.754999581165014*^9, 3.7549995852456675`*^9}, {
  3.755000767977996*^9, 
  3.755000769270936*^9}},ExpressionUUID->"29712ec0-7f9d-4363-bd69-\
fedc89b926de"],

Cell[CellGroupData[{

Cell["Sort and mask", "Subsubsection",
 CellChangeTimes->{{3.755000777818706*^9, 
  3.755000782394892*^9}},ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-\
52b01fd6c20a"],

Cell["\<\
First step is to order and Normalize the diffusion data. Also find all the \
unique b - values and their positions.\
\>", "Text",
 CellChangeTimes->{{3.754999902345565*^9, 3.7549999343805895`*^9}, 
   3.755000639302743*^9},ExpressionUUID->"27abfcd5-f584-46cd-8df8-\
6aa1f69b339e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"NormalizeData", "[", "dwi", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "}"}], "=", 
   RowBox[{"SortDiffusionData", "[", 
    RowBox[{"dwi", ",", "grad", ",", "val"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bval", ",", "pos"}], "}"}], "=", 
   RowBox[{"UniqueBvalPosition", "[", "val", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bmat", " ", "=", " ", 
   RowBox[{"Bmatrix", "[", 
    RowBox[{"val", ",", "grad"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdata", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"Transpose", "@", "dwi"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549134223765755`*^9, 3.75491346814913*^9}, 
   3.7549137609540815`*^9, {3.7549145002322235`*^9, 3.75491450083834*^9}, {
   3.754914563063095*^9, 3.754914615898838*^9}, {3.7549159495136757`*^9, 
   3.7549159519931593`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],

Cell[BoxData[
 RowBox[{"GradientPlot", "[", 
  RowBox[{"grad", ",", "val"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549137630150776`*^9, 3.7549137707406816`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, 
   3.7549996248755584`*^9},ExpressionUUID->"58a620c5-fd10-4d1a-b298-\
19131a1f4f75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Mask", "[", 
    RowBox[{"mdata", ",", 
     RowBox[{"MaskSmoothing", "\[Rule]", "True"}], ",", 
     RowBox[{"MaskComponents", "\[Rule]", "2"}], ",", 
     RowBox[{"MaskClosing", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dwi", "=", 
   RowBox[{"MaskData", "[", 
    RowBox[{"dwi", ",", "mask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549135142786407`*^9, 3.754913543186923*^9}, {
  3.75491373622853*^9, 3.7549137504520597`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"mdata", ",", "mask", ",", " ", "dwivox"}], "]"}]], "Input",
 CellChangeTimes->{{3.7549135038347163`*^9, 3.75491351177946*^9}, {
   3.754913554131217*^9, 3.7549135547232995`*^9}, 
   3.7549996256124425`*^9},ExpressionUUID->"e78c9670-4878-485f-9214-\
babcab9aa322"]
}, Closed]],

Cell[CellGroupData[{

Cell["Denoise DWI data", "Subsubsection",
 CellChangeTimes->{{3.754914631559713*^9, 
  3.7549146366652336`*^9}},ExpressionUUID->"75236b9f-93a9-4123-9f0b-\
e0d6063ca27a"],

Cell["\<\
Denoise with a PCA based method, if noise is also measured it can be used as \
an input.\
\>", "Text",
 CellChangeTimes->{{3.754999595850682*^9, 3.7549996174036827`*^9}, 
   3.7549996609142113`*^9},ExpressionUUID->"8f267ee5-face-4d96-81f2-\
eb7a65fb2c80"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dwiN", ",", "sigma"}], "}"}], " ", "=", " ", 
   RowBox[{"PCADeNoise", "[", 
    RowBox[{"dwi", ",", "mask", ",", 
     RowBox[{"FitSigma", "\[Rule]", "True"}], ",", 
     RowBox[{"PCAOutput", "\[Rule]", "False"}], ",", 
     RowBox[{"PCATollerance", "\[Rule]", "0"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754914643126322*^9, 3.7549146569014473`*^9}, {
  3.7549147466066494`*^9, 3.7549147486135406`*^9}, {3.7549996343115797`*^9, 
  3.754999634647128*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dwiN", ",", 
   RowBox[{"MaskData", "[", 
    RowBox[{
     RowBox[{"dwi", "-", "dwiN"}], ",", "mask"}], "]"}], ",", "dwivox", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "150"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549147303342247`*^9, 3.754914741221796*^9}, {
  3.754914837336503*^9, 3.7549148434932365`*^9}, {3.754999733194705*^9, 
  3.754999744672658*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],

Cell["\<\
With the sigma map from the PCA denoise the SNR can be calculated.\
\>", "Text",
 CellChangeTimes->{{3.7549996406923895`*^9, 
  3.754999661576975*^9}},ExpressionUUID->"645118b4-3efb-4e87-b82b-\
7000552f32c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SNR4D", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DevideNoZero", "[", 
        RowBox[{"#", ",", "sigma"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", "dwiN", "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.754914770757429*^9, 3.7549147779259467`*^9}, 
   3.754999639357337*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"3d0989cb-3f8b-44de-811e-bb762ce4f8ac"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"SNR4D", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "75"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549997522715864`*^9, 3.7549997718589225`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Motion and eddy current correction", "Subsubsection",
 CellChangeTimes->{{3.754914684136002*^9, 
  3.754914709700195*^9}},ExpressionUUID->"d4ebefef-2c40-4afa-86e2-\
01e82ef7e608"],

Cell["Separately register the left and right leg", "Text",
 CellChangeTimes->{{3.7549999548970714`*^9, 
  3.7549999729488125`*^9}},ExpressionUUID->"2c663dae-ce55-4c0e-9ead-\
798d28b2441d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datareg", " ", "=", " ", 
   RowBox[{"RegisterDiffusionDataSplit", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dwiN", ",", 
       RowBox[{"Dilation", "[", 
        RowBox[{"mask", ",", "2"}], "]"}], ",", "dwivox"}], "}"}], ",", 
     RowBox[{"Iterations", "\[Rule]", "100"}], ",", 
     RowBox[{"NumberSamples", "\[Rule]", "1500"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549147131639323`*^9, 3.7549147214124303`*^9}, {
  3.7549999466673007`*^9, 
  3.7549999473195624`*^9}},ExpressionUUID->"9b20175a-57c0-4449-83ec-\
169ccd6f1d3d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1X9MlHUcB/AH7Q8kxgWjwmFxEopRAiokB5Jvfpz8xuP4cXDHHQeCATlx
5Q8w2J4pE5lOb0RZieNJzejHCHWzbKlPhSbJYB3RWJJcTMZNmFBbZFMhGp/v
Fh+227PX8+H9PN/nc9/PcyvLaowVSyRJUuY//x0X/qY3LxzLQSew2J7MTzH7
Mwcwr2DWMgczhzCvZl7DHMb8MnM4cyTzOub1zBuYo5ijmV9h3sgcw6xjjmWO
Y97EHM/8KvNmZiy2DDgN1tGxN8vofAKefpyZ0CKXUD0BQ/1NPmFPmqmeiMig
VSm+D/KongiProirY3EGqidBNt3vd7yRRvUk/NmT2zlyMpnqyUiNP3jIOUnr
kueddNXqaBd90MOQnVY/Hkx9lPUYqs7q1YyJ72ELlKq6vZXl1Hd5C9YcuZwa
YRN9TYG75euJXDP1TU7Be/bT13b7iL6lwjBzMejzX6nPcirc9uyUz46Iehp2
PR5o9hCW06CevO7Ze0zU0zGNZ2tMx6jvcjrUxmTbzEti/RnoiO6PaPpFrC8D
h396rlFxi32TCYfz3CXN67TP5ExMz6ReeEcXSvUsaJXh/vqWZ6ieRee18QvH
bMhVpy/PetGcytnQbmxfsr1qOf3fViho6+u+vZLqW2Ff/XPAC2NiTgyobT3w
ROy3NAcwQHUP51vdYr0GBLxfpxsYpudTDfCJOxP44V2xb3IQbjrXkb47ifI5
8I6p+eusM53yOZgrvOIceZhD+RzcNIX4xagFlDdiU01j3egPFsobUXgg1G/n
oJ3yRuwZqX0rI2wb5Y2UE/s3d7HBLDOrzFIeyzPLzCqzlM/yzHI+wv2i9CHf
lVE+H3+MVX/z99v0fFIBWpN2Znf6FlO+AB8cVzT371B/5AIsfdT8vOEKPfd8
3+75h+li72ZT3oQdHa0ZVZ9Qv2HCUclj6swyMW8mdPU5Jm9F6ilvwr3bR6aS
R8T3Vwj7tE/ctb30nkAhsP+3Pu9QMW+FUBwZS/2i1lK+EJF5xdV6b/HeLYJi
8UvR3QykfBEwPtYZ5rWM8vNu1XjO+npQvgiuf9qcUpb4nTADK5wXSwbp+jDD
VXHIq6FezKMZj9a91pO4i9armuFzcC6t/XwC5S1oO5VfeeLdRMpb0HuhzG9C
S5Yt+LTOP/qjcLJqQay5J6JhjiwVY3a24uNxB10PxXDdOuvcvlbcvxjq9Tjn
0SZ636jFcAfbjZovxO+EFXaX7seH39P8woqO8zH78qdovmUrvloftbx0mK6n
WlFbuw9BmeL+Ntjd5ZMJ0ymUt8F71R5zgDOT8jZEDTUHjp4S82ODPrcha+qS
2GcluNNwWN2gofcxStDdfePBl4M2ypdg/46RgYIbpZQvwUTl7yde7KJ5ksQ+
pP2qZQaznVlmVphVZhezVMruzwxmO7PMrDCrzC5mqYzdnxnMdmaZWWFWmV3M
0rbF1jKD2c4sMyvMKrOL+X/HfwFd5eDe
       "]]}, 
     {RGBColor[1, 0.5, 0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd1XtQVHUUB/AtBsVoUBt0GCNCQUVNAQMRQfjusvKGffHYBywX8IFjBmkm
ocRVCtakwMcWouaq2MioCAymAwlXNCEVUYctSmIYNIcwZ/gj1FA0G86vyR8z
zJ0PZ7/33uF3ztmZWbnaVa/KZDLbi99/r+M/w+Hj15WgP+BlO3GewtmVsxtn
d86enGdx9uY8h7MP5/mc3+G8iLMfZ3/Oizm/yzmAcyDnJZyDOC/lHMx5GWaF
rNSODWeTQ2A6G27K7WIORc4mR9XCPczLIXz8RclXi5nDsGBny4HAY1nkcFTc
uWzKvZtJBrbknywcvS+MWwQkxcGmuVsyqC7HnJLQzsC2NKrLsftx+bPQdgPV
FXCPu2ew1qZQXQGzc5/v4kM6qkdgdpdhjfW8muoR8GupPlUUH091JXrWfrIX
PVFUV2L0SkvFN0uUVF+ByqnPEsdWy6m+Aj0lFyaVPw2jeiRyZhbU1JSHUj0S
0dWyX9vmh1A9ClLbQz9r0TKqRyGv93OvoAiyLBo32sLrBxaxejT8vr00474j
q8dgWDnWd28fnYsYA4sHyoR2dm6xyC8YzinbTecqxmJw+fcFfs9ZH8Th+Hdy
c9Kb1CdiHJYeNDY0uLC+iodlYvZnkROpD8V4QH57RF/I+jYB/b5ppwa751E9
AbYqv8C161jfJ0J958jWk2VkMRG2Z60Og4fYHKhwYzT/0VkHX6qrULl/xF71
gD1fjRsDedLJanp/qOHWkjnXvWs5fV6NRpcqh587FeOW1AjY7jmhYQ2dl0wD
7/qHq+01dJ7QwOOBt6w2WEN5De7lqkIGEpIor8H1rsS9BZtTKa/FzNv2Evle
I+W1CD3tXz21OJ3yWjhnFtpz3qD+lLQ48MeTa+v9Wf/qkFm1obtnRhbldXB+
K1O14zpZ1GHyUPPR54k0D5IO03WxxVGVbD6SsPE1R0VEHRlJ8LgW7uLM6mIS
toatnt/9X/7F558XN629RfeXJaPORbXtdR/2/GSUSqanTQn0fmIyDKH64C4F
e/9kqMuLV3W7mSmfgsDTXqmfrjdRPgW2w5M6i/brKZ+C0gjl3cjWZMqnQF5n
ODLtoZbyqZjd7D6QqKX5QioCdFOsOy7EUT4Vt2pHpEgNnZeUiory40+spgjK
63HZMjQGJ1Bej8f6dVF9X7N50KOutS5gQyztMUmPjq6ixvOz2B40wBIUZpf7
0N6EAXkq51XbNKyfDcj3Nf7+9pdkyQC8H3jxxE22Z41QK+f9MPQL3Q9GnHvS
aGkKpueJRnQ0mcLjamjeJCPyzgwHynrZfJpQ6V+f31hG8w8TxGnFiTE21r8m
dPy5IOjMdNoX0ov639ad56aw/ZGGip92ddW30+eRBsG9KsirkOXTYCnYGNtQ
SZbS4FZ1zf7BHpZPR+36A9ZX1rD/Xzp8/Ofe3BStoHw6Vl6wz9k3cQXl0zHB
SVk6eiKa8mZ4xA2Zgl0TKG/GpR9zrUdd2fyYEflo+/6DA7RPJTOWPS13arXT
vpVlYMeH/r8NXqV9jAz0xl/fnFvN9nUGkvtKPrIqaJ9LGfDYsm+SYzv1o0zA
Wc/Ow1ebqV89BViU2VeOFGbR/QT07hoRmydT/wsClMdKHVw3s/kQENbx3l8X
m8g2ARV1luKYO2xeBCycvEH0ekzuZ89l32+ZL9uTMzgLnEXONs4S537Osizu
+ZzBWeAscrZxljj3c5Zlv2xPzuAscBY52zhLnPs5/+/6D4xTL0k=
       "]]}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 157.5082101915792}, {110., 30.088702629302844`}}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 157.5082101915792}, {80., 157.5082101915792}}]}, 
     {RGBColor[0, 1, 0], PointSize[Large], AbsoluteThickness[1.6], 
      PointBox[{{80., 120.}, {80., 120.}}]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->100,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 160.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.7549148671306114`*^9},
 CellLabel->
  "During evaluation of \
In[115]:=",ExpressionUUID->"f06fe0fb-b50f-4822-b830-086cb2ff9f50"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IVIM Fitting", "Subsection",
 CellChangeTimes->{{3.7549137794368954`*^9, 
  3.7549137848242793`*^9}},ExpressionUUID->"194fc7a6-9250-4380-ab91-\
b6f48a0893c5"],

Cell[CellGroupData[{

Cell["Whole volume calibrate", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, 
   3.754999859291905*^9},ExpressionUUID->"c83a9054-dd74-47d7-ad95-\
3b9d6619e603"],

Cell["\<\
Calculate the Iso images from each b - value and calculate the mean signal \
volume\
\>", "Text",
 CellChangeTimes->{{3.7549999858705673`*^9, 
  3.755000031508486*^9}},ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-\
a5175ce9af64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dwiIso", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"datareg", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}], "]"}], "&"}], "/@", 
     "pos"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sig", " ", "=", " ", 
   RowBox[{"MeanSignal", "[", "datareg", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigI", "=", 
   RowBox[{"MeanSignal", "[", "dwiIso", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549159320232944`*^9, 3.7549159330627413`*^9}, {
   3.7549160034802017`*^9, 3.754916006774444*^9}, 3.754999982025779*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],

Cell["Fit and show the IVIM signal of the whole volume", "Text",
 CellChangeTimes->{{3.7550000404661784`*^9, 
  3.7550000531960096`*^9}},ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-\
77fbc5364897"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fiti", "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"sig", ",", "val", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fitIi", "=", 
    RowBox[{"IVIMCalc", "[", 
     RowBox[{"sigI", ",", "bval", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", ".05", ",", ".003", ",", ".1"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fiti", ",", "sig", ",", "val", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PlotIVIM", "[", 
  RowBox[{"fitIi", ",", "sigI", ",", "bval", ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7549155168555403`*^9, 3.75491555474142*^9}, 
   3.7549157282165155`*^9, {3.7549157951437693`*^9, 3.7549157954631233`*^9}, {
   3.754915838571384*^9, 3.754915852712798*^9}, {3.754915888023015*^9, 
   3.7549158974301367`*^9}, {3.754915972296256*^9, 3.7549159737517576`*^9}, 
   3.754916032154574*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"],

Cell[BoxData[
 DynamicModuleBox[{QMRITools`PlottingTools`Private`plot$$ = GraphicsRow[{
    Show[
     QMRITools`PlottingTools`Private`pl$20616[
     QMRITools`PlottingTools`Private`f1$20616, 
      QMRITools`PlottingTools`Private`f2$20616, 1 - 
      QMRITools`PlottingTools`Private`f1$20616 - 
      QMRITools`PlottingTools`Private`f2$20616, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 4], 2}, #, 
      QMRITools`PlottingTools`Private`func$20616, 1], 
     QMRITools`PlottingTools`Private`pl$20616[
     1 - QMRITools`PlottingTools`Private`f2$20616, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 1], 1}, #, 
      QMRITools`PlottingTools`Private`func$20616, 1], 
     QMRITools`PlottingTools`Private`pl$20616[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 2], 1}, #, 
      QMRITools`PlottingTools`Private`func$20616, 1], 
     QMRITools`PlottingTools`Private`pl$20616[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$20616 - 
      QMRITools`PlottingTools`Private`f2$20616, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 3], 1}, #, 
      QMRITools`PlottingTools`Private`func$20616, 1], 
     ListPlot[QMRITools`PlottingTools`Private`pdat$20616, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$20616, 4], 
        PointSize[0.02]}]], 
    Show[
     QMRITools`PlottingTools`Private`pl$20616[
     QMRITools`PlottingTools`Private`f1$20616, 
      QMRITools`PlottingTools`Private`f2$20616, 1 - 
      QMRITools`PlottingTools`Private`f1$20616 - 
      QMRITools`PlottingTools`Private`f2$20616, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 4], 2}, #, 
      Log[QMRITools`PlottingTools`Private`func$20616], 2], 
     QMRITools`PlottingTools`Private`pl$20616[
     1 - QMRITools`PlottingTools`Private`f2$20616, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 1], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$20616], 2], 
     QMRITools`PlottingTools`Private`pl$20616[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 2], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$20616], 2], 
     QMRITools`PlottingTools`Private`pl$20616[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$20616 - 
      QMRITools`PlottingTools`Private`f2$20616, {
       Part[QMRITools`PlottingTools`Private`cols$20616, 3], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$20616], 2], 
     ListPlot[QMRITools`PlottingTools`Private`pdatL$20616, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$20616, 4], 
        PointSize[0.02]}]]}]& }, 
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1:eJwVkHs01AkUx5GE1VB5pVQOeUUir91W93qsWFFLD5nM2KiIGmTJeP8SymNU
VqmoGEyxavMeIpFsQjaPHxlkkOcMJY89p7Wzf9xzzz3fe+75fK7GKYbraQkx
MTE3Uf3fv0mc0Xh7u7reulte3EV8DpQXI4rkrpRDQHpUWcc3IbyJUKFV63bC
5VrONpkVIej/aDfyN3UUKEaVkylCIXjc82DTv36FnvzS73oHhBD89vRa7ZdS
qODTQfWvEkK0z7TZVV0VjFV9quxwUQjxe3a3c6k6yFoOya7+KgCbYc9CfoMO
KobsXuXOC2CVlRorp6uLRYmSR17MCoApnDGhLehiRq5Tac+YAIJKim6Jp+pj
TNYrV+MeAdAM9H51qDPEEheiOLNSAFsVN/5zTsEEo2u6w6ciBbAkvz51OdgS
8wPvJ5oqCCA6InNXlZENyrK46lInZ0HCTe/VGmkH1PYbcr9aNwP7P6mRGnQX
7NZh1VA0ZiC9On3bkpYrRmJrp2PmNAx6NqY2nziKbpoZfgpS02AYYtGbHeOO
M4eHWrZFTcEhqQrHgwwqllZszaoUm4K2Rf6ydw4NYUHq0nzkJLCM03wftXph
j9ei4w3JSaje0drAxlP4p87ZluH0CdhQT68+0u2NcPlLWYfSBLjdDf9pzuU0
UjluLNP8T9CoPc3AiTOol/smPsbwE+z1j0pUZPqigRddzZk7DqmzGXu75vxQ
n1mYM3p4HJS2S0Y7JPrjiSDaLHd4DBLTlk9yJM4jX1lrch1zDHT+sOuvzb6A
N7WnFIblxsD7pXvuY9VAJJsHKJ15o6Db1vlwpisQOyPtnhTajkL8k9A56YdB
GPekxIPO40P3HprMXXow+o3X2D6L4UMBpUeVoXYRDVvHVpN28oHSFB6mPnYR
2QIxZvqrEfBX9XpgnRuC8SsNx0rPjwDdLlgVGb/h3Uf6OxwVRqDrrWJirGUo
HiFUd3tVfASrhZV684VQDGjucFXxEc1fZB1e14fhi82nDiXLfQST67Q7bVGX
kJkgGKfXDgMn2YavZBmOR3c8ZZszhqHc0zXCUoKJKwn52RT1YahsZ/Pe1TGR
9+JaX2neEBxW0WTZJkfgLxVNfnVrhoD3L1/W4OdIZP1uTt8XNAjTNmZRx9ZG
4bhpaqrFKA/Sac/2U99FIccv017LhQf6m4PfdKdG40yXlmdN0wBQizzz9akx
mKWS4/fYZADWtgXUeG2MxcEE5auKBR+A3HRQ5mxgLFKORmz23fkBQu0boj16
YrHqQ5Bi4r1+YLUc70syi0PZpV06Btv7YeKSuRF5Iw6NrQxoVwr6YL1SUbHi
chx+7KhsV9Tug2Ixa/mUYwSOUPrpMU9JyHOeGjR2J5B7wR7CSki4c+dmSe8J
AtMsYh0ZxSQkmY47a3oSmD/rPEjnkODtm5zC9Sbws6dQ2vYBCWrvumUmAwkM
7Tanb0gX7d8/J2mfTGB4tNNSG4OEmJlNXdMpBPYm3dJrPU9C6PfP866nEfi+
CxNa/EnweS9vy7tOoCxm1zWeJQHWlceF3CZQmtyyq5ZOwuKF1X9z8wncydaa
KztEwmwNp92hkMBz8nnNZc4kjEq75gg4BIqrHHhd5kRCZy7b6odiAnlbPtuX
HyChuMcxsvOZKJ8PhioQ+Wp+cQorI7DA+PmZaiuRb+C9LeoVonvHN1Rx94n4
ZYVc32oCVSL/Ip9biPiP375GqSEwO12bU28m4mdbe5TVivzKYx427CUhYH5K
z6OOQNPQzqZGY9F/9mesrNYTmEVT3dhsRMJ/ljuFpA==
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$20660#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1: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
GfY4lJ1U7b7PCsqS3ohV89ph/VjJVEsWK5A1Vn7E+d0WH998667DaQUx382o
P/Ta4rnXSiJyx6xgJmz1Yb6XLYb83YXbilbQViGTkdRjg6kFYpMS3azA8KZm
/b0r1jhFKtnp3oAVrLEOUfwXYoEvHvt2OXzECqRXFzienbLAtJxGZ3UmrMAb
cVPy/zLHZIqjh7feW4Gx2YxXlL859ntRN6r22woim0qleoPMsIn7LPokbA2n
84X9fXJMMLu18vFmCWv4ZsW3Vmlhgkf173KmylrD1KDJZ7tjJviiovf3k2AN
FaeD2dVrjTGmpy6PNbQGldqTh55OGGGBe8fZhGKswVb9Mu89WUP89mYa5Z9E
axh/UFoMlIY4P/Xn6lCaNfiNRZSeGzbA7EHt/QH51rCpauaf6W6A957XJ/XU
WoOJBn212P3LeOVD6JL9vDWU8ZyZDcH6uJF3oKMEbGDcTbduqFwHS/vei/ql
agP3lzbHJKJ0cOXTWCUNTRtgoThBu26ogwtcVDpWjW1A10l2Tw6NDo6ubWk/
42sDB37SPTR00saX1Krahu/YwMF76GFzsBbuy0uO5K+0gfbNvqRVKS2s/NUN
B1TbwJUbr7IHvmhi2XSRtkNtNhDJOrseZKGJuWaKWh0mbcBrRJ4zQvMiXvDM
atmms4XwmlTxT2oa2KLTN/zSAVvg+7hR/ptOA0+y6hJFHLbwoush061Bddzf
yNhyXsAWFEosZXL01XHV7rjmdMIWmHvF9ws5q+HQ6yFPhL1sYaZ1nZRXoYoP
tFk26o/ZQszugfMJSWcxWTBVSGHaFvCkxMsEm7P4e1J7Ft87WzhbmPXl88mz
eNyMz2dl2RYMZkNj2+eVcd7v96JxVHYw+VGFvxEr46PyDjefyNiBg8QLdjFa
JZyRn01XdNoO3JbixuvfA6ai7g2Kw3awXGfyLbMF8OKo0OXLF+zgS66h9zk/
wOXen/et2tjB3FE+vr5+jKXvu0UeTbcDWJx5QFlJ4GLW/K+0OXYglPmuqNOF
wKxhg6ar+XbQGEbNyixK4J8aEqea79mB+6lTZJNyRdz0aXXtcocdrNsW13o+
UsDKAr428Wt2MHg9+dSdydNY70bwuTUte7D4epc/6Yo8Jlnzx1y+bA+kV8mJ
HzXl8QOhwZ4mU3tQrzDp6zgoj+lqedWuOtmD0CjjrvWHcrjjea8GF9keYibk
XnB+kMUndti0VersYVRGfjTHRgabdbel3ntiD+HzP586ysrghATnEcZOewgI
nHtWQiODF9lbdF8P2QOVZPiKXaU0zj9hd9njkz3YMi9mvNuWwvTW1SY5hxxg
5MWExrcqSXxKyOzGXz4H2AllThaPl8QOX6lnbIQdIPBubXaPtSTuDDY2F5dz
gMGpvz4HWCVxcDqFVaeWA+glD176sCWBP3Zp2S9HOcD6pKaWeutx3CW45Amf
HMA5qrW4vk0Yv/JUb49dcQCscj54+KowXnx8d/+L7w7w5G1Dp/dFYUx3we6R
+S5HWNlT3n5uWgjreM5uhHA5QpPJD78D/wniNw0v/OsuOoLHDHFOyuIYXqOQ
6NnWdYRlVo8fMsePYUqNa+wqxo6wuMsvp+K3ABacUWt4ae8IB9/z+P7IEcDu
FJ2bqxH/4pe9Rcen+PEftdpQ0Uf//HsSKT/7HMUM6czPvRscgXxjZbXt/FF8
eNqLu7HFET6fODn+h/soVnYXbznf7wiKcy1zBX18OD6tdMdu3hFm64xSgwT4
MMdUTtQtNifQSefLdZ8+gmVcw2NZQ5xgzYpxTTvqEFZ8Jh6zGukEvvIzburn
DmFVobno/qtOQMh+Xu7eewgbzSMyKc0JPHgDoiCTC0eYUoQvlzlBRm6FlthD
Ttx/4YpP94QTyAaWdb37w4Ff3ZPxvjXrBPLV6Tfjeznw7J4PniHzTuCnTFVT
nMGB17pU3CVXnWCkSatOVJwDsynSON2kcYZ4KbjkbM+OrY7Hm/vJOQNDomra
68+s2CXhtNklBWdIFnP/LNvMin0/fTYRVXKGjALmN9+SWXFMiYbR24v/7GZm
nCvHiiu4GfQu2jkD3axFhEssC/7JkKImkOEMF9rpFX0UmXHS10yZV2vO8HH0
9YOMQSasX95KJfHLGb5ldUfrkpkwl+Onsdi/ztDNquTedZIJl75VCFKgc4H/
Vkw/1JYw4tbR981F/C6w3i+mdi9mH15tlFT1NnCBK98XOUOd6XF9gAnHgJkL
BMsNv84XpsdhMtGfBGxdQMb3FLvJJzpMe38iYdLTBb4/PWya60yHeQsjXuB4
F3AYqxVn8N2LdWKeGzE2uwBvzQnd7MI9+ODZnyJOnS5Q073+5L7THjz335E/
HX0u0HCD31tdag92CfbN9x9zgRceSTO03TSY7Mb1fmbFBdYaqU/ErFLjGl0n
1wo+Vwid+1MYaE6F2Y5QRajFusL3n5INpUm78Mu1yL9ySa5Q/qp3fs5hF07t
/BPGn+EKAtlLLW6wCzM4fAvdKXCFjDb92JjvFJjq/vvg2npXMJRv5i2wosAb
Zzr8eRddYe6ikx4pZQdVMRA/9i27gv8Dg5k/F3aQx9xjvz/rriDVP5nCsHcH
fY6q8h3/6wqWvaf1PkX/RW/7bnlfY3MDiZPt6/ZXttGQQYT7poobHJN2b3fM
+42uCf9eXtBwA8OeI1dvW/5GGr/93Ua13YBzNZDf/Nhv9DTf3fWBmRscKmXy
u1y9hZo/mDnb+bmBzz6mW2IvN1G5j4L9cLEbiPHGd0UK/0KxyZtmZZTuIEl7
x2xA+DuibPv6gHWvOxSJUsombX5DYavvKaKY3KG/Vzais+8b8tYeLDHmdocG
5kzuKy7fkClz0TKdvDvMKo9/QTUb6ET2hTB3Z3doNJGAZqN1VN4DQ689/9W7
8wOdPrGOBH7J8aoGuMPV02uZnDTriNOIt/vwFXfYIAbTKOrW0G6uH/TDN92h
ajPdWItjDU3kF9yQHnYHfx/eVbWpr0h3KONrwbg7VI/Q206mf0XPd+Iw/aw7
GJ55/pz54lfUYek7P//ZHWpf8/OR25dRBZ+aWNZuD3jJ37F9+NESiryz3vRL
3gPe6Eru++/hZyR0X2WqOd8DfCm7cCjXIoqxWlGgL/GA1zcjSImLC+gDS06+
cbkHdGeo9rPVLKDCkCWrn/UeYFRTSJGpuYC41NI/nhj2AJilh4NxHxDj/Jvv
RZSeYKTjlqXLPI/csuMN1mk94bmLeCZ54T0aUJd5jJk8wSKiae5Q43sUVxUT
OnPIE87EjYXGWL9HlBHilOxynvCNwkyfr+Ed+nkwlCne0RPKd129Wej3Fuk/
F/CecPcEl//eSv7UfItqIodeHvPzhO7IzFulQm+R1yJfdifJE0zHebxEHr9B
X2r6uLdzPWFuf/8yT/ocmtNiF/V87gnmeT0dWfYzyLbTqKj8oBd8DTjq60ma
RMmlBuU3DnlBe61ac53GJGpK0K++dtgLZlyvjnqzTaL9etqdHgJeUHr5pP35
ygnUPH/+vbSkFwT/pbW8+GYcsVKfPPrkvBfQM93dWjQeQ/izrGilhhckGvV2
sYmNIZdBael8TS9oBCH5iu1XqD1LQjlSzwuuqkik0dx+hdwFBW3OWnrBhAzv
b4eVUdRznq1oIMALDlgKkVhuvETrYizlzcFeEKdVanfe5yXi3n+g+n6YF9jG
SLS+Un+JfCYZOlPIXnDFzqVjc2sEHXameq+X7AXXJ8/91bYYQYEJ3/hm7niB
YsMjpVvyw0h4cOT28isvWL9WNz2u9BxVWzGw8Ez+i2eiyXq4M4AUvqtGa057
QXhewoJQ8wDSOtTs8OCdF9xSKbJZPzWA/JxLxbxWvP7dR1fF2073ozbq0Lpv
e7zhM8lKkMGwD6nl1gkK0HtDu8kpKlmePvTy+Np1fUZvEE+sM16Y70Uf9OxD
6li94bTHvN4bn15EV3QJB/J5Q2i2SOy+6z3IAAk8+33GG16qOF1T+dWN3o5Y
nBFD3mB9okXK+2k3crbPrTBV8gZXdA5YM7tR2DXG5Obz3nBP+6tco3Q3Kpra
1I3Q94YfQVcsrfy70NeAwZldHt5wMjLo2RmmThT9MGCN9rY3HOzU2yjnbkPx
mlOndpd4Qwt/+K78iVaUvERE/S31Btvt4svCGa0oV4iaeaPSG7RouSOpGVrR
g1sZMtOPvcF8eMS4jqoFTaZUBdwf9gYhBbmbw/ufoFlx1ra7o94QJ1Dd3/Kq
Cb0fCNxTNO4No19FL0nmNqGve3BO9ow3rF543VzI34QoSYONkZ/+8TnJ7Z6C
GtFxry/bOhQ+0FHNc+lBYgOSYtQ6d3G3D6RlH891NWxA8pWPklRpfEBi6/27
m/wNSOlT0GEFBh94L/DQ1bClHhlY7QGBgz7gmJbStf9nHSJpC1z5ecIHbDm6
y1tDa9GYpMXeG5Y+EFUUWdY18ghd3H/TOMbGB1qZ1HK3yx+h7tXX97ztfYDX
tm85PvoRqn5wWUPN9R+evh9zBaceodTjmok/AnzAmuaVQkFJFdIQVtynnewD
MhbDWrXsD1HHnhBzhTQf4DB4v3vf6AN06mPDfcFMHxjfgzY2Ux4goVIZrb+5
//IdacKu0j9AVAJiKeV3fMDqSMS81t77qPUI1wHqFh8QE8gtyDlcgeT+M7Re
a/OBUIagmMz5clQ5l/VoutMHRqxbpvffK0c38g/oVvf5gHLmN58YuXIUdGhv
huUrH3jWomR4Xv8ekubYZG1a8oFdV0qyT5bdRaWM4wc9uXwha+y/I7uKS1BY
vvbLXB5f6GaXSdT0KUE6xwcSu3l9gT5EZIFBuQRtq7fvcAr5gmPnqujb98VI
72r5h24ZX+i8nbL6RKQYUWxHVHFp+sKtQZ4XjgO30XjClvM5bV+QVkzVcb59
G1Vw+vF76fmC0lr8ymDgbWRw0jn7qbEvPMYNL5uP3Ub3ffTCvBx8oU2AQ/5g
TCEy+Syk1hPpC0IvtFL3VBUgyaCiXetkX/jy6PjADccCRL2H58mhGF84YTS8
MnWkAFUJMEt4X/tX73VfqV56Ptpjtc3CnesL++LdSnZH3kS148NvvKt9IZvp
1hemgDzE2B0cyLPgCyudz6oOjWQjK3MeWuZPvjDgmft5oiAbPfrZnkOz9I/f
9ONZSvdspC9C27S65gs6Vlj0Nl02ykvO3u7Y9gU/FhuRBY0sdMy4JsqB1Q+u
JfsytM9loIANA2ZTDj/w+/bz4O/qDNSX+LvoEpcf0MuNZ2TGZiCXVqXuU7x+
QJJui/4olYGq+Idp6I/7wSaNSfxKQjpSXFlOfHjWD1p1u64Pa6ah5NhU7hJV
PxAfin39SCgNveGVvZ+j7gcOHSS2j7vSEFkvdCjqkh+IHCnL1WhIRX2P9x7Q
N/UDLk2j3++OpSL9K4LZmz5+4Mv3useLPxm5HrQqVCryA8Wjm+tUOAFxWUOe
/x0/kBKyN7GiSED993gz75X5QUgah6pOZzwSVXgXe+ChH5h9PMOxcj4efTG3
8Xz3xA+GJjKdvhrHIadiOxQ15gfWw09jp6/HoIPLKqfqJv1gpSdpZcU6BvXJ
HpP+PO0HbjGOe68cj0FCPQvHdN77gee0T5pw11W0+MlhH9+qH9yLa6VS+xmN
7CWcZ9pp/eGNjKz2lM8VxBqoPv6d3h+EL0cweqpcQd1tIsPCTP5Qv5vzug/7
FSSg86Urlc0fSnIpPnU8IaMPvq4VVkf94Xtcsbw9PRnZNLqHUCj6w0Otjdb5
FhKyVPE5CJ7+MM48FdL2MgyRho5z2fv4A52qlrZsShgqMvp4KMHfH/Qm3d3P
XwxDi25mR16F+gOjrne9cl8o8shSFXSK84fUQtxj3xuCwha5ZFNv+8O8P3+F
6LsgVOA1JldX4g9ihlL6s6VBqP13ysmpu/4wZLl486B7EKJiolYQeOAPxbtT
mQT+BKLEk6tKj5v84cpo7HE3nkCUF9d16e2oP6gZyRx6HOyPmpkjdKgn/CFO
6t0Hu/P+aO7mKT3RKX+wvdB6M5bNH/E9um/g99YfDqgdjROt8UNlr6+b0371
h3NLtY/6vvmiBlE3V0maANCb+uUeFe+DXj1njSWdCoAzq3tU5Sm8kI/1pqWn
QgD4Kj2s9WvyREw/p09ZoADIYcuZYPP3RBpHir8oqARADbPSGM+yB+rwltL6
dSkAxmecBnnfuaMH7FpsHo4BQDrw6u7Mgiu6WCG1YuYSAIllX9tny1zRZ8zW
e8H9n39YS97OzRUJOM8EifgGQJ8BW/n2dxd044nLzIeIABAPkndXZHBBcVax
xabZAWBVTk1BreuEBH+4hGnkBsC7iLGwSW4n1BWvdfn0zQDgvbSkwPvJEe1U
s+3hKAqA3X36CbQkR+RPXeLy8n4AiHy4cZSvzgHZlLdLqT8NgD81J78XyNgj
4vtWm/z3ADh1JmfPjVAbdPoUF6X9rwCgyk099/ySDZILO6OS8TsAnqvFGdkL
2CBxqtC+VYpASP1wWWhgyBrxsG4Pl+0LBL7tX/QXhK3RX5mdd1xCgSCinRRe
OGWJtgIPC6iLBgLvBmcyb4ol+vEEOQSKB0K6tGGanool+no28suoTCBUhiqP
DlRZoFk9im/XIBDSJi6PT6SZoxZfSqr/jAPhoQtb/46PKWpsOKoqbh4Iso/1
ElelTFHdH+U4U6tAePuERApZN0H3r1xheOwQCA5vWfWNfUxQfgYVm7dvIEg0
fgxmCTVG4TU0gvPXAkEQ2SheuGuIiG90ar1tgXDmesjiD2t9VKukb93WGQhT
tue8Xsvqo+Op+SENT//hX1Qd4aXVR9zikvfvDgRCKfuv0omHemjb4TJz3EQg
+GaYfB3crYeapm7NqK0GwoNMPv1jLTpIWuTzD9gIhMOqPoPvs3RQeaA00+kf
gbCIG0V/eeigPNanSiJ/AmGSMzeN76gOCtb6Urp3TxDo8//ydLqmjU51ynr3
Hw6CjzG6xsRbLVS1PyKhky8Iah6PZXy8oYWELXuLmwSCYF51kF7ESAtxbBuP
l4sGQa06e5jbS030Uy5SIVE+CO7GFAWMDF5EdfeeUV/UCoJjC/btf+c0kHSa
Rd5geBCcPBj4o9HmPOLmIz+pJwWBZZ38/J8T5xHNozszt64EAd3o1peKv6po
anj5sE98EHBF/0rWzVNFUftDi9mzgqCdSiGmcPIcGk65XmlZGQSl1CUxQU4q
qOnIk0G1h0GwQ/PNUVJRBZU8nFuRqg76t6/IFmr7VVDgi2NSVI+D4G+Z/IWs
xrPoMFNtXVlXENAGbHZd238WuScPt65PBUGDCzGq8kIJGRz+/mZqNgh61+IP
FJYpIXjAsav7bRBIPlEWuURWQqxDFmezF4NASLCbsVReCTXv+9p7ZiMIelhk
j/MXA6JL2jtyZW8w1MjE98WwYVSWqDzPdioYdt18yWHIq4DW+ovckUIwhL2g
GYx4ewadotu96YCCwUjIqkfx9hn0LK6L4bFKMLQfZKcMEDiDvlxVkTfRCYa5
DOqmBqnTSIykGl/gEgw63Ul6eg4nkV9bKUuvezDcTSW5wImTqHmHpmDVKxgU
Osd4H27Ko4vhvdUQGAzq63zlDEnyyC1Ebeb9lWB4TiDS3Sdy6IGfxgmh/GDI
MdXMtzwhi37WlDdeKgwGiVX3/Nn/ZBD6RqcSVBwMJ4pkPAaGZdAL7wGjZ/eC
wcXJzXHDVwateVwku9YHg7gjTaxOmzSSdtYae/giGH7sfEwLcZZCdea6oaco
Q0CEPor9FJ0ECrk7PSNKHQK211OCFPrEEVq3Qzy0IXDhYMrgixhx1BMduIuS
MQRuksnGpdTiaLziZuwAZwg4sY8Pf9p7HP3cWsywkAqBN0TPrSYxUdR01uuH
tmwInAim6iA2RFBE0pbB2ZMh0OPyVgQ3iiAaPgYuYSIEWu8pRz5WE0HsalKF
62ohUPg5JcDRXRjJZ4dWRlv9w9fwgXH4uSD6/YaKMdA2BGQdr9c05QmiVpFk
T2eHEPB6IGjG4iyIVFsKpbXcQmB3j+p3uj2CyODD08ccQSHQPlWot3X+GAqQ
3v+0PCUEshRTf+2d5UcNQyWzw60hYEDk13Fo8aGpXpcyys4QGFw5qrgowIe2
2yV9ZZ+GAI2c5gj7Ni+CmmbanIEQ+LvOFJ1XwYv6r7+SsZwMgYRCRXoWJl40
Z0WV8HU9BBr4aTcYh3gQhUm//pEfITBRlyLPHcuD+PVSj+hshgDd8I75S+BB
Tue462p3QkB5WeGATD03WheRfRtKHwq1GdK/88oOIapvtvJ0x0IhvOWHyONy
TiS4LLJLUTgUaAoZuG65cyL1hdUBd7FQOFzpHMIhxYmSJ0KtR6RCQbTfTLCh
8SDiaM64loNC4dZmCnvSCAcSvdr1XtAoFNoV9874cbEjbQ7+lLOJocDq5nX9
NS0LWuFilsLJoeCVprg7do4ZXTu8a/RMWihcmVSJT69lRs+OvWGXvh4KSaHL
he3WzEhZ9kYBb3Eo/N24n2TTfgDJ6LA8+NsUChbpUVlMyfvRS31K7a2WUOA1
LPEA5/3Iy2h9/Xv7P7yOXUe6VPajSssXcss9oSDIc94xYIsJCXgktky9DIV9
QoNnnr5lROyJuwcbvoSCpd7wvZUBBlSbvOFR8zUUjKdvhXxMZEC66e/2P1wL
Bbx1rczjIgNKyW3TL/0ZCpp/DY7zv6BHtGWhM5mUYWDE4PaWcpoO/e7+tuTN
FQY7M6Ys2fR70ezOPN1xjTBY8enUN+qjRitn79ce1AyD7PnC9OkcarQTF2BB
rR0GT2nWDXqcqdFhlr3Vc5fDgLzIuDLEQI0shCSM06zDwHEv65FMQyr09lLQ
3Z9BYZB0LveT9H+UaC1TSWc+NAzqWbtf941RIoopuj8vIsJg9DAda2MlJeKz
y9e6Fx0GhhrndO+YUiKboM4fpqlhUOXBMXG9ZRf6UMig0nE3DNZuVJorpVGg
7wtjX++Xh4Gej70EvzsFohK7dT3v/j9/gGGznjoFOlYnteRb869+cotNASUF
cnhmkC7YFgb5brKzyes7xKf1wreJ42HwcRCu1yxsE0vKcuEG1OFQ+J1Ks1Bm
izA5qZBKpg0H81cfbuzb3CT6xJSKH9CHAyunUMuelk2ilFXzGQ1zOKwmWajm
q20SVot2bA2Hw4G791e/iMMv4lV85n2OU+FAu5JOX9f4g1COyGs/qxAOx0fj
/xrH/CAe+RSOeqJwCOeRuRyk94NINq3c6lUJh8dvHJq5V78T6uLd54J0wsGd
903lgth3onX42+ykSzjkPL0dm9C0QRx/urVG5REO6QSxrpK8Qdxo/G+3lHc4
GMr17HKy2SCCiuhF4wPDge20jeIH+g1C2o8/4HR0OByleX49z3aduMuhx5iX
/y+fLY5H+tgakWpRjUyHw0E1gUZAcHyJCDF/J6wzGg4pNSfTG3KWCHuz/Szn
x8NhOIMjY9h0iThj4vFReiYcupIeFWXOfyHmL4um0n0Kh6p4/ncqW58Jec2i
d43//dNnWe6spuIngvfiyMBDyggouTzKOULziaC/QFF/hzoC9NrdtvpHPhJv
1SwS0ugjgFNutovb+SORoMIl48wRAS8l7DK58xeJWYX06IMnImC04GltLecC
0Xemw4NROgKCLzr18i99IKpPrxlRyUWA7skjBVvNH4iYk1ria2ciYO9WOuO4
9QdCUoZuvFc1AnoUC+6erponokXJQoEWEWC+k6ixavGeEOX06R9LioCNskQX
nr9vCN/eWR76tAiwsTZmLKl6QzT7q3tDZgQsbH+Ifmf3htB8yXuwIi8Cpkuo
uUJezBFeiS/sSXcjYLf/NbZvlbNE/d/ju8Q6IqD8mdWTvNhp4r+KHH2r7giQ
WO/V7z83TaiZUJVl9UaAwcKSynWqaeJ1/bQWxVAEwLrJxd3RU8S2Z8LNsakI
qIq68PBP/GtC+f3Hk6TvEYAea2XLP5ogElP1Eut+RcB5EnVbetAE8Qq1zX35
HQEXst/8u8InCPsb2Vcv74qEdGuxgqGRcSJO/9yoKGMkNG5yKN/+PUYM9RR5
jAlFwpOu0slO21eEaYX5HVHTSMjaUzUnfG2EYL9RTKFjEQm8pIjwTZsRYjjh
s2mgdSQsevzqFz4zQqi6+DN3O0bC7w+nP939PExIiiRFmvtFgp5h1fQezWGC
5m6zcWpSJETzxroeUx8iOrIp6+pTIyGV60wGI+UQERajtn82IxLe/B3MKXgy
SKzbv+oRyYsEh0bfo/clB4kZgWWZrtJIOF3z95TJ0edEddEhxp9tkaCOOVmr
jvYT7unWztxdkXAoypDXcOEZIUy+263cEwmeDNnHk8ueEfnWMqEpzyOBiUeA
4q7kMyKO98In4deR0EC1YmZ5vo+wKAjpNN2IhCPTmbtGk3oI6kG3J1bMJNDd
VZSWF9BF8GqUvJpkIcHdZ+cFty50EYq901+12UgwcbuYq46vi/Dp0OBVOkgC
rkmxDaWhTuJtnfBVvsMkEPF1cc0V6ySaCj5ovRchwYz7f7FZP9uJsUPcTiZi
JMhdEfnmPtJOrOXoRb08ToK9z7Pbrle2E0IZnTWdJ0hQptlRO2PbTmTGFh4s
liPByYDMd1KVbYSHl9l7WyUSsP/lYExKayHiv2b8mVYmQXgllecz7RaixGWA
VV+FBEVZZuUZ+1uIabsz51XOk2CeRXjyeVozoWZ8sFJAkwTTg81NVXlPCH7l
V/4LRiRIOZNoovi0kZhkubjX0YsEWTV8NcP+9UTRJ76JHW8S8PIm8URAPeHe
8qsk25cEmiw1R8rp6wlKx2LoCSDBifDnCsHFdcTxpt+Bx8JJkL4qWjQ6WUuQ
rO4tzseTQB3YXUnGNYSGXGRtaCIJWhemTVLFagg2ustkliQSJGhzmOzbqSbK
aygOn039x/9FWbhGSTXxisboclE2CQRPReXX/XhECN2n6bYqJsGhQ/o/gyqq
iI2ombTNEhJc9xTOWbhSRTQbVFumlpJA636PRJVZFaFNYfGn7d4//d1k202Z
qogQvTrpI1UksDbpPfx5/QExtGV7e7aZBMGFt69+elxJBKh2RJiM/8vvCojN
aC0jIgrFTk1MkOCmt/ZmfWwZEfs7a13vNQneTz+h19cpI3IeuNhpzpCgRnxh
4efCXaKRnVUD3pMgVC04pJP1LrG96MAmuEKCdVnMmxZ7h6BSGhkqWiVBc4aP
2pjhHWLfDYW4I+skYOC4fu6K8B3i8KX9fw5+/6ffSxF2zoESAjc0vqX/TYLU
0SsLzGwlBDmWoXKdOgo0EmP1wp4UEQnvAuw99kT9+z/p835PKyIyFN4dXqKN
gp7c/ZR9TkVEyWpd2gf6qH/zCxsjcRQRTw0tAycORIHf7rPjvMG3CVrhauUW
nij42PyxzOtiIZHSZ/g6Ti4KKKxpfR+a3SS0zz5k35GPAhbbwjraIzcJ5lYa
fd9TUTAjkP7n47sbRGZN3ZC5QhQMUXfQyDrfIPIKWLqllaLgSb3h5PvwPKLU
78WDmYtRYPyrW/xeaw7htCq4rKMVBS16XWZv4nIIEZcIkd5LUXD7ZGpggl4O
UWkpXvJINwo+zR0JUfhynXikkZgbYxQFNlvV7l+5rxPNvOejJe2ioCtm9HFL
dhYRcaOg4459FOxPpOYadswiMPvPHS7HKPjwOS5c7XQW0Ul/J5jaJQo4Ca9x
x9lMovcnpeeUZxQc7uimUhfNJF4+bzWODo0CmdkX6zNj6cSnIPkTk+n/1y/n
6nuPVMLownE+98x/fLwkqgTUUolnPEdZKLP/4TuuKdnJl0qUd+77JZYbBQX5
9ys4KlMIN4aF1shbUcBz6pf61avJxPqtDC2hyihwWj7MddDoGmHjEw/N9//N
Y3TuwTm2a8RLlUhpnYf/8JFdn+8fTSRqP7uwh1ZHwcuzPRPB2olEgIzy3NDj
KJjuUnHw1E0gfvesuQc8/dcvI/JDrXcc4ZK7aEnfGwUSh/WlWU/FEdOuMzqF
fVFAOf2f6Z+dWKJ5f59c/0AUcDeWqpglxxKRJrf+8ryMAp8TVodUa2IIqhXN
pKdzUSDgXvywivUqsY+topJ1MwrkFZjaBSTIRLObXELyVhTEj+1j4achEy7d
bY60f6Jgx9bCM3guiujxfXV0+28U+FfUIbHUKIL08m/O/G4yvKf+7pn8i0R8
T9G+Ws1EhvJGbWxXEUkUfZyyOX6ADPStnTE19pGEDraHUmYywLc8kZu8kcSD
leA/uWxkWA68gmRzIggnzWLvqENkOGzi4m2aHE7M0P001xYiw9rFrET3rFAi
wYak0C9MhjfejFebjEKJ0010nCqiZAgfXtmfxB1KZDsfeXVSnAzOTNUarXdC
CO0+NY0jMmR41s/fKtUaTHRfvSG/gsiguWvOxokmiKikUGK6ZkCGAqHt5aVl
P6JY88uclBEZUi/oWic2+hF5eRkPJozJMK9p+rssxo+Ik13U5Dcnw9Ktkh7j
o36ErVPitSbbf/1dKm97WfoSXMNjez97kWFM7HeC76o3cYAn8nWyDxkCkx47
u3R5E7Quwvdk/cigWNDiMHjdm/i5O1SNFEgG7x96OaNK3sTISd5YjggyZA2t
eXbneRFxt1yoVBPJMLFLUrex1YOIXGZ5tXSNDP7PInsVfT2IgNMtxWnJZDBa
V84IFvYg7EaZzs6mkcFcX4v9YJY7gffURfnlkEFZooHtcYAb8dPjv52iO2T4
fIeFjcHEhfj6pGxI7S4ZjvWiBSNOF+IDrW7BShkZXu7sT1V57UyMFJUQZyrJ
4C6rZb1h4kxUjquHjVSTocL7sEyEvRNRzP/tQmAtGa7c6t25LuJE5HndPMRT
TwaVqJJplRVHIo5utcmpkQz9Rw8K6wY7EpGGOQmMT/7pIzD34iF2JAJKlExq
m8kg7ntsK4/GkXBb/yJi0kqGkMJINeYhB8IWZW7910aGTtVRe9ZsB+J/OXns
IQ==
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$20721#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxNz30w03EcB/DdQrhwhSydyuk89YBEqwvzkJtC3ZSHrW3O0IpsLc3DbOh0
UzMP5TrnqczUyqo7hxqyQ0+HOasNdccfUckonaf5I6q7fL6/z93nPve6e//x
/jgncSgpeBwOF/V3/93f+FTnwSqVGvd/ti8LmrfcaAvacL/AgaFy14I9j4d9
fk+bAlNrqXLm0hKYN5hi6tprRtqwKNngd9PdAVzkfXCog+YGXrGxkhp5RJQX
3N33wisEjI/xeL3JnAwO/OY45syMBperynet7KWAJ+h90jcJ58AHMo+M1uXH
g0+btUdEcmhgzfKkkVXPAJf5lLIfDSSCVXsGeuSkJPBWNVN1Vs8Cx9TknJiP
TgH3uRo4pOlUsG+aUGyXywZL5yp9dfMXwfa7TURkcRpYXGo8r8BfBrs9CfvU
VZcBZvXGyx4TuGB3jbZhVodc9Iw/b95wBaz3ZljUMHngB9YjBI7jVbD1q5ws
py/IaYTE+8GyTDAzjEcgca6BdYN24gIiHxywuKr2X8R4wZL8Vp0FPlTBqNYI
s8EKScikPTEH3EanCIj4XPDzIfn4cDfyGQeXslCJADy+Nmm5/2Qe2BDiJ4w1
FYLLGS2BtGFkzx28fr1UBKY105s8aflgU016Z+K2AvCYbaTFBS4yP7xHRB1B
LnsX97HYrxA8ne3vNXYb2cq+WWlnRFbigm1KYq+DG6NmJnzikaur7zwdTUAu
Pvw1yoWOzGJLSjpYyI7DeovvXEz+3iWTcAly/qytzlCCzD/6srGiFDn5g03o
eAVy0Oa2wswq5OWM9TVZE/Jcp2KI/BB5ypxS/0OBrJXJA44pkZUjEXnaFsy/
Lgunslox/3Jrdzq1Y/pb/uxgqzD946puWXdi+suDqa1dyOm/Zjyo3ciswMrV
dTXyH29pHgQ=
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$20765#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHk01AsUxx3bU89aI0sv5dAgSiXLe6V7rVkadbQo0xiHhKSxNVPGWH6v
kp1yXp4alaXm4dU7ljKIl60NB6EfIjGEYUhCOenN++Oe77nn+z3nfr5X34/l
GSArIyNDk87/+l32jH5rjrA+y9HfrWxAAhsWuSXKVyrB6c3nU6F9EnjF1fIR
GneCcsO+XOO3Eti2z3Gkiy4CPXNx9p0uCXjf9i5kfvkCFky/5IyXEohoDVCg
NijiwM2VCM4TCcSeFlsmGWvh5qRPhoE3JHB55472aroRmlFDGc3uElhSU0lb
jrDBggFny/KyGYjl/mFaZW6PVW47mPHUGZA9YtIsp+SCjDySmnlnGvZ/1CX1
mR54cSZw5ZPaNGQKM/WWDD2RQqo3R6aKYYjRmNZy8hi2BM3dKpYRw/Yo67f8
uBO4sl5osiV6Cg4pPnY9yKLjbAhd5/vqJLQtji775/kgRZt29zt3EjJ2pQf9
9doXJTc5PEX5SRBuef2sEP2wd/H3fzMyJ0Cjnik82uOP6QXfBvM1J+DIrUtO
cx4BeMDzUZ1u0UdopIpZOHEGbTD8aPj2j2ARwkukRAehnEBi7VQ9Dmkz2Rbd
c8Ho51arNnx4HDQ3y8e6JIagylZacNXwGCSmL58SyIZistxBjmL0GBj97dhf
yz+PuV3Gzu+Vx8C/4UR+sXYYci1j8joKRGDc1nlvujsMFy5wzj9wEMHlR+w5
pXvh6Goua80cHIWenT5rbjEjkGFPMy+LG4X7qr3aLN1IVPymvnBt6yioNl3i
bBqLRL1kdmRm8wiEaPvetcuPQtH8qmd56AgwHSO0kXUBRUM6eq7qI9DdSkmM
t2HjL1/mzXwffwDbha/1Vgts9NpL9dQ6Ld0/r3V5Xs/BZL78oRTlD7A7yye3
jXcRA8aqxpm1wyBIsR/VtLmETQpZhVasYahkeHJtZKNRwyObr7ppGJ60Fw52
1EWjxSS7r7zgPRzWMshwSOFiUaswuE7uPQyujq41c4tBda+dzL3hQyC2t+Qd
V+ChRU5SmrVoEDJ9yvbTO3i4dDbb2dBjELbpRLzqSYtF3iMDRk3TO6CXMIq2
0eMwn80PLt79DhTaztX4rovHP7dvSKLcHwBy/cE1gWHxmKrP1QnaOgBs52ex
3r3xeLI+nJJ4ux8yXnj1XbNMwOfjpkZmm/th4qKVOXk9AZstzHyu3O8DFc2S
UspyApa8etJOofZBqYydWupxAkd+7mfG/UNCAW1qaNcJAhtCnIHzkITc3BsP
354kkL8n3pVVSsK1PeM0A4bUn6INMQUk+AelpFb7E2hKn1VyuEuCbkfPmskw
AkVdVkyNTGn+zll55xQCnWLcl9pYJMRNr+8WpxIouHrT5HUoCexfnxZkpRNY
3IVXX4SQcPqNmsNgFoFiW35dYyAJ8FNlQlQOgas9G01rmSQsnv+xml9EoH2+
4VzFIRJmagTtLg8ITFEpaKmgkSBS8syTCAg00jzwvMKdhM78QtvfSglU1p13
rjxAQmmva0xnGYF2sxFQBdK+Bp/dORXSe+ZPzwhtpX3Dbm/c9JjA8mMaVdV7
pfxrZ6uDhAQGRb8kn1pL+b1yklVrCJxPpwrqLaX8hXbeFbUEvimPu/fMgoRz
n6ZMvOsIvB7V2dS4S/qf/dlff9QTuHJKe12LOQn/ATb4VDM=
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$20809#1"]& ]}, {}, {}}, {{}, {{}, 
          {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQP6d8IvbxD/YA/hfbBf9X2xkPHE93D+p3PtL7fK
IeSf35u9MJEVwbeIW6zhyofg+/Sof1Q7j9B/t7D8X9IKGF/FwTGbe1Hzj3dw
vs4hOcHKNwj+Ru21exvPwfiWDnd73+14mYzgH+eUfajVgOAznjj95MWat1B+
pIPpiyj9dVtfwfknpZbPM9ZD8B1a1ysIGcP4mQ6RJjdrU0qfw/kV89Zu7hB4
Buc/cLqofSYGwWe2VerV0EGo/57brSG+ASH/40d48HZhGL/S4enTg4z36x7A
+T8U35zJWnQPzn/SJ7SbyQ/Bb6j/7b80AqH+8spW3cYrCP5xR9+Tx/gQ/Gkn
f6+ZdfwhnG/u9owpygrKP9DkcHp2AIdPyHU4X+HI0bVBH27C+T38lyJqOq/B
+SsffKtz1kTI985J9mouvQrnX9yxnMtX7Bac77R4voefEEK9lvKvPR+v3YDz
/3d6WHyNRaif6Nlh8iAGYZ/W/+S/T+8j+JVXPm+qW3DTHgDrddsU
            "]]}, {}}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox["\"Signal\"", TraditionalForm], None}, {
          FormBox[
          "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
           TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->FrontEndValueCache[{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
          Automatic, {{0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.4, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.8, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {1., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.3, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.35, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.45, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.5, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.55, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.65, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.7, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.75, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.85, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.9, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.95, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {400., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {600., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {250., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {300., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {350., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {450., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {500., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {550., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {650., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {700., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {750., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {800., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 599.9999877530612}, {0, 1.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {106.66666666666667, -64.89356881873896},
       ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}], InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1:eJwVyms01AkYgHGrRFaGkOmCrC6IhJTa8LrUkUu1VGQy1CBRxqVGjGH801IM
Qx2JCI1YlMMpNZQ3rM0WIneLlHEfMyr3dsfufnjO78ujfZ7u4istJSXl+l//
+4+0n3ZTBh9TJI3b93/ca7VhnlmicOOZ1ei5RtocYYxvmepUvm6blZIuuYcz
6Ij6h+w+f6AIrLJifDa4hHujx30PntfcnNV3taZyvZwQDG3yldlRtwZmAz8O
OSzFYrTPlNlNXXXIIAX0b6lJxbg9u1uqKDuBrV3DMJzKRZshz8Lh2p0g5x70
i7VhHq6kcNgKurqgRBi5bKHnYaRYaEKd1YXbtl18va95GPKk5O4PHH3QuKhy
p2wuH6kGeufsawyhYmvv6/dfebhFdf1ygJIJ1Lw4eSa0sQgXSOs4i6HmcIrW
QJ+cL8NoZvquF0Y24Gir4rdKoRKlXfUaVsnZQ2lavrA1vBotxzb1aHsdg94O
7+JG9mvk8rmaC9tcYIOgjecvqcNBz3rOH2dOwfBIFikuvwENr+zvzo5xB0t3
lnyJcSMeX1N51IlOAeXqyQBf7ltsnh9epOVQwSuufoCr1Ywpxsn+v73zBvef
jMoqY98jf+u7Wh6cB8u5TP6vU62ojF78k500iFCoTHIx+oCuWRGHZ475QmDG
Bc3jnu1Yv2OKDuN+sK/YTovL60DTQFa8aqQ/3E0gyTWOdCJn+o5px8xF4C0/
iHNV7kY1rdXR9vGBsOx4OMvkdA/GJy+eLZK+DKwhNUbAjV7c+diu72V2EBRW
+houNvchrc49v5gcDMI9fsU3lfpRt7ktT9gRDIX3BeoMiwGMK2PMyOWFwFWS
xkn+9UHs3ENdm+UVCtt8ddvdnn7ER4pdZPqmMChYzg5i0YdQ8feIcI2RMJAo
C4MjlT9hINk71zr/Cni7pWwvKPqEXnahZKBfhXRunwfT6TN2NKnGs80Z0GqQ
POg6/RktZpdw3ywDVrL71T2uD6PFN3n7NxgOZLRq/3GHAE1SqZnNrGvQa1Bl
N/VKgEWJNsNq5hGguPGNTLPLCD7zdGGaS0dC94L+UY/ZEXzewhtorYkEiOq1
UUscxRPqOim2iUwIs5yoYe4ewwHJsLyBQxRk1Dt+Ib0ZwykbM9ZpGRaY8D3D
Hp0dRy61wpLSyoIki87wcck46m8MfdvJiYaWnnwT9/QJpJR4FuhTYsDzcRc9
7OAkyjRfqvZez4aG8uq/uX9NYo+K09oLwWyghixY9YdMIeNIbbRHFxv+LL8n
064qxJRGt94Es1h42ZAWu1AqxPFr+4x60mLhk62Fs6bNNK5TKylVXYyFjuPH
smaGp7FUypqUdJqAEwcqH8xEivCh8+SgsTsBWazbg2ksEWZm3n7SfYaAsdpg
DTO2CBP2jjrreBIQ47ArK+KGCGn+iUlVNAJKKLnp0lwRbmrtXDsRTIB09C2O
asF//4OA1UcSCcipozLN34swRqjSMZVEwPiaQ1V9bSJkHHj1MDWZAFPHjUtR
HSL0aSfZDqQS0NDezqjtFaGV7LPYKxkETAjsQx0EIpwPWpHkFxCwW9b04tkl
EU5XF7XYFxLAcFQqknwXoUDOJUdURACmTI/mSkTYls+zOFhKgDO5yGdklRhL
u45GtVUQcElPwztIUYwPdb45hj8l4Pnl5RwlZTFmBt/frFFJgKS8e6BCRYwJ
8uIqfz4BnINplAWyGGPcMm4pVhPQGU3PvLdZjAyetcfTlwRo1Tv1/qwpxktf
JvU8agjwldUnD24VI83yztIKElDqKOvG1hHjv7CTr+w=
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$20916#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], 
            LineBox[{{-0.0999877530612245, 0.004678474033262491}, {
             0.08406142412783199, -0.003933273605421563}, {
             0.26811060131688846`, -0.012545021244105472`}, {
             0.6362089556950015, -0.029768516521473474`}, {
             1.3724056644512275`, -0.06421550707620922}, {
             2.8447990819636795`, -0.13310948818568105`}, {
             5.7895859169885835`, -0.27089745040462443`}, {
             11.679159587038392`, -0.5464733748425114}, {
             24.44910508698373, -1.1439851360187847`}, {
             28.024612279151086`, -1.3112848006492637`}}]},
           
           Annotation[#, 
            "Charting`Private`Tag$20960#1"]& ]}, {}, {}}, {{}, {}, {}}, {{{}, \
{}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVynk41AkYwHGrCFuOGhlaRXoibClLKsxLKmRoKTETY0Or1RqhEeOY+UWs
MUIl0cEYmqL2eURy5N0Oq8OIGFexueX4jZ7kqE3b/vF9Pv98DY+yPYMVFRQU
6N/63y+KxwybcqvR3a1XeihPhKtnuaXLkytp/bLYmS8owudcHf9qk1ZaGou6
pmRYhKa2TgOvmEO0ngivkFmLImRcYYhZHz/SXC8/U7zUWIQRTcFKGx8pw4GR
yu1dM2JMCJqw+sNEB5i8jEKGxw1MstjcXMM0htMVtFOspWU4p7FCOB9hA2oX
kwszf7iLCdwcs/tbHIHmsX4X620VKnptalii4gwgcPWE9Dq0H9XrMmS5w2KJ
V31981+YWZ25dm6DJ2ik9ppTzB9jn99j4d++hyCy7LtinboG/DFqe+fVRB94
ljXB3ABP0UP5nosbmwlNsxaTo7nPUTo7OB94zR9Mrmue9d0gxXNbM0JuvggA
m8b9C/ykl1ht8OKhGI6Cvk+JzHeyBbWQVX1QFgj7yMi7z7a8Qq/8mD3T7sHg
4iT/csGvDR9vnGDD2DH4XLudXiVuR8vQ+BRKbAispwzu6huWoXDqgmX79HEw
NLe9FKDVidrrliY4p4RCc/DRuR3eXZiSMX9Eovg7/MyyfhKW3I3Gt5166q6G
AT+28+InaQ8GPvIR3aKGgzHntbJA8w2aSFsLJ9vDQbJVOMSx68WkPznTKoUn
Qaa+vLH6TB/KLPxV81kR8LrUZrVPxT9Yot5BZetFwm1KEBHPfovqT2Ki9Ycj
wSFoZVysVj+GUgMKHERR8Oi8jnmxpB9ZThFUYJ8C6sEz/ly3AWxvoqTwbDhw
I6ngrdfUANrNLKD1DAeML1J0GWcG0e6DmnMjRkOctbzt+41DuC3LP08afxrq
qgz2TDwYQonAcVDbJgZ23FyiLPUcxko/T66NYiykmdFdGDPDWNUs7m2pj4Um
4ZSjtmAED+gYndst4EI/b6aeu3kUexcH1cxd42DAy/O9RuMoTjhaxXsrxYPB
pV8iS46MYaZ/uT2zJR4sQzujxxbH0FQ34rlMmACW68TbfHLeIbPUr9iUmQgq
QZ3syJ3jqCQ9URuwkgc6unX/Zr4ex65Vbqq/hvNA+84c7c3JCeTsfZjA6ODB
aNtlpTbKJJ57erg71YoPku5s/lzZJI6dtt7Slc0HkYcdfa3jFK7QLi2jzPPh
lLd7/vTgFJYpOGikexNgaXfv+nQsiUX08b6tPgRE8c/3ZceTmJd3/k6nLwH3
G8L1rXgkpv40QjfyI8De3Sw/JpnEwBBBek0gAftYBTmKmSTqtchU34UTwOSn
CSnF3/7rvy3dKyCA1+DPtXlJYuLkqvaJdAKeqNrW9LSSyNnxoCgrgwAVd92F
uHYSg9o0dvdmESDsaOM87CaRtqySH5VLQM6oc4TrEImzYV8XRcUE3FK1PH5k
gcSpWkmz8w0CJumaksXPJA6peF4jJQRYZE+NFCyS2CoS2+0sI6BcTxI0vESO
ZR0uca3lBNSa6QeEqcuxyOjD/ugKAr6yP13T1JJjXviVNfr3CHCs6OwtXyXH
VDV5TUg1AY222cw5qhwTD+emqdcSoMpn511eI0eO2IFRUUcAvcGte9daOZ54
P76JUU9Ahqoptc9AjoH2Fxa+IgEt9GWHeUZy/A9KVnv7
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21047#1"]& ]}, {}, {}}, {{}, {{}, 
          {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQM3xL9Ojppfbg/hfbBfozHnzfzH3fth/ID5S19M
nVEHl5/DM6n3RVMonH8z6+2CebU5cL7nnlNb7eor4Pq7Dl9aWszaBuWrOAi2
Xijg37sAzufjSfRza1kI57+PTimIKV0M5Vs6PNHxFmDKXQXn23fzud+auALO
52I8b1DvtxnKj3Qo2D/Ds1bxOJzPqLtS1mnjSTi/o031V+lMGD/TITNmerbN
/csI/nTvr59OXYfzdThOd1m8vwbn98yKcHRecQXOn5jFat7PhJDvOPNx346D
MP2VDlckszbFmTyF81euCL7UOvk5nF/GaJyv/QbB1/rO1X6nDqG+u7mO72X/
Ezh/4/wWzsMCz+D8ifsWHHM69wjO//pknW7LhccQ/oEmhzXVWxwnq36A85/O
aJrV/+wNnP9r+hp1sc0IeaaS81ZP7r+F80P2Nqrcqv4I5+sY9XZe347Q/zN8
pYXKX4R6qXdHJzl5voPzv0TGRWQmINSniWz2eXgJYV/lnzuthmUIvsVcqV2L
Pd/uBwAt+uYm
            "]]}, {}}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox["\"Log[Signal]\"", TraditionalForm], None}, {
          FormBox[
          "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
           TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->FrontEndValueCache[{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
          Automatic, {{-1.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-1., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-0.75, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-0.5, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-0.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-1.5, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.45, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.4, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.35, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.3, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.95, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.9, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.85, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.8, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.7, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.65, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.6, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.55, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.45, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.4, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.35, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.3, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {400., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {600., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {250., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {300., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {350., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {450., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {500., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {550., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {650., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {700., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {750., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {800., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 
        599.9999877530612}, {-1.3112848006492637`, 0.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {320., -64.89356881873896}, 
      ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}]}, {}},
   ContentSelectable->True,
   ImageSize->{438.6666666666667, 141.7871376374779},
   PlotRangePadding->{6, 5}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.754915747706283*^9, {3.7549158256371417`*^9, 3.7549158536733694`*^9}, 
   3.754915975186349*^9, {3.7549160211446114`*^9, 3.7549160328226995`*^9}, 
   3.755000040505783*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8041104a-d0a0-48dd-993e-edebfdd8cbf7"],

Cell[BoxData[
 DynamicModuleBox[{QMRITools`PlottingTools`Private`plot$$ = GraphicsRow[{
    Show[
     QMRITools`PlottingTools`Private`pl$21144[
     QMRITools`PlottingTools`Private`f1$21144, 
      QMRITools`PlottingTools`Private`f2$21144, 1 - 
      QMRITools`PlottingTools`Private`f1$21144 - 
      QMRITools`PlottingTools`Private`f2$21144, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 4], 2}, #, 
      QMRITools`PlottingTools`Private`func$21144, 1], 
     QMRITools`PlottingTools`Private`pl$21144[
     1 - QMRITools`PlottingTools`Private`f2$21144, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 1], 1}, #, 
      QMRITools`PlottingTools`Private`func$21144, 1], 
     QMRITools`PlottingTools`Private`pl$21144[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 2], 1}, #, 
      QMRITools`PlottingTools`Private`func$21144, 1], 
     QMRITools`PlottingTools`Private`pl$21144[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$21144 - 
      QMRITools`PlottingTools`Private`f2$21144, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 3], 1}, #, 
      QMRITools`PlottingTools`Private`func$21144, 1], 
     ListPlot[QMRITools`PlottingTools`Private`pdat$21144, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$21144, 4], 
        PointSize[0.02]}]], 
    Show[
     QMRITools`PlottingTools`Private`pl$21144[
     QMRITools`PlottingTools`Private`f1$21144, 
      QMRITools`PlottingTools`Private`f2$21144, 1 - 
      QMRITools`PlottingTools`Private`f1$21144 - 
      QMRITools`PlottingTools`Private`f2$21144, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 4], 2}, #, 
      Log[QMRITools`PlottingTools`Private`func$21144], 2], 
     QMRITools`PlottingTools`Private`pl$21144[
     1 - QMRITools`PlottingTools`Private`f2$21144, 0, 0, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 1], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$21144], 2], 
     QMRITools`PlottingTools`Private`pl$21144[0, 1, 0, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 2], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$21144], 2], 
     QMRITools`PlottingTools`Private`pl$21144[
     0, 0, 1 - QMRITools`PlottingTools`Private`f1$21144 - 
      QMRITools`PlottingTools`Private`f2$21144, {
       Part[QMRITools`PlottingTools`Private`cols$21144, 3], 1}, #, 
      Log[QMRITools`PlottingTools`Private`func$21144], 2], 
     ListPlot[QMRITools`PlottingTools`Private`pdatL$21144, PlotStyle -> {
        Part[QMRITools`PlottingTools`Private`cols$21144, 4], 
        PointSize[0.02]}]]}]& }, 
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1: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
U/4fuwvfZgQETlc56J/TIOE/Om3Vqg==
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21192#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1: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
9bclDo7eObLzruUR4X/QJi6l
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21236#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxNz30w03EcB/DdQrhwhSydyuk89YBEqwvzkJtC3ZSHrW3O0IpsLc3DbOh0
UzMP5TrnqczUyqo7hxqyQ0+HOasNdccfUckonaf5I6q7fL6/z93nPve6e//x
/jgncSgpeBwOF/V3/93f+FTnwSqVGvd/ti8LmrfcaAvacL/AgaFy14I9j4d9
fk+bAlNrqXLm0hKYN5hi6tprRtqwKNngd9PdAVzkfXCog+YGXrGxkhp5RJQX
3N33wisEjI/xeL3JnAwO/OY45syMBperynet7KWAJ+h90jcJ58AHMo+M1uXH
g0+btUdEcmhgzfKkkVXPAJf5lLIfDSSCVXsGeuSkJPBWNVN1Vs8Cx9TknJiP
TgH3uRo4pOlUsG+aUGyXywZL5yp9dfMXwfa7TURkcRpYXGo8r8BfBrs9CfvU
VZcBZvXGyx4TuGB3jbZhVodc9Iw/b95wBaz3ZljUMHngB9YjBI7jVbD1q5ws
py/IaYTE+8GyTDAzjEcgca6BdYN24gIiHxywuKr2X8R4wZL8Vp0FPlTBqNYI
s8EKScikPTEH3EanCIj4XPDzIfn4cDfyGQeXslCJADy+Nmm5/2Qe2BDiJ4w1
FYLLGS2BtGFkzx28fr1UBKY105s8aflgU016Z+K2AvCYbaTFBS4yP7xHRB1B
LnsX97HYrxA8ne3vNXYb2cq+WWlnRFbigm1KYq+DG6NmJnzikaur7zwdTUAu
Pvw1yoWOzGJLSjpYyI7DeovvXEz+3iWTcAly/qytzlCCzD/6srGiFDn5g03o
eAVy0Oa2wswq5OWM9TVZE/Jcp2KI/BB5ypxS/0OBrJXJA44pkZUjEXnaFsy/
Lgunslox/3Jrdzq1Y/pb/uxgqzD946puWXdi+suDqa1dyOm/Zjyo3ciswMrV
dTXyH29pHgQ=
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21280#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHs01AkcxZ2Rwo5XQyalcnohKdVY7cr361Gxmh56KJOZTqPoIUx2xHjM
/PLKm4SdHluI2Yy202J3SFN6KyJDP8rsrHeG0W4RtbKzf9xzzz3n/vG51+Zw
mN8Rio6ODlOr/32actTmRZFM/oRlUa8kNTBvQlBBTaqGxYnS5oIODTQKLNky
21Z4FRTxzQ6FBuxdvXpesfrAMC1q9r2XGgi4FFDKGR+HeOpCSuljDfBeHNFb
0TAbjae/UCOrNBAfpGacs7VEzmZFwIYcDSSudWyuZa1E1ve5yxneGvhkYpQ5
yXNB23Frgn1zFOIFBav+WOOBuzrtsgU2o0DZbfdIV98bqwZjOf0/jYDboBVp
w9mOy1LTeGKDEciR5Sz6tMwPKQnKUlGSGpSBDzIfH9iLi/2/fLKcGobVkd++
vpywH/NeSdomIoZhx+wan21hLBRQW+yZE++gaaJ3knuFjXS3JNMG3jvIdsoK
+eX5ITSr3Ltv++chkC15fr8UD6NVpf1vh5OHwEzOke1p5+KudU3Sfw2HYPfF
6M3vtx/BQqVntb54EB6sUIfh0FHsKlSrxmwGYf2JuBTzmBBsP8Z9xLo5AJmj
+esV74+hKjnXW+w1ABaLZ8V7p5zACmHBcZqiH1KyJg9KKKHIzKVYGIX2w8pK
r647l0/hwQUtjtkzfcBt2F98gx6ON3bONVxb0Ae2Ta3XRhThqGhzeiJn9EHi
r/z3+tci0GFsxV3Hl73QvpZtcJHDw5bO+RfcI3qhzLiDHmZ1Gvm6ii9v5/WC
8cPoKOv+0zg5zFWV1/TACfqhq+7Fkcg8SC27wO4BjhePjmE/In1rW+q4Tg8o
XpinCF34KAqLdn1T9hds+jgld/7Ix9Sr/qHBe7T5g6H3E3kUSmJDLG79q4J1
uWxxU9wZLFEzHDlSFUjSPXotXKLx7Bz5axpHBdWBfgIXSgx+bq+/84yqgt+b
S7tb7sYgVW/q4RjxJ+y0XJrtmS7AOnpj+b0eJXR/7TV0+CEWdZ3/aaTuVILa
gxG3Ty8O82/3V3Q3dEMO+7YbqyUOp2dJWVcdusF+Pq+xPTMeLUept8xL3gKr
IvC6PSsB58DGxz2mb0Gv6WTdoblCzJOIljglvgGSts0gOFyIWzCq/pTuG+Bv
uR8f0CHEjEVSWkxMF2Q/9e9MZYjQUL/ovOl0JwydcV5D5omQ6RQ2xE7sBCOL
Cqn5pAh9L1Q7D+h2glTH3SRjH4ELidqz27JIKGEOK532E1goYvh7ZZAgFp+/
+foAgT7Cur2uaSSkbhhgLg0kMNy1q80hmQRuSHpGLZfA9fozbSbxJFi1tBu8
CydQU/5M1R2q7f98fNaWdAIZW3NoYiYJCSM0hTqDQJetae6FviTwN9aX5GYR
2Kq0Fuf7kBDUZuLZnUsgr073efZmEmBOtSiyiEDuueBVqZtImDg187X4OoG+
QYJe4WoSRuskzd7lBH5NCJEJV5HQp+93RSMhsGqsRia0I6G1uHTTd1IC+Q+P
bRQtJ0Ha4RPbepvAxGWPNiRaa/cu/eAbVUVgqjwgMGmBdm/4pQXWNQRWSBi3
kudr+Q3HakNkBHYGVyrOWWj5/YvSjOsIHADPsnSalr/UPaDqDoG046bFmWYk
nPx72C7gLoFWIWZPs020/7jlT83ICZyu86DnGZHwHxYtUe8=
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21324#1"]& ]}, {}, {}}, {{}, {{}, 
          {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{0., 1.003719164888657}, {1., 0.9942400777408076}, {10., 
            0.9630054497770649}, {25., 0.9407012066087037}, {100., 
            0.8214441198405645}, {200., 0.7054012467307884}, {400., 
            0.5110209369739763}, {600., 
            0.37867663496671583`}}]}, {}}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox["\"Signal\"", TraditionalForm], None}, {
          FormBox[
          "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
           TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->FrontEndValueCache[{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
          Automatic, {{0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.4, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.8, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {1., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.3, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.35, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.45, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.5, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.55, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.65, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.7, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.75, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.85, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.9, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.95, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {1.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {400., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {600., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {250., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {300., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {350., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {450., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {500., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {550., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {650., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {700., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {750., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {800., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 599.9999877530612}, {0, 1.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {106.66666666666667, -64.89356881873896},
       ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}], InsetBox[
      GraphicsBox[{{{{}, {}, 
          TagBox[
           {GrayLevel[0], Thickness[Large], Opacity[1.], 
            LineBox[CompressedData["
1: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
0YVi7kQiwzLz+xwSMKU5Kj3kQuJ/BAz0CA==
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21406#1"]& ]}, {}, {}}, {{{}, {}, 
          TagBox[
           {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], 
            LineBox[{{-0.0999877530612245, 0.006049356430231414}, {
             0.08406142412783199, -0.005085798020390995}, {
             0.26811060131688846`, -0.016220952471013565`}, {
             0.6362089556950015, -0.0384912613722585}, {
             1.3724056644512275`, -0.08303187917474868}, {
             2.8447990819636795`, -0.1721131147797287}, {
             5.7895859169885835`, -0.3502755859896891}, {
             11.679159587038392`, -0.7066005284096096}, {
             19.26063498170024, -1.1652871727755134`}}]},
           
           Annotation[#, 
            "Charting`Private`Tag$21856#1"]& ]}, {}, {}}, {{}, {}, {}}, {{{}, \
{}, 
          TagBox[
           {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
            Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVink01AkcwDVFeGKrEc2UzZKrk2R14DuyQpRmKjKupUKuMWmkyTG/Z5fN
nVbW0TGIrZGnIoP1LUIXmhwhKkdu82tXMVq07R+f93mf9z7aPqHMkxQ5OTmn
b/zvBcop7RdZYoy4Mb3R4qkQ18zwb6v8Um6VMKt2jUYK8Rlfw1NsILG64LRZ
U0bNR6O9NgOv2ENWF+dOKN/zzke3XLcCr8+frZIOd0oNZPnIfXFSXq9OAYRL
xA+o+oUYfWJi528GGtD2c7T9ZFwRxm3f2lLF1ofvflAKzgERzqqtSJZxzSFj
ofvMKOMeRvMzN1VuswZy1bwTT6USKSzDhqWKdpCkP17/qbYGLUdoXdpeB2Fv
uCSgdOIhponTtGZ1maBhSJXzdKzHtx71yY3Hj8Iq072+lPcNuCX8x9d5Ma5Q
aulAveb3BA8pVNg7hrKhPK+WVV7/DJtnBmW+Vz3hDVPT+xGzGVONU/z/fO4N
Ae5dX2wrWlG84fmjAvCBFhMMG1CQ4Er0Eh/p8IXIgTjHdY6vkJUT+dPHgyeB
VRMlvcRvw3q9iVAYPQXWjDFe3ON23BEYFU897w/yjfv1uMs7MXnq8o72jwEg
C+/OzTV9jerfL4u2iw+E+Za+OQa/C+NTZO7FlGAwYalr6Yq6Ub/EpqcmLwT4
BBoIZnrQt85VeEuTA5ll7m49u3vRoFlyY7KdAwPKW1icgD6MK+V9VLwRBpZq
HBNB2Vvs2O6plOPFBYnFcFfL4Du8qdqpGUo7A2sr9FkqCe9R9XFkxPoPZ6BN
qF4iNerHQE3v6wxhOBTp5p0m6/rRy4arCaFnYem8R06J3wC2v6DGx5rzwIGV
9S5AaRAtPs2h2SceFFkFxdtc/9bTynZNGAEpgkhh774hNEn3zG6OOgeprhu0
M3qHsDjRelDdPBIiS+Hefu4HLPdg8s0p52GKnV0ppg7jg5aCvpe15yEyL1nb
QTSMzho6qfsS+ZBsWrVwxXkE+xYHlTc7XIBq71iLZeMjOGG9M+qYfBS8UnmY
FhI7immedy3ZL6OAq7rLJVNnDI3Wcp91JEfD5sIDgt7qMWTf9ig0YsdAcPoV
rffe4yjfHFTtvSoWMhfcW/spE9i12lHJjxMLPYvVg0uyJ5Bn+yjarTMWbh49
EvjOYhJTn7h0J+wUQCLj12NvOidx9JzZtq5LAmCXGB/tCJrCFeq3RVSZAMpD
1jQlqUlRJMdQSzpGwMaGy7k+RVLMdxp/a+xKgIC2NVPxlhSzszPuvD5OQG9o
U+odkRQTTIeddDwIyKB9Ib6USdHXPzGpypeAr6FeAZdqpEh72aE0xiGgh2Zk
Vif59l87vcw2kYAkDrZqz0sxZnJ1+0QSASMNrk+bFqXI2/VXfnoKATb0f+qC
l5B4ok1tX186Af826FaIFUi0Wl4uCM8iwI9+MffwShJnQr4uCgsJsG48EiDQ
I3GqurjFroiAXLrUR9+QxCFF5lVpMQGznHj35k0kSoQFFrtFBJTQqw6tNSZR
1Gl/QXKXAFrY92Zle0jM15k+EHGfgLONldtcLEnM5uTS11cQ0EpnGi4AiQnK
ZJW/mID4xrh19rYkxrhkXVStJmCQrrWGtCORV8Bwu19DgFXYA7XfD5AY9Pe4
oVstAX80OivtOUiir+Xlua9IwDR9nNLvTOJ/ejh6Tg==
             "]]},
           
           Annotation[#, 
            "Charting`Private`Tag$21943#1"]& ]}, {}, {}}, {{}, {{}, 
          {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{0., 0.0037122658952939832`}, {
            1., -0.005776574586268697}, {10., -0.03769620803380964}, {
            25., -0.06112971733395398}, {100., -0.19669136592363923`}, {
            200., -0.3489884937720671}, {400., -0.6713447170659719}, {
            600., -0.9710726439795946}}]}, {}}, {}, {}, {}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, False}, {True, False}},
       FrameLabel->{{
          FormBox["\"Log[Signal]\"", TraditionalForm], None}, {
          FormBox[
          "\"b-value [\\!\\(\\*SuperscriptBox[\\(mm\\), \\(2\\)]\\)/s]\"", 
           TraditionalForm], None}},
       FrameStyle->Thickness[Large],
       FrameTicks->FrontEndValueCache[{{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
          Automatic, {{-1., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-0.75, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, 
             {
              AbsoluteThickness[0.1]}}, {-0.5, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-0.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-1.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-1.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.95, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.9, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.85, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.8, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.7, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.65, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.6, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.55, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.45, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.4, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.35, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.3, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-0.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.05, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.1, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.15, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.2, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {0.25, 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {400., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {600., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-200., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {-50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {50., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {100., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {150., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {250., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {300., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {350., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {450., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {500., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {550., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {650., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {700., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {750., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}, {800., 
             FormBox[
              TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
             0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->200,
       LabelStyle->Directive[
         GrayLevel[0], Bold, Small, FontFamily -> "Helvetica"],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-0.0999877530612245, 
        599.9999877530612}, {-1.1652871727755134`, 0.1}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {320., -64.89356881873896}, 
      ImageScaled[{0.5, 0.5}], {200, 123.60679774997895}]}, {}},
   ContentSelectable->True,
   ImageSize->{438.6666666666667, 141.7871376374779},
   PlotRangePadding->{6, 5}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.754915747706283*^9, {3.7549158256371417`*^9, 3.7549158536733694`*^9}, 
   3.754915975186349*^9, {3.7549160211446114`*^9, 3.7549160328226995`*^9}, 
   3.755000040987563*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"f7f96c00-2519-47e7-bc97-2da38c49e0b4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IVIM fit ", "Subsubsection",
 CellChangeTimes->{{3.7549138637211986`*^9, 3.7549138972407355`*^9}, {
   3.7549155771892085`*^9, 3.7549155820371375`*^9}, 
   3.755000066069899*^9},ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-\
8a8055e0e5be"],

Cell["\<\
Fit using the whole volume fit as a initial guess and using a fixed D*\
\>", "Text",
 CellChangeTimes->{{3.755000067813447*^9, 
  3.75500009744042*^9}},ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-\
eb1d2d31934f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"S0Ii", ",", "fracI", ",", "diff", ",", "pDiff"}], "}"}], "=", 
   RowBox[{"IVIMCalc", "[", 
    RowBox[{"dwiIso", ",", "bval", ",", "fiti", ",", 
     RowBox[{"IVIMConstrained", "\[Rule]", "False"}], ",", 
     RowBox[{"Parallelize", "\[Rule]", "True"}], ",", 
     RowBox[{"MonitorIVIMCalc", "\[Rule]", "True"}], ",", 
     RowBox[{"IVIMFixed", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fracI", "=", 
   RowBox[{"Clip", "[", 
    RowBox[{"fracI", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7549160511618843`*^9, 3.754916055224902*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"]
}, Closed]],

Cell[CellGroupData[{

Cell["Split signals into perfusion and diffusion", "Subsubsection",
 CellChangeTimes->{{3.754915593226927*^9, 
  3.7549156019133368`*^9}},ExpressionUUID->"e507394d-7fce-45ce-bab9-\
205bc132c31e"],

Cell["\<\
With a IVIM fit you can remove the perfusion contribution form the original \
DWI signal\
\>", "Text",
 CellChangeTimes->{{3.7550001029416046`*^9, 3.755000124998373*^9}, 
   3.755000646175701*^9},ExpressionUUID->"f1339e48-5568-4181-9103-\
13343d87b5ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataCor", ",", "dataSyn"}], "}"}], "=", 
   RowBox[{"IVIMCorrectData", "[", 
    RowBox[{"datareg", ",", 
     RowBox[{"{", 
      RowBox[{"S0Ii", ",", "fracI", ",", "pDiff"}], "}"}], ",", "val", ",", 
     RowBox[{"FilterMaps", "\[Rule]", "False"}], ",", 
     RowBox[{"FilterType", "\[Rule]", "\"\<Laplatian\>\""}], ",", 
     RowBox[{"FilterSize", "\[Rule]", "0.8"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754213347702221*^9, 3.754213350373131*^9}, {
   3.7542134659202547`*^9, 3.754213466512255*^9}, 3.7549161050522118`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"dataCor", ",", "dataSyn", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754213485564293*^9, 3.754213492195796*^9}, {
  3.7549161354346447`*^9, 3.7549161421385717`*^9}, {3.755000140840662*^9, 
  3.7550001411680336`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensor analysis", "Subsection",
 CellChangeTimes->{{3.754920706637082*^9, 3.754920714715969*^9}, {
  3.7550002741128864`*^9, 
  3.755000276412504*^9}},ExpressionUUID->"46cb5c22-df36-42f1-8278-\
128db9e6546d"],

Cell[CellGroupData[{

Cell["Fit the tensors", "Subsubsection",
 CellChangeTimes->{{3.7550002776467867`*^9, 
  3.755000283657793*^9}},ExpressionUUID->"46110b45-9f52-4171-ae7f-\
cc9053aa8a39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Options", "[", "TensorCalc", "]"}]}]], "Input",
 CellChangeTimes->{{3.755000157238582*^9, 3.755000168626581*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"MonitorCalc", "\[Rule]", "True"}]},
    {
     RowBox[{"Method", "\[Rule]", "\<\"iWLLS\"\>"}]},
    {
     RowBox[{"FullOutput", "\[Rule]", "True"}]},
    {
     RowBox[{"RobustFit", "\[Rule]", "True"}]},
    {
     RowBox[{"Parallelize", "\[Rule]", "True"}]},
    {
     RowBox[{"RobustFitParameters", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.0001`", ",", "6"}], "}"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.7550001611929083`*^9, 3.75500019414386*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"cf2246ab-4c99-4e8b-83d6-f46ec253570d"]
}, Open  ]],

Cell["Calculate tensor from corrected data", "Text",
 CellChangeTimes->{{3.755000205572136*^9, 
  3.7550002111624765`*^9}},ExpressionUUID->"9b1f7978-adca-4e60-bbe3-\
3c5f3c0ab3f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tens", ",", "S0", ",", "outlier", ",", "res"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"dataCor", ",", "grad", ",", "val"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7542133092285795`*^9, 3.754213342561816*^9}, 
   3.754213542568743*^9, {3.7542147650041075`*^9, 3.7542147659083357`*^9}, {
   3.754918564252726*^9, 3.7549185903437014`*^9}, {3.754918924687765*^9, 
   3.754918928371292*^9}, {3.75500019939853*^9, 3.7550002177135515`*^9}, {
   3.7550005139963884`*^9, 3.7550005196559925`*^9}, 
   3.7550005581957283`*^9},ExpressionUUID->"c4046150-0e85-4051-a718-\
7bc3b4410eb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"crp", "=", 
   RowBox[{"FindCrop", "[", "mdata", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensPlot", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ApplyCrop", "[", 
      RowBox[{"#", ",", "crp"}], "]"}], "&"}], "/@", "tens"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"GridData", "[", 
    RowBox[{
     RowBox[{"tensPlot", "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "4", ",", "5", ",", "4", ",", "2", ",", "6", ",", "5", ",", 
         "6", ",", "3"}], "}"}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.002"}], ",", "0.002"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755000323126373*^9, 3.7550004528731933`*^9}, 
   3.755000654989583*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],

Cell["\<\
Calculate tensor using only high b-values, first find the positions of the \
high b-values ad then select the correct data and fit the tensor.\
\>", "Text",
 CellChangeTimes->{{3.755000220724985*^9, 3.755000228452171*^9}, {
  3.7550006807677164`*^9, 
  3.755000705520234*^9}},ExpressionUUID->"b7b2a8a2-13df-4751-8d89-\
c4d73b0ea43f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"selH", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"pos", "[", 
     RowBox[{"[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Position", "[", 
        RowBox[{"bval", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "\[GreaterEqual]", "200"}], ")"}], "&"}], ")"}]}]}],
         "]"}]}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensH", ",", "S0H", ",", "outlierH", ",", "resH"}], "}"}], "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"FullOutput", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7541969378065863`*^9, 3.754196960757258*^9}, {
   3.7549187589191275`*^9, 3.754918786013351*^9}, 3.754919332812829*^9, {
   3.754919561177947*^9, 3.7549195659665613`*^9}, {3.7549196440639453`*^9, 
   3.7549196533154583`*^9}, {3.755000217149051*^9, 3.755000255723921*^9}, {
   3.7550006858586383`*^9, 3.7550007090440454`*^9}, {3.7550013675359993`*^9, 
   3.755001371129531*^9}},ExpressionUUID->"0e3b5a12-1999-4716-a93f-\
1cb468138eef"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", 
   RowBox[{"Total", "@", 
    RowBox[{"Transpose", "@", "outlierH"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754919594117535*^9, 3.7549196290454493`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],

Cell["\<\
Based on the tensor residuals you can estimate a noise sigma map however this \
will severely overestimate the sigma\
\>", "Text",
 CellChangeTimes->{{3.7550016396203413`*^9, 
  3.7550016675961504`*^9}},ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-\
6893ddbeb429"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sigmaT", "=", 
   RowBox[{"SigmaCalc", "[", 
    RowBox[{
     RowBox[{"datareg", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "selH"}], "]"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{"tensH", ",", 
       RowBox[{"{", "S0H", "}"}]}], "]"}], ",", 
     RowBox[{"grad", "[", 
      RowBox[{"[", "selH", "]"}], "]"}], ",", 
     RowBox[{"val", "[", 
      RowBox[{"[", "selH", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.755001350995302*^9, 3.755001397833783*^9}, {
  3.7550015474069123`*^9, 3.7550015510458455`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"S0H", ",", "sigmaT"}], "]"}]], "Input",
 CellChangeTimes->{{3.755001400060593*^9, 3.755001400226844*^9}, {
  3.7550015763895607`*^9, 3.755001580891612*^9}, {3.7550016333778324`*^9, 
  3.7550016367930765`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],

Cell[CellGroupData[{

Cell["Analyse Tensor parameters", "Subsubsection",
 CellChangeTimes->{{3.7549186656015377`*^9, 3.7549186728649974`*^9}, 
   3.7549194024976115`*^9, {3.7550008603924294`*^9, 3.7550008637192807`*^9}, 
   3.7550015902694283`*^9},ExpressionUUID->"5df7f489-c3af-447f-892b-\
2d741b7472b9"],

Cell["ParameterCalc will calculate l1, l2, l3, MD and FA.", "Text",
 CellChangeTimes->{{3.7550008023956223`*^9, 
  3.7550008212908936`*^9}},ExpressionUUID->"827dae19-915f-47c7-88e0-\
29476a68b6eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par", "=", 
   RowBox[{"ParameterCalc", "[", "tens", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549186746012135`*^9, 3.75491868181139*^9}, 
   3.75491987629683*^9, {3.7549199750647078`*^9, 3.7549199854126315`*^9}, 
   3.755000732829716*^9, {3.755000800069415*^9, 3.7550008004599547`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{
   RowBox[{"par", "[", 
    RowBox[{"[", "4", "]"}], "]"}], ",", 
   RowBox[{"par", "[", 
    RowBox[{"[", "5", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", ".5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549201719106073`*^9, 3.7549202047145824`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],

Cell["Get the parameters from muscle masks in table form", "Text",
 CellChangeTimes->{{3.755000843971737*^9, 
  3.755000856556223*^9}},ExpressionUUID->"c7e1f636-4a65-44ba-97f5-\
3c532c2ec232"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"masks", ",", "labs"}], "}"}], "=", 
   RowBox[{"SplitSegmentations", "[", "labels", "]"}]}], ";"}], "\n", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ",", "masks", ",", "\"\<MD\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "@", 
  RowBox[{"GetMaskMeans", "[", 
   RowBox[{
    RowBox[{"par", "[", 
     RowBox[{"[", "5", "]"}], "]"}], ",", "masks", ",", "\"\<FA\>\""}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.754919933167025*^9, 3.7549199519066277`*^9}, 
   3.7550008748413715`*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],

Cell["\<\
Plot the parameters prom a muscle mask as a Histogram to evaluate their \
distribution\
\>", "Text",
 CellChangeTimes->{{3.7550008867946796`*^9, 
  3.7550009101257515`*^9}},ExpressionUUID->"811ccd9c-c131-4267-85e8-\
406bc2e46d47"],

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hist", "[", 
       RowBox[{
        RowBox[{"GetMaskData", "[", 
         RowBox[{
          RowBox[{"par", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "#"}], "]"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<Both\>\""}]}], "]"}], "&"}], "/@", 
     RowBox[{
      RowBox[{"Transpose", "[", "masks", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}]}], ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754920962778118*^9, 3.7549209861502666`*^9}, {
  3.7549211603226004`*^9, 3.7549211784332447`*^9}, {3.754921251856983*^9, 
  3.7549212556549807`*^9}, {3.754999246118026*^9, 3.754999247507222*^9}, {
  3.7550009157742796`*^9, 3.7550009289458475`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Tensor angles", "Subsubsection",
 CellChangeTimes->{{3.7549205638416615`*^9, 3.7549205750434775`*^9}, {
  3.7550009652188683`*^9, 
  3.755000970820772*^9}},ExpressionUUID->"e037ed65-c2cd-4cc5-8065-\
ba7af72e972b"],

Cell["\<\
First filter the tensor using a diffusionFilter and anisotropic smoothing.\
\>", "Text",
 CellChangeTimes->{{3.755000973750066*^9, 3.7550009919163976`*^9}, {
  3.755001047885309*^9, 
  3.7550010495798187`*^9}},ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-\
f1650dab7c2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tensF", "=", 
   RowBox[{"AnisoFilterTensor", "[", 
    RowBox[{"tens", ",", "datareg"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549202250785255`*^9, 3.7549202397016525`*^9}, 
   3.755001029185559*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],

Cell[BoxData[
 RowBox[{"ColorFAPlot", "[", "tensF", "]"}]], "Input",
 CellChangeTimes->{{3.755001208033079*^9, 3.7550012133556104`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],

Cell["\<\
Calculate the eigenvectors and their angle with respect to the slice normal\
\>", "Text",
 CellChangeTimes->{{3.7550009993812585`*^9, 
  3.755001024147148*^9}},ExpressionUUID->"c2e709da-971c-4de4-a9f5-\
34d1b012c9b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigVal", "=", 
   RowBox[{"EigenvecCalc", "[", "tensF", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"angMap", "=", 
   RowBox[{"AngleCalc", "[", 
    RowBox[{
     RowBox[{"eigVal", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Distribution", "\[Rule]", "\"\<0-90\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7549204064330254`*^9, 3.754920423101942*^9}, 
   3.755000996767805*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],

Cell[BoxData[
 RowBox[{"PlotData", "[", 
  RowBox[{"angMap", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "90"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7549205923651466`*^9, 3.754920595437496*^9}, {
  3.754920650714964*^9, 3.7549206547954545`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["J-coupling simulations", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9},ExpressionUUID->"3b817272-df1a-4e68-aaea-\
c22d9c35e327"],

Cell[CellGroupData[{

Cell["Show Fat spin system", "Subsection",
 CellChangeTimes->{{3.751786128248234*^9, 
  3.751786134998006*^9}},ExpressionUUID->"16e4c173-1b98-4694-a73e-\
a9458b44e628"],

Cell["\<\
Fat contains multiple peak with various j coupling frequencies\
\>", "Text",
 CellChangeTimes->{{3.7548947643514943`*^9, 
  3.754894808814317*^9}},ExpressionUUID->"a933a9a3-528b-4c0e-a038-\
17f710e1fe43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"GetSpinSystem", "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", "#"}], "&"}], "/@", 
    RowBox[{"sys", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}]}], "]"}], "]"}]}], "]"}], "]"}], "\n", 
 RowBox[{"tabs", "=", 
  RowBox[{"Column", "[", 
   RowBox[{"SysTable", "[", "sys", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.748421110877775*^9, 3.7484211355335054`*^9}, {
  3.7484326404391546`*^9, 3.748432641990839*^9}, {3.751786144851331*^9, 
  3.7517861574756746`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"9", " ", "\<\"A\"\>"}], "+", 
  RowBox[{"84", " ", "\<\"B\"\>"}], "+", 
  RowBox[{"6", " ", "\<\"C\"\>"}], "+", 
  RowBox[{"12", " ", "\<\"D\"\>"}], "+", 
  RowBox[{"6", " ", "\<\"E\"\>"}], "+", 
  RowBox[{"2", " ", "\<\"G\"\>"}], "+", 
  RowBox[{"2", " ", "\<\"H\"\>"}], "+", "\<\"I\"\>", "+", 
  RowBox[{"6", " ", "\<\"J\"\>"}]}]], "Output",
 CellChangeTimes->{
  3.7484210753772917`*^9, {3.748421106124619*^9, 3.7484211360960655`*^9}, 
   3.748421554954722*^9, 3.74842159035664*^9, 3.748432085517101*^9, {
   3.7484324653147917`*^9, 3.7484324675342503`*^9}, {3.7484325539714017`*^9, 
   3.748432570847234*^9}, {3.7484326159866333`*^9, 3.748432642676531*^9}, 
   3.748432740376744*^9, {3.7484327773923426`*^9, 3.7484327942673216`*^9}, 
   3.7484427726269073`*^9, 3.748599971655484*^9, 3.7486157714863625`*^9, 
   3.748666805138551*^9, 3.74866715919024*^9, 3.748667218791155*^9, 
   3.7486672666056175`*^9, 3.7486720217689943`*^9, 3.74868205036605*^9, {
   3.7486821486860266`*^9, 3.7486821679802485`*^9}, 3.748682316806711*^9, 
   3.748682701289005*^9, 3.748683153523489*^9, {3.748683328261779*^9, 
   3.7486833593001285`*^9}, 3.7486844793689995`*^9, 3.748684545732069*^9, 
   3.748685978881857*^9, 3.7486865061723394`*^9, 3.748686592520005*^9, 
   3.7486896090549164`*^9, 3.748689670971757*^9, 3.7486898147064667`*^9, 
   3.748689924217182*^9, 3.7486899805730906`*^9, 3.748690374932212*^9, 
   3.7486904557729316`*^9, 3.7486905027406626`*^9, 3.7486905414920907`*^9, 
   3.748690684291117*^9, 3.7486907219336386`*^9, {3.748701107051084*^9, 
   3.748701134111747*^9}, 3.7487011909732265`*^9, 3.7487458688260355`*^9, 
   3.7505052669130945`*^9, {3.7517861403863726`*^9, 3.751786157789482*^9}, 
   3.754894706386057*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8a3e72b1-bd91-45a6-af68-2184474f4c36"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatGly\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"G\"\>"},
                  {"4.2`"},
                  {"2"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"H\"\>"},
                  {"4.45`"},
                  {"2"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"I\"\>"},
                  {"5.15`"},
                  {"1"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"G\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", 
              RowBox[{"-", "12.4`"}], "7.`"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"H\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "7.`"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"I\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "ColumnsIndexed" -> {}, "Rows" -> {False, True, {False}, False},
               "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"G"}, "  "], 
               Row[{"H"}, "  "], 
               Row[{"I"}, "  "]}, {
               Column[{"G", 4.2, 2}], 
               Column[{"H", 4.45, 2}], 
               Column[{"I", 5.15, 1}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatStart\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"C\"\>"},
                  {"1.6`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"E\"\>"},
                  {"2.27`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "7.1`", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"C\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "7.1`"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"E\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "ColumnsIndexed" -> {}, "Rows" -> {False, True, {False}, False},
               "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "], 
               Row[{"C"}, "  "], 
               Row[{"E"}, "  "]}, {
               Column[{"B", 1.3, 6}], 
               Column[{"C", 1.6, 6}], 
               Column[{"E", 2.27, 6}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatDouble\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"12"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"D\"\>"},
                  {"2.03`"},
                  {"12"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"J\"\>"},
                  {"5.3`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "7.1`", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"D\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "6.2`"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"J\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "ColumnsIndexed" -> {}, "Rows" -> {False, True, {False}, False},
               "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "], 
               Row[{"D"}, "  "], 
               Row[{"J"}, "  "]}, {
               Column[{"B", 1.3, 12}], 
               Column[{"D", 2.03, 12}], 
               Column[{"J", 5.3, 6}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatEnd\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"A\"\>"},
                  {"0.9`"},
                  {"6"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"A\"\>"},
                  {"0.9`"},
                  {"3"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "8", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"A\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"A\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "ColumnsIndexed" -> {}, "Rows" -> {False, True, {False}, False},
               "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "], 
               Row[{"A"}, "  "], 
               Row[{"A"}, "  "]}, {
               Column[{"B", 1.3, 6}], 
               Column[{"A", 0.9, 6}], 
               Column[{"A", 0.9, 3}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"fatMet\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold]},
        {
         TagBox[
          TagBox[GridBox[{
             {
              StyleBox["\[Null]",
               ShowStringCharacters->False], 
              TagBox[
               TagBox[GridBox[{
                  {"\<\"B\"\>"},
                  {"1.3`"},
                  {"60"}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               HoldForm]},
             {
              TagBox[
               TemplateBox[{"  ","\"  \"","\"B\""},
                "RowWithSeparators"],
               HoldForm], "\<\"-\"\>"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {False, True, {False}, False}, 
              "ColumnsIndexed" -> {}, "Rows" -> {False, True, {False}, False},
               "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[2.0999999999999996`]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
          Function[BoxForm`e$, 
           TableForm[BoxForm`e$, TableHeadings -> {{
               Row[{"B"}, "  "]}, {
               Column[{"B", 1.3, 60}]}}]]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7484210753772917`*^9, {3.748421106124619*^9, 3.7484211360960655`*^9}, 
   3.748421554954722*^9, 3.74842159035664*^9, 3.748432085517101*^9, {
   3.7484324653147917`*^9, 3.7484324675342503`*^9}, {3.7484325539714017`*^9, 
   3.748432570847234*^9}, {3.7484326159866333`*^9, 3.748432642676531*^9}, 
   3.748432740376744*^9, {3.7484327773923426`*^9, 3.7484327942673216`*^9}, 
   3.7484427726269073`*^9, 3.748599971655484*^9, 3.7486157714863625`*^9, 
   3.748666805138551*^9, 3.74866715919024*^9, 3.748667218791155*^9, 
   3.7486672666056175`*^9, 3.7486720217689943`*^9, 3.74868205036605*^9, {
   3.7486821486860266`*^9, 3.7486821679802485`*^9}, 3.748682316806711*^9, 
   3.748682701289005*^9, 3.748683153523489*^9, {3.748683328261779*^9, 
   3.7486833593001285`*^9}, 3.7486844793689995`*^9, 3.748684545732069*^9, 
   3.748685978881857*^9, 3.7486865061723394`*^9, 3.748686592520005*^9, 
   3.7486896090549164`*^9, 3.748689670971757*^9, 3.7486898147064667`*^9, 
   3.748689924217182*^9, 3.7486899805730906`*^9, 3.748690374932212*^9, 
   3.7486904557729316`*^9, 3.7486905027406626`*^9, 3.7486905414920907`*^9, 
   3.748690684291117*^9, 3.7486907219336386`*^9, {3.748701107051084*^9, 
   3.748701134111747*^9}, 3.7487011909732265`*^9, 3.7487458688260355`*^9, 
   3.7505052669130945`*^9, {3.7517861403863726`*^9, 3.751786157789482*^9}, 
   3.754894706410626*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"551d144d-d9d8-471c-962c-bcfc7c16006b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Glutamate spectra with Steam", "Subsection",
 CellChangeTimes->{{3.748230398223116*^9, 3.7482304059809375`*^9}, {
  3.7517854856684136`*^9, 
  3.751785492675087*^9}},ExpressionUUID->"2cfca995-51c1-4930-93bd-\
525f0bdfb9d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"GetSpinSystem", "[", "\"\<glu\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"din", ",", "struct"}], "}"}], "=", 
   RowBox[{"SimHamiltonian", "[", "sys", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"echoTime", "=", "18"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pls", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"dout", "=", 
       RowBox[{"SequenceSteam", "[", 
        RowBox[{"din", ",", "struct", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"echoTime", ",", "tm"}], "}"}], "/", "1000"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time", ",", "fids", ",", "ppm", ",", "spec", ",", "dout"}], 
        "}"}], "=", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", "\[IndentingNewLine]", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "5"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pl", "=", 
       RowBox[{"PlotSpectrum", "[", 
        RowBox[{"ppm", ",", "spec", ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "7"}], "}"}], ",", "Full"}], "}"}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"tm", ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "18", ",", "31"}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"various", " ", "mixing", " ", "times"}], "*)"}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"pls", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7479933058095455`*^9, 3.7479933209230604`*^9}, {
   3.74799337592723*^9, 3.747993379465663*^9}, {3.7479934307764482`*^9, 
   3.7479934308255777`*^9}, {3.747994172569626*^9, 3.747994190903458*^9}, {
   3.7479953736250553`*^9, 3.7479953743923707`*^9}, 3.7480552391296186`*^9, {
   3.7481520234935246`*^9, 3.7481520371906805`*^9}, {3.748163203680167*^9, 
   3.748163204069208*^9}, {3.748163296543931*^9, 3.7481633122749677`*^9}, {
   3.7481634309156246`*^9, 3.7481634317759542`*^9}, 3.748182235067433*^9, {
   3.748230250760906*^9, 3.7482302866392374`*^9}, {3.7483409653608446`*^9, 
   3.7483409747667446`*^9}, {3.748615798967787*^9, 3.748615808831251*^9}, {
   3.7486855583611155`*^9, 3.7486855858293495`*^9}, {3.7486857183285575`*^9, 
   3.7486857941830215`*^9}, {3.7486858366955214`*^9, 3.748685837158784*^9}, {
   3.75178526306184*^9, 3.7517852706866055`*^9}, {3.7517853329146557`*^9, 
   3.751785333778942*^9}, {3.751785366968247*^9, 3.7517854513493204`*^9}, {
   3.754894725276472*^9, 3.7548947325069942`*^9}, {3.754894783470517*^9, 
   3.754894786444804*^9}, {3.7548948200756025`*^9, 3.754894849418341*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
         LineBox[CompressedData["
1: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
bmb5JZrBgc1+qtaVzBQiOlLIue8fOXBSZYpWuE4h6pHlybb+woHF1A//3v+t
AJW8Ston2MGB2ZUuJdJcKkCBGUfcG0Y5MJj3/u35mY8M+wrmX65w4JiDQ/P3
dfORkA9vDhsdGV+9PJv5ZyEPBaTqDfexkPFz+Z7vtb55aKMqhadoBxnfkaNm
DhfLQwY941e99pOxR3pRPvEtF/1ePeZ5T4iMC6uEdNktcpHirldIQoyMM//a
DdwXzEU54sWLpJNkbGdT16f4IwcdUF8X65Ih45ml+vIh1xzk9RT0PiiQsbj1
8elsuRy07OQc7qxGxtfZBVOnZz+gRzF1325eJeP7Z9lURp9/QN8/stAfuUXG
huR4wngqG8n/0jhLpUfG+9f7rpa8ykaZM8Gmrc/IeGBtKsRs6z3ay9qemmZK
xmbdL2YU/N4jVxGeHltrMmY10VPTFXyP5hQe7LziSMb0w8zGd0qz0P17SWoH
Pcn4EkuOwtz1LNRoPeqwGkDGczOKj+cWMtGZt0eKm8LJuJRpFJ8My0QpOSb/
4uPIWO7eQryvbCba0VggZJFGxozyxau/BjOQw8iKjloOGceclRbo8c9A/2jk
AnhLKPVr9w4Zy2WgW7yOtXOIjN/a91s8+5eO6s7UbNTWkfEBkyNLX2PTkeR1
ppPvmsmYzSlhyl0rHcWbXHpm3EbpZz8ryYYlHbH7BMYq/iXjn1mGNk7Vacgm
9devPSNk7JIr2fTmTRoareJmnZwiY5MQ2ls6smlIq+euAl4iY/3p50pLa6no
02q8VcgWpf+90VvKZano2K7hbH0SJ16PpToKdqnonfjhIVl2ThxL3nW3iUhF
jOov9nPu5sQPaXKE/9KnIvOneVeGDnDi//zVXz1sTEH9TkvuHw9yYoc/XXFq
ISlII0am0vcoJ94y4OFzu5uCyj/aL+hKcWKeFLIIo2gK+u9X1eFTcpz4t0Su
7ef5ZBQ6Q9JlPs+J5WwL/2XiZETLejGsR50TM1kdSC7yS0YmIv5NeVqcmKx2
kb/jbjL6o/CT1v0OJ/b7dI6N6VgyUru3R+b2I06cM1IaLbudhIqtb5scN+LE
Qruu2hp8T0LCb2NTaM04cXgL3WvPpCQUmDPQ3WbDib0DvMsDrJLQ1leRHVnO
nNhotu+V1aUkZDhieMHBmxO7pbTcOCOUhNppct5oBXPiCQEe6cbVRHSed6FQ
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
kbQXYWd2+nnoGiaKLzomftjlRYg5B07Zr2fiWDmbzSptL+J5wPm1pzYwUWPP
c6EtZ7yIhNhG8r7NTMzfuuWWsZ8XcSDrvSpVgImu8q77UhO9iO+X/hltFGHi
W5FfjU8uehHXb5B9l8SZaLlJnVh/x4uwblRPG5Zm4r70R906HV6ESId95VMZ
JjZELXoVffAiel4ltNQxmDhx0l1xZsGLiB2p/Fgix0SFH/fFtTi9CZX5rt9J
Ckw05otQKpfyJub/fRX038nEj2xnUrh3eRPXeDbvOLOHiVFjmxiBR70JS3HF
40dVmPio/fjmCUtvQlDWwHEnwUTfkkFdaz9vokspIFpSnYn+7ik/PiZ6E9Ea
BcXrtJi459heDvtL3oSy3v36b9pMfBLTljR3x5uYOfPuxaAOE/WuUjKiO72J
q+5/Z1r1mPgw97C0+JA3YR5K4rppyETTit2H7v/wJvgSD9EKTZmYfGOF3Yrb
h2jPs1OLtWTifd57rhvIPsTZsngzDxsmMr/ExoOSD6FUey3A2IG1nyPXIvi4
DzENnZmHXJgYyE9a3mvjQ5R2T1dt9WDiQLmz86ogH8JkcGO7kA8TLxhg7bNU
H2LzxPbPbAFMtGoP/1R2xYdoW9T7OxnMxNo3a9miGnyIsP//oDiciRylXSJ2
z3yInXz5uyCKiUI5Wko6oz7EpHTDyco4JnZnrLIlln2Ikm2DLtmJTPz6N7ly
D68vYaiyEheeysSgT7ECexi+BM9R6cuOmUyMnsmt3r/fl2gxPPhAN5eJheV+
0cf0fYkQO9vXKueZeNd1uNDK2ZfY7hM3Tytm6VlQxR5+1pcYP1vBs/kyEyvO
V7WU5PoSF1M7mL/LWPqzt091/edLGBRNqY9cYyJ3xVz030e+BFclz5meKibq
3KXmKg/4ElinEFJ/k4mznR7bQmZ8icAW3dzSO0xM2zRm+HiNHyHf53szpZ6J
z49XSwiI+xEjH3O7Ah4w8dK6pUS3HX5E4dd7Y1bIxF3n2a4/1fIjdJffrDrW
wsQNR/jO7bL0I9Zz/pHY3c5EdptYhTI/P+KhkJSy9FMmhp9u/E882Y/wo6rp
cz5n+a2Lub7osh8hp2jjsfCCNT+Pjp2i1PsRw0Rs4vvXTMy+ejP9Vo8fUXCi
vOzJIBN/uX3rPTLqR+iYtcOtj0wcrL1L+bLsR3A4T74t+szE1b21qel8/sSD
gA2LceNMbFn+T4qQ9Sd8YuV5vaaYuGLu82mR8CeYWae2ms6y7lcY/VRn6E98
vOSjpbHAxN/vvsmddfcn/gfLf4Nv
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
         LineBox[CompressedData["
1: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
sJRyV+1nKpAkjR/V7hRBkxsuKxPlVLitEfohQUUEeVunow+ICt1mPyZcDoqg
hsrma6VlVDByFpM1OCyCunkaSVUlVCgKtLLabCSCmCr9b7d8oMKOtKTw8VMi
iPy2LWiskArh5X01n86JoO86z5V5C6jA1CnPFHNJBHHmRGkp51Hh+uJ1NSdH
ETSx0ybcMocK7SLvnSi3RdAbx3tCge+oYKA8lyziKYLiIvbE/19Fdx4PVRvF
AdxaUZR9LMPsM8oWJUu5SIRSJJE1bxRJUom0SMpYUiTJniyRpSih1CFCi0qK
okiWSIRCKd4zf34/M59773Oe5z7jN5ejtpRL3LE2eP81XBpMdmZLzhVzCeqe
k0troqVB37PE0biIS8SF122IT5AG2siULbeQS8ymLzjulSINKXff9b69wSX2
VlmV6WdLQ4S8yw9OPpd42xb3VaxQGjL2rPc4ncslTH+0Kvfelgb+wHFS93Uu
UbpYbntFlTRo2Pjzm2ZzCSW2c0x0LdbLwoO/MItLRJlm1ro1S8NKwYX8cplc
Ysr1y7T2a2k49kx3iJvOJf4LYWssfC8NfeL21+d5vy+duG93Z480uAlskQ9N
4RLrbpWmlH6VhhL/zNWzyVyi8NnkqzM/pGEi2/jLqStcQm5wzULHGWnYFVss
JpLEJSIEjq9T45MBsfGurKRELjFOhkN8i2TgxPN1UZxLXMJNX6iwbakMiL4o
L38YzyWe2m/suSEnA3Njl8ScLnIJvYBY2RMqMlBleC1iOo5L5MS82mTLloEP
SSILU85zCYl86TNMTRmIrvY8YxzLJU7WOVb91pWBT0T+1+FoLvHtY9rYCyMZ
kH6iw7oaxSUcf/cws81loHRl/QprLpdokGa6BNnIgL3gwSG+SC6hreWTYOUg
A1fqi7ZUn+USmdbFTcpuMuAeY7LlaASXWLJnfG7CSwbi423erznDJULCV69u
3C8D2z9v6J49zSUG0kP2pR7B65EetnscxiW2VdVcO3BCBhawN7HiTnEJaOPv
WH9WBq7vbLZ2Ockl1H9sECedl4E8NZEK9RNcImVxtNlIIo7feXaHwHEusZDd
cgzSZMBt/i3jwzEucdhU8nZijgx8L5RadjeES3x2dRjcWyQDBTkHxS4Fcwmb
kBTyujsyEMAeXXb4KJe4n/hpm8QDGbha/kTcMYhLcG7Rovsfy8DO/UGzRke4
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
ZFn64kO3KbDSaf/UEXQBPGK53qXAUn2fM+5oj5bPJhZVuF7vZa+0RMt2Cbqu
rMH5bvnJp4N+McQMVqylgEm9wbgS+sy0xSXhBlx/rK0CC9EGwr4lY00UaGhZ
tmp8LJL4IRnb/P45Bd53OZ7rROdTSvoev6LA+mqh3w1oV41X88VtFDgvNx5z
Cy29dkIhuYMCjiN/jFLRTy2ldcO7KPA0aF7iHPr0Dl1bvx4K/DToEjqIXuPl
6OfQh+tL4ICcC3o08Fik8Ve8Pz9ctrRA54SlZS8foUCUnGaqNnpn3MMa6R8U
yLWRX6KMlkjr6ZibpMAvJ500EXRTgcDPr9MU+LzdxfrXaCRx8h5j6ZtZClhf
OyT/Gb2qwXx5zTwFqrocF7xAf2vduyFfkAqjQ98kqtDZPdEe8QupUPZtydpc
tONoUWjoYip8MEuLiEeL/21J8lpKBevkY99OoBtExm9vkaKCTBM3wBcdKif1
Ql+OCpt/5UvtQGszV3+lK1LB61RV23r0V+0dguIqVKgWzCzXQmcahyjP0Khg
6mpwi4zebpOq38uiwvz1/U9F0UtcauyfL6fCCTVFgZnv+POCT/eBCg0qREUy
d/SjQ47yx2RpU6Hw9IHmVrTmWXpetC4V0mldjoAeSNhQe9iACsrFNsIl6LSs
PV1uRlSwzShsSUVvK4ma3mhKhS3Fb+5EoUUe3JTUMafC+NPie0fR0PxCnWxF
BTaV3O6FDmof27jQhgotkguk7NFq/RK7x22pIG64eZ8p+suEzqnO7VRQ2N/e
rYVO4XNIaXCiwv3yqAAV9Fbx4LulrlQQsLUki6MXKKW8urqLCo9qZvv/juDP
J6oPvp3xogJRcO7pN/ThNZ8W+PtQYWbm5dMP6OUb+GiO+6kw3Fgz0IzusaOt
Mz1IhWPeuspV6CseZo5qR6iwfCfl4A20jb/3IdkQKoCLZ/cVtNBxbhzfCSpc
cvmyNxJdHVVYMBxGhbuh0WJH0QevPK9vi6BC01LihTeakzva/ZBLhcxrX/Md
0J/Kls3eiKXC4Ih/ujk6EbRlL12kwr3uqmJdtHWL/coTiVQISbndwUILdAVt
2pNMhU0HjJTl0JVDyXts06jw6vPGkwvR/tPV4YZZVOjOq5qZ/ob7u/DHdGYO
FdRyQs5/RXdKzlcuvUGFrrGDa9+jEyjUtt83qeD2Kkb4KXqjxvqxL6VU+HP/
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
6P8B0GVs5Q==
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.03, 0},
      AxesStyle->Directive[{
         Thickness[Large], 
         GrayLevel[0]}],
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {
        Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
         Charting`ScaledFrameTicks[{-#& , -#& }]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->600,
      LabelStyle->Directive[{Bold, 
         GrayLevel[0], 12}],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            ((-#& )[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            ((-#& )[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1, -7}, {-0.2761489722060018, 0.5418979103429264}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->
       FrontEndValueCache[{
        Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
         Automatic}, {{{-1., 
           FormBox["1", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-2., 
           FormBox["2", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-3., 
           FormBox["3", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-4., 
           FormBox["4", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-5., 
           FormBox["5", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6., 
           FormBox["6", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-7., 
           FormBox["7", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}, Automatic}]], {322.5, -194.68070645621688},
      ImageScaled[{0.5, 0.5}], {600, 370.8203932499369}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
         LineBox[CompressedData["
1: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
/nraC0w8rTyy08AiiPgf1YWcUw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
         LineBox[CompressedData["
1:eJwc2nk8Fd//B3DrtXMtiRahQrRIFIX3RKQiKlnySaVNKCqVColwr/Vao5A9
ISSJijkpa8mSnWzZyb6vv/P99U+P52Nm3mfO+77mzJlHSVnZn77KwoT/cDIx
/e9vEfErH1OvcREMojHj9R9vONjdepzFlIuo381mjrAvpp1pNz/KRVDq98o2
Y3s5/rj97gAXIfrSX3wSO11Dm51Ljovg1NZR5Gn3hlrK54iLYlzElUEv223Y
81VKO/M4uQglytMfGtgSkamkwAInkX7TysgU+4iV9Jnrg5zEX6Nziw7YNgov
+gqbOYlMzYhyH2zGtOAj0QpO4to2/cJE7NwCOt+tT5xE9MnkpkLsNi/muOJU
TmLsRqNYMzaL0UPlzS85Cf5n1CdT2HLiE6WOvpyEFK8HD3+HN5zstrb4+ZiT
WPl9sVAO2zGtc3SrHSfxmdr2XBv7haOZ++P/OIkCC9kIS2ykUb3utz4nYfz+
HvkQe4Ci90Zeg5Oof7zIF4bNX02qu+/iJK66DXpkYStHHqhu3sxJ+E7dl/qJ
fc4q8/Jefk6C5tDY14/tpiA7R1vlIOSWoY610xuSp2N8Okc5iGPsfYNbsH8W
iEqodnAQxLU1WXXsSa+Ad4FVHMTlq0UBZthiRhSdfpKD0Mi9KnEPW1PctUkz
i4OweCTZGIR9pXvGNjyWg1DXks/PwPZJu7n2j8FBuPJ//v4DO8uxN1jnKQcR
asSzOIDdoHFeJvo2B/F9+Iw5pcsblin1+dOXOIg7+391b8WWrtY30D/NQbxf
fB9+GFsv8ntnghYHUfgA7l3AvmWl7rikxEHkWKW5umCHKuRwnNnKQfj3K71/
if1pWuFlqjAH8TRVUPgTdmdBwm4WNg6ivcwjpgmb4r2xyHyaQiw1F5+dw95p
FHL2XQ+FcBkXURPt9obT4jyDnPUUwullhp4KtlO3u/PFYgph21/9zBg7Jm1R
IO8D9oVP/+5if3e8kyCQTCHk+VM9QrBHNIb2Xw/Hx5906L7HFuKwqij0ohB5
6MWB39iq1c3nRR9QiEarTSZT2JaRpyZuXqcQPI+T4oX/esMzq/JnxaYUYj7h
wWZl7FSFw2Kb9SgE61pdiTF29XRemqMqrqfC9Ooe9myBIvyUoxBxj9STw7E3
eafUbhWnEA0+lW0fsbWMJK895qIQMplzWs3Y1uIRC7UL7IR2wVrTInZAt4C/
/BA7oSuu8GpTjzfkpHlLurewE2QuGaaJ3eK49r65gp3YsoGt4CI2k+aDo3s/
sxOK52CdB7YMx1gLLY2d2C6VH5OErV997VbnS3ZiV0a+eRn2nch2ZlU/dqKi
ga47jB1hZRIW6MxOrOO8e5W/1xsKFX7J9duxE5f1yNy92D3TOl80z7MTdqr5
B89icxcWGIYbsBODIukTTtiK3ip//2mwE/x5f1ujsE2M3t7X2c1OvH2RvoCw
ncW3c0dLsBNHG86c6MWO746KnuZnJ5hlZGu4+ryhLE1kr/4aG+Ex4Oi7G3vc
0e97whgbsV/K79EZbFFNNrOlDjZC69GXGCdsdQ7n4dPVbESAjsl8NLZV9ZRr
KmIjil1Tvb9h0yJthVjesRGVP7kNBrEzrP4mmcexEY88yvUE+r2hTsFC7V0Q
G7EuSe2xCvbidO1PTnc2grsno8cCW7Lw+MWLd9iIt4kunu7Yut5FUx+t2IiC
1cXzb7DtjA56C5xhI/xJ51vV2MHi2Ruua7MRirbmH+ew87p3ZBTuYyOcNQdU
twx4Q3ta3GHRbWyE4N6nU7rYbPfE62+KsBGfZp37b2HLawZZF7OxEWeYVdY9
xzbi4FreNMNKyHqwupDY96vdAh17WYl/9tpbBrCjIuelf9azEheeGC1TB72h
yMohd2sJK16vvUUOYg8oDBx7nMtKmH07Yn0Zm3/mwp/aZFbi/In+OT9s5cJG
B/nnrERXbOW3XOxz3oZs7t6sBM3W9GcntptR6fPmB6zEFeleQZ4hvD6Jg8Je
a1ZCir8pVAX7Z3duIc2Mldh2IvjsRezptN2nO/VYiUc/7hv7Ym+4l9x7QI2V
UDIfDMrFJjQlHgbuYCUORJzk78a+xhHO2y/OShRy8lbwDXuDXzVfrCY3K7GH
i1ashp0d6bkvfJGFKGvawXwNu8lqpeTfEAtxJdLcJRh7VeHeOZ1WFoLjtNtB
EnvbzMi/qB8shOYEh9oI9vHCK0+nP7MQMoYWD8VHvMHBu01EP52FWNrTt6SL
HW5knJIQxUI466776oj9RfznoSU/FkJ+v0l5PHZ3t3bVaRcWgi18/boabM70
z1apN1mItMmyxDXs3ff2zTJbshB8NS1Ou/95g7FmGt38JAvxL6sw6Dz2I46t
m99pshA3BfrH/LBjq19kce5hIV7fKA35gl0SKXTk4hYWQg3qXEawR6x8Gj8K
sBCzIh4Zm0bx+rSTxVaAiYXIe3BcxgBbdebh6rVxZuLvalyvC7Zl4URQYScz
oWbI8i8D+5n3je2iNcxE7uZe9U7sVKOuvJtfmYnzSsX1gmN4fRI31y9+x0zU
20jkaWPPd1d3bIpnJtIKbvbcw5ZI17vrGMxMjKjvtUjBPnIPUX66MxPPxAc2
tWLbaKq+2HqXmXiZJCTPP47fxxxZux5fZiZ0zJQ8DmPnVst+rT3DTGytLpe7
h90W+cpY/ggzUdTw38Y32CyX1w88VWYmAi47WPzBltsZ+Lh5GzOx/pXPoOAE
fh/PUAT2rsP326dUoovtWOgaT2NnJtoqJyYeY7/wnlXpnGEiDLafuvkOGxnd
Kj/Qx0TcWGxV7cfuE+/7L7CBiSiKkji7edIbeP+eH+8rYSL6Y5OLzmArpdd7
aH5kIuR7WNx9sM3uGawPf81EkIHfQr5iu2oWp/57zkTkbHo0P4+dyKGhqUNj
Ih6Z5mcpTnlDRXVOTZQTEyF+eV2BNfZ45M6r09ZMRHDBVok4bNHLifMnzJmI
bdqP65qx1Xdu8ks4xkSoKOV0Ck3j9WkmZMuSGhNhuMdaWx+bVsjz/rQ8E9Gn
p7TiiZ3h7aGbuoGJUFrK4EfYdUZLzcw8TISvsrPTIvb0vr6W7Nk1+G2mdkhl
Bv8+JfXMVo1roKnrbeqAzTArlhPMWwMhc85fadhtQzmGKGINpuwvvurHlnNJ
vG//cA1Ex5V/bp3F/RUIjZY4twat5TvPXsRGcR7fKw+uQYLz+MFobF7lu8PO
G9fgz0Z51xZssxIroZ3LqzBz2nOL2Bzuj9lptda2VTC1ydxigj0+dPiiT8Eq
vDph+iQUW91lr7dazCoEe+2C39g0AamMAddVKDrbc0FoHs8vjlr//MIqQMKe
7lPYkspMy7rEKoTyFZcEYduVjEnPSq5C9IgFfy12nlnHsSTmVfA1eZsvtIDX
z+FfDsbdK1C6zbH8DLaRS+Fz1m8r4L9gpxmGHSWQUZidsAKnj5iIN2IPxEX3
Xnq2AgNHx8+JL+L1T9mfV/DqCjBvWWH9D9utxHkf0lmBnUXEulfYP83sztnL
rAAT39PAbmyxYYunEhwrkPjN867MEt5fuZxIqexfhswIsSIb7CyBQ1XOZcvg
qcTunIm9HCc/q/BmGS+a4vHT2PrKGza30pfhhfI2lYPL+H1bwnXEx2YZ6rvm
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
ycw1A/6TK1lwJ459i1HFKnnJZqO3/KMskBEQnY8dXCWDb8XyDgxmQYuzTM0E
5xoZY7vZ421UNgQM7U/VklsjI04Efm9L+gBaZkc9Qo6ukcto/OT1lXyYLTb9
r+faGrnuor++8GwhpO6zVlHxWiN3Tn49fUflK1jGOfF7Ja2Rnt7zp7W5v4KQ
AL2/4fsaGQp6KZs7SShxjkSyPWvk2/GHrV1SCDRm6vS/MDOhJ96PdG8+KgLR
nefzrwgyIXOuzrQHxiUwbtW7nU+KCSWcPM7+17cCKiJvBn9QZEJ3nTkiLwj9
gsTqmdXzBBPqL/kgXnq/Clw5XG0pRvi4+uUqzw1VYKZJacq4wITU9/5oIRp/
gdK9gCOm9kyI67eOlJV5NfCmi75bc2VCpyxP/FjorIG+7pjNKQFM6NJUOfdo
SS0gcVkfoxgmZOzsmzRbVQsvjDJn598yoXG61mtbn1pw9D5wOa6ACZXFWTSN
vamFk4Vk1bFKJvT90DYJr/xakJ05qj7ZxoRCF8cv9mTVAvPO6pQXI0xIxtcn
7LdbLbRama3TXmZCGV1GJlTVGvgQ2fl0mIcZXesXU908WgmB1dajIRuZkcD8
xmmb3Aq4wTFxTl2BGWn3HhLRu14O2poPS3sOMqNdjWcKw5tKYfM9ZmX/48yo
IlHVs/ZnMcyl0WNVzjEj0bJus8ta36CmW5Cv/QYz4hHcvoMplYQ08RcPvR4y
owNl1d1e1/LB00i6bzedGZErLkv8qzlwwTv1dGMEM+JfF/pgH0c2qBUqkU9S
mJEbR8PglbNZIDTzSUEujxm59Jukcs1lwoiCdkR1KTPyfLDZ8EljFpRY/WB7
2MiMxGQfBzrnZ0Ns5JnbUv3MKO+waseq7Ad4VN36p3yWGbHQG9rfn/oIxhxX
jt+hsCBZxz8zUzqfYLfmSO4GURbU4BdXbE1BwHnPceu37SyIIe/5VP9UMXSn
LQfaqrAg55dCL1sbK+FL97NlYR0WlOU6kB9QWwfh4nw3vhizoNWkcynie1rB
wSis/soVFpRwbZ7vZk07HPferMXnyIJ+SlFOfff9A1sLkzI+eLCgrobHZhpp
zbAyvWujZQgL4uvo1ivZ0wiNCrnelAQWZGGf/VT1eyO8s9KczshmQeeEijvX
nreCb2TJRdMiFpQf1pC6v7cTrlafrFyrYUHt0nHhs1v+AnA0qqV0sSCz72+c
Tc93g7jmhWSjCRbEc/SlcYFQB0w59gstMLGicMODSSLJTVCZZv8kjsqKJA54
1yf//A2vu+eGj0myInIX6/qcGzXwVNzNbHIPK8rTMAms1qoBCyPO4hfAihQ4
C8odNtSCijdjr7YhKwpZ9/DIFtta4C8Uixm2ZEXG/9FgKr4GBqZjuUNvsaJv
4lJDYi9+QZHCjgfqrqxob+iBjYGZZRBl9e5vjz8rcjmVdSO28Bvcj1Qz8o9m
RdLu7tk/ZREYVX/9ovKWFZmfOOTVoPQZ5DmO72j/wooW3uw6y3D/CGyatWFe
P1nRniT5XR1VOdDueI5lTxsrmj2V+16+LBvy0rpvNQ6zIr5XOqsuUu8guNum
9ckSK3qUp1+ldSsT7MSnjsrxsKH9BfsmglbSQdfocU71BjZ0rpPc8KQzFbZ4
s0o9lGdDquSctTf/G1go8PWXOsiG2Fluv7ng8Rp+Twsvlh9jQwI3az690kyG
twpR1+6Ys6Gnq9+DltSSwNtq2+8NN9jQqkzc7MWziXApMh2+ObGh0UcLNZsf
JcChauV0WxobqguvdLXPjId1HAViIhFs6PzbdxdG5+NgTEPH88trNnQr65br
BYM4KHesnLjykQ2xiRhvFU2NhYS0s5Z8pWzoRt3anx6hWHDp/lPxoYENVd/W
cW8RfgWm4tcOWPaxIVf1Tc6rkjGw12g0gTLLhhqUeWw09aOB2/s+NZOdHbEs
NR7PoEdBT8Gqs+k6dvTdvuGRTvVLKJz2Glzbxo44D9xhPir1EiIUBExSlNkR
X/U9iy1uL+CO1fMioyPsyOpZv8q10UjQj9yyZ+EMO3JMQCd0rkeCTPXrl3GX
2dFfAZWPb/5GABOHIufxu+zo3n6C486VCGjRyHOcdGdHN7dd3rnl33PIcSS6
XgSzo8smzz4quD2HgLQyA+14dsRra8NjIPEcrLuNPg2/Y0cSdW8HK4rCQUu8
WSb0KzuqM2R4frAOh01Gl0LUa9iR66O+v33UcJjFt9/TyY5CHJ88ECsIg+qC
23b+4+womTEa+PNmGKROLzSpMFFQ6PfDtj3SYeCh4K7TLkBB1poNnkJtoXDe
ijvbawsFGe4pmmKKDIUDkcESe/ZQkNvWweVz5qEgWL3Bt1GTgroThWoaNoXC
MCVh7slJCso75KVi/jcEijUUrshZUlCNx6mg6fQQeOX4vrr6JgVpQwvcfhgC
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

          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.03, 0},
      AxesStyle->Directive[{
         Thickness[Large], 
         GrayLevel[0]}],
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {
        Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
         Charting`ScaledFrameTicks[{-#& , -#& }]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->600,
      LabelStyle->Directive[{Bold, 
         GrayLevel[0], 12}],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            ((-#& )[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            ((-#& )[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1, -7}, {-0.31137014336024166`, 0.5976517621976105}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->
       FrontEndValueCache[{
        Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
         Automatic}, {{{-1., 
           FormBox["1", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-2., 
           FormBox["2", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-3., 
           FormBox["3", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-4., 
           FormBox["4", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-5., 
           FormBox["5", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6., 
           FormBox["6", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-7., 
           FormBox["7", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}, Automatic}]], {967.5, -194.68070645621688},
      ImageScaled[{0.5, 0.5}], {600, 370.8203932499369}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
         LineBox[CompressedData["
1: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
DJI+Me0NnmZ1qhfuiKI1i0y+OXgD2em5RQaIYtWVNEmvQm945/8tOPihKP48
KvQpw8MbsmN25dl2MvwWzLtyS80bjmbJXtd+Loqv9l/y/sbjDX/KjJ/ueymK
iccoQlKzXtBcF/RJuE8UMzJnL4Y98gK3W8VrWwZEkffc4veXpV5AetzOt/BB
FI8YK87L+HnB29eD+4aGRVHhbHdhuZYXZIz+PdE5xtBr/KaLXdgLjsyKeDRN
MvKplByZv+gJv1fVksq+iOLMVXq58HNPaNzqeD5xVhSbyrbz3DjvCc48SXd9
5kWR37Z80DjUE4SotQOnlkTxcrHeu7/6ntAv92z+yG9R7GO+vNpE9YQ01Zkd
UmuiKOxF7PP94wGq+jsleNeT8VPQPV/FPg9YtpDRWL+JjGkJA+dYrnjAdTcj
m5mtZIwqM26cjPEAx5DA8Lc7yHhGeXNut5kH8CcWFSIbGXerDsjclfKAV3lt
jVe4yBj34Fb0zY0ekFz14XkBHxl//Ljq1vbRHVTq/0xGC5FRnunJ6KMWd1i8
I7zeTZSMs4u0vg9p7nClS1XImErGtwVr0r/t3MFuwF7xsAQZT6imT5KV3IF3
IsGYvpeMSf18kyas7tAzX+PNJkvGnRkbhXOm3CCBqSt1dR9Dz8itqP77bqC8
82v1hCIZ+1xrF0WL3GBeYAe+PERGoweW/qFeblArIT3YrkrGUWfXyQENN7A+
YLh0UYOMyWWeqqqCbsClGcCWdYyMrsd4fZsWXKHbqHBPqC4ZWUbpTrufu0Kc
7S0tewMyJqo67aq/4AqK3u/tdU3IGFt02Vop3BXmIlajFMzJiESf+gtDV6hJ
FTpLsiRj4PX3V90kXMGymLjBYktG1uPtqTvXuQL7JbuXiw5k1DWN6r7zzgW6
muO/DLuQse3tYUe/RheIwUsbuzwY894iatIpLqDQ00lq8SFj61Fj4582LjAz
OK1cEUBG7QXu9IcHXODC9Daz5BAyqp+88e7sLhc4tbzX3y+CjPkxsXtCp5yB
daNBpsUZMpKqRoOtwRmesPvXasaT0fEDUatb7AyRpIKH0slktFHga1L3cQZ5
qdZhvnQyXoiZj1XVcoYvyu9+bcgmY5eM1bajIs5Qdfw352weGSf0lg4bLzuB
qZmgzLsiMn4/6czi+tIJdjip6HSUktGLZGeXcNkJHvnbOl+rJOOXzkvytWec
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
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
         LineBox[CompressedData["
1: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
1LXwCHptJ8u5Khz3b3+ATxudMuaZEn+BDAdaLt3jQy8RKmxzSSRDuI7Jk4aF
mBdYk0s2ppJhTq5uTTy6X19zs8htMpS+s/i1H21uF3L0Yx4ZAp9rkOnoiqAn
uSX3ycDhPLk+sgDzQtKi/ugKMkwKagWXoJMKTSQdnpKBz3O8MBS9sPnCdvUm
MjSLaOuZoX0+vwhb2kGGlEvOirzv471bIF7e85YMrjvrPT/wYV6Qsx4r/ECG
LO/SRXfRJVrXmRHDZBhripkMQtMs+22tf+D4zqVrG6Mv+jISlP6QwWvXzlei
6L/R7g18C2RBu/Rn3fv5SMIjO3+uc5ksXH4xJpiPfl09vj53pSwceZN+Oxht
2Lv+8CmSLLy663HRBH3vd9AtC4osBNXcbZFAy4lXdTE5sqBC6bAbmIskolUW
iMyoyEKy9WaiGD1tamzUqikLMdH7joShnV2jTmQQsrDKOnrSAt1+tuVeoIks
LPykV0dF66aJDpnulIXlDUODP/5FEv+V7ZVT2CcL7jLfLZ+iSZ3X9kza4/YO
IJqIjhjrjap3lYX73A6yM3pCkAapPrIwNXHZfwPanuU65RsoC072pyWWop/r
5ykZnZaFjm98/G//RhJadqNOpPOy8IGUtPk/dHaQ2rWRWFlQeFRYfQq9Kinw
BVyWBYe/zy/uQocWViy+nIb9sXLNoaNHmuZ0PLJk4fPF6aXTvO9lfjbw33xX
FpaV/rvXhH62IPKO6ENZKJOfvnWD931Nueb3g5Wy8MLmULc/Ol1rhURFLW6v
U7PfBC1succs7rks1DRfVZBFn/BNPuvUifNl6rbmx0wkMRTdU6rxDvfHKT75
DG2ZrTAqOCALZ5cuFLuOrq4+xOj7Jgtvi7q/H0Er9+bYFE/ifMjULd+KTv39
7VLkrCxMW5v6yqOXiavW2y6SA+Gsn+K//kQSx1QC/qkIyUGK5c5/zeiPpmXq
/GJyEN71mX0bvdP1r8cbGTlQe7g16QS68qxeej5NDlZGLTLYjVZMi3gduloO
FOezVVejr5Q1LN+rJgfv22scFqIXdi43VNwoB9/qvrV2/44k/MZ2Bf/Tl4MN
d4pOFaPfCV4ubN8mB+6muYdj0Kast4NZFnIgF+p21QVdoi8ne2I/7l82bBGB
Ztgd3G1+UA7yv1/MJ6EvBWVxaR5yYFjFSZyYjiTmEocfT/nJwU7TwZLnaM/C
tb+aguRAYauDVA76TdORNTdD5SDedt2Ds2ijzw8PHuVif0jTMQfQ9xfMJJtc
kgPjf9tvaaLl5XRbyVflYH1A2/gq9AWtMP7xm9i+FoWQ0alI4veeZxtrc+Tg
xqZuognt4it45GqhHFi/vambje6INs/xKpUDn2uix8PQRHZCr94TOfDc1f7F
Hp1f/VpMol4OrPLPJuqgpXtlTIdb5eCH+rNAEvr8b/vQqtdyMG5omPDrVyQx
KXa7JP69HPAJ3xjsQDuqDI24fJYD0/iTfvfQLaZr6BtH5cAv45xaHHqjq+9+
kSk5UO1zXOOFzjlbfPHjPzxeUYmNKVo8bbquZLE8+JqpAgcdWqbzN1pYHr5m
H7ddih59eUbNQUIeHpzVVPr8E+t9rMZdXU4eYg+Q1erQDYLLbi5lykNh0Auv
TPR61vZXPUry0PWK7104OkP/ktC99fKwX9XuzCG0iF2nfsQmedCdT7AyRJ8M
IgVZG8mDjL/FQTr6S+KBAqXt8hDmu/XmIrRVYfoAn6U81CRwVg5MRhJPmwZk
XtnKg9Hq28W1aNXPHIvcQ/IAGzyjstDXF3hHnjosD5LOqvHn0QJyRVUWR+Vh
XjS3yQ0dqPVrkhkiDyMm3A3b0J/2aK+eCZMHz7Kw9tXoXb6nHFuj5cH58Y4b
y9FV0dVXMhLkwd/2ZuroRCSxOntxS2CKPCzXUG5sQydXb1tkliEPB64WsYrR
/L2x2gp58lDr/aH4MvrI73bfySJ56NcP9AtCvxeTzK4vl4dOXcUDtmgzFZt3
qdXyULLmQaAuusz0xiq/RrRn+xMqmun6catRuzz8ntbRXIxOOMs6Q3orD8/c
Ct99+YH1ft3z4Ui/PNgODhU+R3uVFXyDL/LwRzXj3j30m5cT1Mvj8vD0Rur7
JPSWMQ1rj9/yYCiRoB2Mvi8YEreZTwGGhIyq7dAU1pNa0WUKEBvld8wAHaO/
aHZwhQLsp3ftZaNnDpisq5BSgNczmk7L0a5BF9ziFBTgQNWelB/jkURn4os0
J7YCVNz69u81Wq9QrFNDRQH+uFXHVKILmvYJCmkqwA+r5C0ZaJnPqXp9ugqw
dJPqGi46ckF/YPEWBRD02LnRB/1TlnE30lwBwovLjlqiD2q5f7K1UoB//qpd
G9Gte/KlVe0VwCk0xJmK1vEd38nvqgCT6g7kZeg70evPv/FWgBbnW7OjY5GE
RHZQZf4xBdjhtmzxa3RYdeVE6CkFmBey1axCj73jU9x7TgEu3HBMyEQf+G3k
oBirAP4D/RIx6EaxqMv/krD/5Mzqo2gNlZbm9usKcHjG/7It+rap6MLsTAWI
z5eMN0SvdN2rdSIfx+Ol9YM16JNnr/mYP1CAkXOL5sXQX6/3ZtIqFWDn9g9+
f0ex3suoPVM1CiBDqxIYRNe+dBFtbsb9HXVqbEGrjuWa3HypACS5tMIS9A3B
0VNHexRAyVO78iZakKX2wOSTAiiK849x0UH6gV/J3xQgXb/JxB89cKCCMj6h
AB0R+5/ZoncHzVnVziiATs8ZT2N037ZbW7YvoMCpfKH1Kugr+2oOaiymgHRj
M00avd1l8CRFgALPPC5qLEIvOrr0qqAwBSqVWb7fv0cS5aGKxT9XUmBUzvF5
F9ovzqz1vTgFVt8WNn+KZl33Hm4gUcArbn4yH/0u9yJ/sSwFPMWWPk5GJ5YW
KaRRKGDf8Ou/MLRp3cuNkQwKnMxKq/JG8738tfcIhwK9i9onrNEl/VJHbJUo
cOe6k5kR2ntUO8ZYlQJaXGa9Cprx1zZHZT0FTDZ/dyGjuwVOP5XWosDmS7Hs
pehLUum9izZRYO39bqHJkUjChPn093eCAmtUc1f1of+pDYi9MaSA40SLTjP6
gd4SlacmFNinIx9ZivY055jmm1FgY47vz9to6gFTlys7sX2rr4ZfQnd5eIWG
7sH9ifmsP4WOOx6X6rmPAnb8DUs80Ubn7pVY2lJA5c/JGSv0bEJHu64DBcgG
ziuM0EXpP0c4hyhQErHXeB3avUBymZgbBTorONfl0fKVWvR/nhRYqlYithz9
qtFGd8iHAhnRr//78w2vV10n97f7U0C/1Ml5CG0weCPgUSAF/s2qb36F/j0B
F7NOUKD5O12jBl3A9ynv4mmc3yPLdxahXUQWPwsOo8CByvrIm2hZWfaHQ+cp
MLRLtT8W3aG47e+OaAosWkC1Ponmah6W0oqjwMNvAWOeaMI4Vo2WQIE3J5dm
70dP7S7csfwKBc56PQjZis53bHefukaBoMf7/DTRTj6T4f1pFHCqbglnoaVP
StxsukUBU5HJhxLotijNigdZFJDkZi5ZjD6fvP/VjVxsr82TYz+/RhKbskLG
uXcp0DVDWTSAnryfJnS0iAIvGDkFL9G58IRl95ACd9+pBNWgHVs/6JuUU0DO
+5pDMVry3SK7dVUUoLo9db6NbhlmBpGr8fi3oiIT0eHTJomL6yhwXbO1Phy9
cbFnwVgDBfSifZkB6PFVMY1vn1OgZvOOdGd0DqVgoKaNAj+1TbT2ou2U2+bv
dlKgMHfzd2O0+KYJmatvKGAws/KJBrppm7hG2DsKvOq+dZeNPrtPw8KrnwJ/
dNrLSGhNF2svqwEK0HeG9gugR/1PROp9wfo6f4kxOxxJZIZez1g9QoGKhE8R
I2ibuMdV4uMU6HGxXfAeLXq9/83cJAUiVLqvvUA35C78+WUa/77tDcyr0adL
GStezlKgLi1Qvhi9vm7L6qp5Cmx5s18wC/2tw904ZxEVdq9/IZqMzuiPdoxf
SgVRiYr1UWjr0fyQECEqlEnP+YegRf62XnFZQQWq3Jnn3ug6gR9FO8WoYLyB
qu+IDpESa9GWosLr+w1tu9FqzA1f6GQqlFBsQozRX9T2LRJRoEK2YYWeFvqm
XrD8bxoVHkm3Utag95qnan9kUUGp+wRZHr38QJXl89VUCP+ZpSqKfurR51ui
TIWglRsc+dHBxxdcSFejQrywSN70l0hC5Rw9O1qDCtELpUS+oT8nGFcHbKSC
wGaNmPfo6+lu7+x1qSCmv5vRgd5TEDW91YAKQo0Wr+vQApX/rVLfQoVnteSM
cjQ0tqyVM6VC0v7kyLvowK6xrUvNqXD8w3/nb6GVBkWdf1hg/7/p3byM/jSh
fqZnLxXatXXbo9ApfFYpdfup0FxzQfY0epdI0MNCOypsLRY9649eIpvSdu0g
FXxcyuZc0VWKld/CXajA9HS/bIsO0Hy/xMeDCnnhgsa70KuN+WjW3tje7Ehh
Y3T/btpmgyNU0JhuGNVGJzsaWSsdo4JTa+kXZbS5j+tRyWAqnCzePEtH85/k
xvGdosIOByOWNLoiKi/3aygVXlY89BBBH0l+XtsZQYX370PqFqE5WaN9j7lU
oIif1f4zhOud+ytn78Rg+zsK60bRSaAmmXiJChyY8BhAm7VarjuVRAWieD2r
G73wXeB2t6tU2FLoOPMCXTZ81c3iOtbX54Of69A+0xVhOulUkC2lf32EZizu
TWNmYvsL4xffR/esmi9bcYcKH7jJWnfQCRRq55//qHBwNTX8BnqrsuHYp0Iq
OOfIDCah53RcBFuLqWBL+NlfQD/cFsksK6VCg53I2Fm0175cvYxHVGi69uFK
EJrm0mwb84QKMw9f7/VFv/H/HhhYQ4XWm91rXNEXQ1ckONZTAXy7SXboLXHr
7po2U+Gae42sJfpv6p6G9S+ocHU6TNMMfT/32Cf5l1ToLl7iYYD2KE2eW9ZF
BRX7TUXaaEpdufRkNxW+9ouuXId+3dGzvvc9FSJ2HjvHQcf0/9tZ/xHr67Ol
KAVtOKpwuOgz9l/wZrEUemZW/3zqVyqsNTXwWoG+J+B869woFTbYrNVZinaV
Ol/pO0GF06SdlPnPmO+Zd7r2T+H+oq+Qp9Gdak0ThjNUqH83oTSGjtYbEVae
o4LfoT2WQ2g9cxFF0kIaOF/Lie9DT9uqGi1cQgNDSt9AF/qux26HEQEaqMPw
jja08/GAE6+FaZDuVvq8AS1z7splEKWByBqtg9XotoSye3kSNMgzOiBUgY5M
725OkqaBl7h48320bsHfz6flaBCssCv9P/TPR/ILPag0sFy54EImOq9RT24P
kwYaJVIX0tAHu5y0NivSwGDxufQraNJgxB72WhrMS2xsvohuncj2EV1HAwcm
RygKHcHXGDW7Hn8/Sc8xDK0j8i1zUIsGZUMBTSHoCbIwvNiE/Wko2XYMfUdR
padcjwY9C373+qDtNS2mbhvRYDZ8daQ7WsL4qGjcVhrIH9QzdkI/331ZKWg7
DeJb15AOoMMcS02cdtEgidE3vxet5fPWabslDYp6t//diR4LmT2lYU2Dzitu
wqbo7Ci5a5QDNNBZQVM3Qh9IJh4IOuL4cXy9ddGrsg6++HmIBqID+pVa6Mb7
4V/fu9EwL8QqqKNDIWtx42Hc/o9R8lq0Rms9pdgXjzdvS+egR3qGddKO0sB+
0bMaGjpjWGhf5HEaRN0NDJJD759e638khAbMhoP6JPTKxbtibc/QoHtziLwY
+tkq/zvG4TSIlS5dIYI+SUmqUYnE7c8LSAig1ZVL3ktfoIF0m6syP/qrzps/
iy7S4MLBGtv5wUgifduM+GgC9rdOLG0GbbVPVvXNFRpU5myf+IUWdtE1e5pC
g13tTrY/0LX+jq75N2ggqGT2ZgR9IjTs7JUMGoTDjPsXtGpc5vXQbBrsLHEV
HkAPpT4r9cyjweSeiLo+9I3cLx2WBTTInNsa34O2LBUc1b1PA+GNeX5daME6
JQHFEhpcupN26CW6usOcIVZBgyuC0p4v0EH9fsS/Kho8110V0YxWHk2wGaqm
waj+maJ69MDsg2PtdTQ4q2w1UYNOFei69KiRBk82xW4B9G6pP/9ltdCg4qlM
QSV6GZNcf7GdBo/Vf3HK0Y/VNn8MfkWDOxSx0ofoY3oO/w69pYG75mHr++g1
5mdJ5r00WGP4c3kh+qPtbXWtDzRYopTV+R/6qkedOW2QBm+nAgrvoM2PD3ks
H6aBRZ1NWhZ68TmBc1MjNGh6teNGBroyYU16/zgN+MKN799E+6fveNT0kwar
jbTfXkdzCnxfP/hNg4Z8ilgKuu9R/I8bf2lg5jXpkIy+0li8PIqPDqfMc58k
obd3vWIf5afDm40b1RLQCwenDeyW0aFk/Y3Si+jyCWl7k+V02GLbsjMW7ce3
KXjdSjooDz+ZiUazROyTyOJ0yFrvU8ZFvyOHFi4m0cGisI17Hp2omNE0RqbD
ss99hyPQppq1g28V6PArNOlgGJrP+DNfLZ0OWoZDHqHokt3LZAvYdFgk1B5x
Gu3tuFrz6ho6uLWb3j+JZvhs3x2mQofdeTsmTqC7Q3y8vdTp4FzbYRSMvhR1
iWulSYce95e5x9Emyfdv6+nQwWp2KzUQPZfZ+Xg1QYeNM0r/BaAf3J96K25I
h4F/QSZH0Z5A+jW3hQ4G5aypI2hK68aVw6Z02PpHpdQP3dVzYM1LczpMZsZF
+6Ljhk9vqdpNh+CqTX4+aKPp9IM5VnQAu/Xu3ugZ/pqT8TZ0KKvw9fdCF60a
TA6xp8MsbTjuMNqdsrTYxQnbO5dS5YmWV1Zs3elKB9W2M3Me6E4ds2FtTzpE
qSVY8Hxhmzc/w4cOnd3PS9zRBvsuKoj402Fz8mplnn87F238fYwOMTuzS93Q
Bf4v934MRvPr7OHZJfSX3/NTdNje9omPZ9k4qZiSs3ToG0wFV3RHqnZO+jk6
XIu3T+CZm2v7NDqKDmFa7ECeidJTvQGxdCi1/nGY56nam7/t4+mwJqrsKM/5
HdVi2y7TIS44KJZnp/5PyurX6GA8oVTOs/ToYlO5NDr4dbZP8dw2y3ZZeosO
D6QPbeG157yAaeiPTDqYdr7L4XmTlFdqzx06TCnrkHn9m2TEldTl06HK60Q6
z7lq99oL79HBfPiKJm98HPU6Rq49oIMTKbafZ0nzn0sjyuiw4fz+VN74PreV
pPtU0kGs67cbb/zDPbR0rQHnr95tC29+Nh632W9QS4cVSrc1ePM3HnEyQKmB
DvE/crR485udcOOi5HM6FMge3c6bf7t0yONro4NS0wJ/Xn2IF3ys+/qSDjeV
LXJ59dP0iP9DZxcdWq7YT/ijQxtZfx/30GHYlb2DV3+aXVulcvtwPsi55cfQ
owOeaomf6PDe5IMmr34zJ2J2nBrC+r7aUh+EtuErdHf7hvXcdtiDV/+iIu3h
FmN0yG4ql+X9fTSQJ2/oTNJB/8TDD6fQpxUlKpjTdNgxfKDsDHq9puarFbN0
KNcuSD+L/ma0f/zPHB2eZeakhKMzdocIDSxkQECISfY5tLVjGqt1CQPEWDE1
kWgRnyf6ZYIM2MUImIhC14V8OJAhwgBv4Tm1GPTJqEVBMasY8O4i51wcWi2Z
mRgoyYBbRya+XEJ/yTQpcJRhwNuLNvaJvPP7fY9GU3kGSPU5DF5G74ULA+tp
DJA7vOD0VfTy1rvz8iwGzFjpclLRT3teyAisZsCCXomBNN75ffjHhsm1DLhh
HlmUjlaZFrPoXceARPGES7fRn/k1vOo3MKC2YMPZbPT1VdaRRdoM0HxwJDyX
d36nnMhI3cyA+Q7j5Hy0gPL1qnP6DMhoK6rkna9B5/EbX2MGWEU9nOSdzwO3
9U/u38aA7vFdm0rQSvsWrjDawYBrohFXeNeDT86M1coWDNgjvHNhFTrFf4sx
aS8DPsjeP8O7nuwKdXdcuJ8BipfuitSil8RFh4wcYMD7Fv1C3vWoKjX/ymtH
Bqyy9D3Iu14F5LYWgTMDKko1mLzr2erS8ed57vj7mVdnOtD9tau+JHkxIPL9
5Q+v0ckd6xed8WNAn65KdzfvetJvJe8RwICpEpeB92j+0SDtPUEM+Ga+ke8T
umI2xXLzSQZ8YRasHUIfEajyZYdi+/yfen3jXU+k+qJFIxgwHhpUNYZ+z1iQ
PRvJAL+SdoWf6CQ1evXgBZy/uBeJv3nndz3jdy8uMoCZclT6H3qBudt0eSL2
J+LJvQW4niizjVqVmcyA/csf7l+C9vH4b21cKgPOCVqJC6EZx1u2Bt3EevPO
7F+B7okYO+R0m4H5K+OxODohQfTM9hwc71iLAmn01nT1FI3/GKBz/UGhPHru
7t6HlEIGPL/X8pSOfvjoeJtgMQPc194c4q2fvBqvfftZwoDjF9bIK6NpXY+W
9FUwwNf2mCtv/fVmoJfa+JgBC43PAG99dnFiflPxU2z/0u1KvPXbFoxrac8Y
cOf4+1xD9F9ho6ORTQzYEKGtvQ19n+wad6SVAebrHLvN0R6KeAbtYMBAyt5Y
SzRFM6/W+DWO70/Z3Tbo10bP+1S6GVAaWc5xRMfsHp2Rfs+Ag6XKoq5oQ8eV
kvwfGRD/94yQF3rGW23d6CDW69A9KX/0vRDL7W+GGfCIWrchCO0aFej29DsD
wjzA5TRaNvlqWP4PBhy7kp0TgX6ZWZF25RcDNiaHzEbz8sL9d2Whfxgg7W94
MJ6XF2Dupec/BgwbLXybjJ5qoYxZLmDCWuNKpxu8vNBjIEgsZsJCODbHW887
DzszFQWYoCujns9b78tMn9cTE2ZCbNvvw7w80Mafa/tvJRNsjjdvLuflhVXN
gUPiTGirwJDHywuU7/HtJCbwO+RJ1fPywtoVdx/JMuEPAQqtvLygs64hi8KE
2xZT2q94eWHbnk8XGUwYvGnh+o6XF/YdmwvmMKHFvCvzEy8vOCdLOyvh8VJi
fn3l5QX/8vXmqkyofR1oPcHLC6E9O7XWM2GnX2rLH15eiP3nSdNiQs23ecsF
mLfupCqcX76JCe8Gc0eXoe1z9W9NEUz4KXYzZSVaovRQZb8hEwINB61J6Oe1
57qaTJgQYROmyMt3YR05Ew/MmHBx38nlvPyn1d8ofHMnE7os3i5QRY99/8aJ
2oPtDbopoIXOnsUC2of7F39F10MfEFB1sLNlgnZk6K6t6FVSu0+YODAhdNud
i7vQDYyAy+sOMcF/dPcHa/QZtSv3yG5MuEuNND6I1tAra158mAn3cswqPdAj
O7o/j/kwgWSfY+yPzrD9u6DbnwmJOrc+nEDv95CXqw1kwtxOvUvh6JXH9bQK
TjBhT+0Fixj0swinPVdPM2FFTzTzMvpkQoRPWBjO35jRcl5eV0/PjvI6z4RP
x6sX56C/3m3ItIpmwvSCZavuodMffX2iF8eEXRqUdeVoq8blPasTmDDwWvTQ
U7Rwl/KU+BUm+D4ZyGlG1w7sEp2/xgT7wfT5TvSJCX+l4TQmKFqbe75Hq/Jd
Nnl5iwkb9H8NDaGHhEudqrKY8PlTWtAP9A3y21M5ubj/tF2ys2hLxdmr8XeZ
8PGzxEv+L5gXNOUehBQxQdBi6jrv/ki1EfHC5SET2rkzwSR00O6DX3eWM2H1
3jWeNLSyY/jijVVMyEuO91ZCD3hnURjV2N7tGhEavPtBIfU6InXoaFqBHtoi
atjqdwMTPMIdvpmilyUL+X98zgRKxJTOXvTjzLWxz9uYoP5z/KYD737Q/Z13
SjqZEGllLeWJXgNHatLfMEFsm0ZGAPpjS+L76HdM0DqXpHcGfbXn4Z+Afib0
9p2c4N2PMh/uEncYYAJj25/SJPTi6T8q274wYf65WPxNdCW/rJn6CBNWJb4+
lYf2X6XrKjeO9f7e7PRD3v0giuPZpT+ZELLidAKg+9aGXf8xzYSw9OMVzegr
OpmlPbNoRcOp1+jt25511M1jfdp/M/6IXrjvy/fCRSx4IRKS+x1d7iwokLKU
BT/Y/yh/0H7+SowIIRZ03T+Zz7u/xwo1J3xWsMD+Ff/2leh3sX421mIssOlI
nyejE1MTjhlIseCIwIF6Nto098ElJTIL3Kb1b6uj+Upf/yepwILVGvaJBLqk
9vczPjoLfp6sTDZDe3fIfPzKYgGuDu/tQzP6N/3rXM2CoQSf3kPo7u/2pCfK
uL1zt7wf+tJsqHquGgvzYFnASfQWgdvmiRos6Dgu3sdF/5Os8zi1kQXxvrN2
l9EPGEMRbrosECoK/nEL7akmkG5hwIJLH1OvFaApemse6WxhwX8NPlaP0F07
drxmmrKgf8s8uwEdZ+v7Y4U5CwQcbEReoY084pfPWLCApBYr8BE9E1jMHtjL
gq18WdJj6KKIVwat+1kQyCnU/Yt2T5i2K7NjgZpieRDv/rJ8unRwxkEW2KW3
1UuiO+/qJMW4sOCY2SIlBvrCI7vCQA8W1Cx1yFqHNmg80+TozQL/jh/qBPr3
61uDpkdY0N7Q2LUdXTBQw7fhGAt0OL8u2aBdJgbJCsEsyDIPc3BHy/It0xQ4
xQKLijOGgegO4dW7J0NxPgX/bopAc8nbvXsjWJA/t3h7AppQ9OHWc1kgHZTv
l46e0rh0uygGxyNoLq8AnW90/3HqJRauJ4VmK9FOuzvfnktigceTD47NaJLj
1E/fqyx4dy/+3Vv0C2/SSpvrLJA4u9rnC/p8yMY1RuksSOx+JDHNe74QdWCL
ciYL5KP3vuQ9f5i4cvog6Q4Lmk8vzRFH52amn1yYzwLTpg+X6GjH+0+TRwpZ
8C395yU1tCQM3H9djPNjsytHH/28ZUkrlLKA47e4cxc6vIcznPeIBd2hDClH
9MZhU/7LT1hwaMdjP1/0+JSXwpkaFtyo+NR/Gp3Nf3GjRz0LdrdnucWh7VYV
7d3TzIJ1jyUW30CLU176bX7Bgn0dRuV30U1rf11gv2SBfrhRRBU6VEcqR7SL
BTOeLNcWtOY27aez3SxI2/rXvhc9amXbO/ieBWy+Nz7f0ZnOp36/+Ij1nNJ8
+R/axv+mWMVnnA+T4ZfCI5gXQquVM7+yoNfGUJH3fKoh9tO2uFEWdJqPXFZG
n05d7BI0wYJltVPSBHp9LjvUaYoFumePPdyJ/layLXX7DAvqjoa4O6Izag+X
aMyxoKKQrH4Ebd0R205ZyAYZPw+JMLRIf+GI4BI2bJEKWpGIrv3evvSXABs+
KNtSM9Ehs5O0PmE26LmzzB6i1QQkdRtF2fDw+veYZ+gvklr7iyXYcL+l9nMX
+gbDJiBNmg3fGGA9jN6rdvJipBwbnv2c/DiDXq53I+8IlQ2JZQHnln/HvLAD
6myZbDgpvk9PHh1k+7HfWJENWq8LxVTRKh78f1XWsmHVr8R5ffTnQJaUzDo2
SCWQ+C3R1yO2qvFvYIP/791UV/TuBM8do1ps+C/Nel8QWiA9xv3NJja8pRLZ
0Wi4WxD+VI8NMztlRdLQgY/abuQbsUFFfsnFQrRS40T5la1s+Ht3lSLveeun
1+KvQrez4fh263ed6JQBjXHPXWy45f/9zhB614S10F5LNvys+xI3g17CF8Ii
rNmwmnQwTngU84Jwmr7iATY0unnnUNAB5CcHxBzZ4NXP6FZHr1b8cPzfITb0
d99gmaD7NRYlDrmxoap3IsYGnWzELGg/zAb7NC1hH/SO3SaNj3zZ4Pk3Mucs
mt/RYyDrKBsmhP7YXkZXeF+Yv3icDa+FMlfnov1C7sqcCGGD+OFbYlVodtSL
Dc5nsL31AlLt6PdXfuwyD2fDtfFf63nPy5Myxby0Itmw8tNp7z9o0/sbImkX
2FDZUgXCY5gXYF/G8otsiFvxXJmGLmsJrppKwPHQqinVQPv0pL7pv4LzI1hl
a4ZmDFdNNqWwYTDwpYwjumeqT+ThDTY8uU35FYBO4F+4+mYGGzqHHn+NQm9d
xTCOymbDpecNszfQcwpbHI/msaFAZD/nAfrhWvcQuwLsb1q0XyPaSyf6isl9
NoymBXW+R9O25RetK2HDnIuu5U/0G6vW5+QKNnw8Oz0mMI55wXl8aPFjNvDd
f5KjgN7iv2rReDUbPn27H7IB/ffMevnuOqx3m++HzdD3Y620axvZ8NLuQtBB
tEdqkGVBC85vbO6t42hKborv1XY2JDx0HopFvy6pjA57hT/vebstEx1T+z7L
6y0bKNqsxgq0QQdftVUvG0IN3Fza0X/6aO/0PrDBLKNC/gv63nej6dWDbCjR
0f01h3addV0lMcwGyTUrhyV+4PldIGrt/AgbHteZzyihX0r+t3V4HMcrhaRo
hI5mtBx6+ZMN8f4xx2zRempjp6t+s4Fj0djnj54iRFNy/rLhVMCoWzT67g71
h/F8HFhkRRbJQDvb7m0L4edAR55vRzlaxuP4N5dlHJBxFnrYjm4LvLZk13IO
XCkUKRlGR0Y8om5cyYGX09deLZjAvJDQu4khzoGZgRYxGfTPm/P7REgc6DnQ
7KeGzrtLPfqbzIFL4cUjpuiDjwzjPirg8StzIg+hSY0uuc/pHNC/06h/Et36
OrK2hM2BfkUdMu99oIiB3L70NRyodJIXL0DrTDTPRKtwgP7wslI9emL+u8Qx
dQ4E1NY496PvCK9c56DJgevHmiv/oO3Jatu36XAgYuzFerFJzAuKlm7qBP48
9edzJXSzRmCYnCEHqCy7c1vQYUZX05aacGD29Fp7R7TW7oqyH6Yc+P02at8J
9KjDu5c95hzwLLxyJAmd5T03WrebAymVQfkF6AMhFMF7VhzYyr93WSN6VZQB
M8WGA7ovdp37hG644qwXYc+B0fx4+hz6TOZ5Wx8nDpQd3fyJ9BPzwv07gdau
HHiof6JWHT3ypCnewJMDjFM+9ea898NaRvKVfDjwvVNvxAO9v0ekQdKfAxv1
Sern0CuHVT/xBWJ/+GWvp6OfTe2e+xrMgR+5R9mVvPfHeP9B8SkOLBY0edWF
Vl+VvP7JWQ7omDzOmkR/VSjfmXuOA1FtC66t+IV5YW2PZ2IUBy4c3Fi4Bm2l
8+/cqVgOcBbFfzFBC29TuOUWzwHN5SrGzuhaK/1Ki8s4XlTdulD0CedDXTrX
OABaX9zT0Kr+5yaYaRz4L2mfagV66EyO8MpbHJBuKiF3oW/ENnJmMjlAPFZd
8xNtmfrNcOAOB1TvjNuLTmFeyBV2aM3nQPdKWqkyGkpUTpTd44B357j6dvTx
WovLGQ84YEuLeuWBVu44ei+mjAOWp6WuR6IH+i43B1Zy4Cs0RGahU76XfnYE
DqwhNV2tQVvMvl1gVsuBHcu2vfiAXibwV3ZDAwfOeR1dwzeNeUFSXkvhOQdC
jh+/K48OYOjtEWjjgPqD8L2b0WvUnHwmX3IgY0k9nfd+5EciIqq3C+sz348U
gr66IzuzvocDNZvvqaegzW0bnhT1ceDJ3YfHytGLPb52p37iQKRZ0fs36MrA
5VPnhrC/T1/6/Eb7RyiL+n3jQJGsOYv3PicnYZeSzRgHToPFYi10301/E6NJ
DigGrFxujf4fU25F8Q==
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.03, 0},
      AxesStyle->Directive[{
         Thickness[Large], 
         GrayLevel[0]}],
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {
        Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
         Charting`ScaledFrameTicks[{-#& , -#& }]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->600,
      LabelStyle->Directive[{Bold, 
         GrayLevel[0], 12}],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            ((-#& )[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            ((-#& )[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1, -7}, {-0.2955265134232273, 0.5723669543893433}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->
       FrontEndValueCache[{
        Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
         Automatic}, {{{-1., 
           FormBox["1", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-2., 
           FormBox["2", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-3., 
           FormBox["3", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-4., 
           FormBox["4", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-5., 
           FormBox["5", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6., 
           FormBox["6", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-7., 
           FormBox["7", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-1.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-2.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-3.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-5.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.4, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.6, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.8, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}, Automatic}]], {1612.5, -194.68070645621688},
      ImageScaled[{0.5, 0.5}], {600, 370.8203932499369}]}, {}},
  ContentSelectable->True,
  ImageSize->1200,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7517854397649603`*^9, 3.751785454339307*^9}, {
   3.754894777484494*^9, 3.7548947906687875`*^9}, 3.7548948556894937`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c61aea08-c863-4859-9ed5-7b13d14f7af0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulate Fat Spectra", "Subsection",
 CellChangeTimes->{{3.7517855020534177`*^9, 3.7517855103606234`*^9}, 
   3.7517855655882206`*^9, {3.754894858185709*^9, 
   3.7548948670807133`*^9}},ExpressionUUID->"bdc44691-f744-4c66-a1dd-\
7438bdd242a3"],

Cell[CellGroupData[{

Cell["PulseAcquire", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 
  3.7517855716387463`*^9}},ExpressionUUID->"59807f79-d229-49e5-b637-\
790a17413076"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sys", "=", 
         RowBox[{"GetSpinSystem", "[", "#", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"din", ",", "struct"}], "}"}], "=", 
         RowBox[{"SimHamiltonian", "[", 
          RowBox[{"sys", ",", 
           RowBox[{"FieldStrength", "\[Rule]", "3"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dout", "=", 
         RowBox[{"SequencePulseAcquire", "[", 
          RowBox[{"din", ",", "struct"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SimReadout", "[", 
         RowBox[{"dout", ",", "struct", ",", "\[IndentingNewLine]", 
          RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
          RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
          RowBox[{"Linewidth", "\[Rule]", "5"}]}], "]"}]}], 
       "\[IndentingNewLine]", ")"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
       ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppm", "=", 
   RowBox[{"out", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"Total", "@", 
    RowBox[{"out", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectrum", "[", 
   RowBox[{"ppm", ",", "spec"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.748229992433153*^9, 3.7482299971147556`*^9}, 
   3.7482300738180714`*^9, {3.748230123918957*^9, 3.748230124951667*^9}, {
   3.748230157213933*^9, 3.7482301620531178`*^9}, {3.7482351352193537`*^9, 
   3.7482351488687196`*^9}, {3.748235686160855*^9, 3.74823568660807*^9}, {
   3.7482691809371367`*^9, 3.7482691985853415`*^9}, {3.748273843907975*^9, 
   3.7482738738285837`*^9}, 3.7483200865733805`*^9, {3.7483210079837885`*^9, 
   3.748321016638588*^9}, 3.74832117160981*^9, {3.7483214752212343`*^9, 
   3.7483214819391317`*^9}, {3.7483217949776864`*^9, 3.748321814935499*^9}, {
   3.748321866491704*^9, 3.748321894899328*^9}, {3.7483219461685305`*^9, 
   3.7483219953029013`*^9}, {3.7483221618890285`*^9, 3.7483221687140117`*^9}, 
   3.748322245547207*^9, {3.748322561946589*^9, 3.748322564920495*^9}, {
   3.7483225975762873`*^9, 3.748322646232254*^9}, {3.748322689960739*^9, 
   3.748322713285779*^9}, {3.748323077665245*^9, 3.748323087386416*^9}, {
   3.7483237079179506`*^9, 3.7483237318664637`*^9}, 3.748332445544182*^9, {
   3.748332547703269*^9, 3.7483325609005604`*^9}, {3.748332698717409*^9, 
   3.748332706487593*^9}, {3.7483387227967024`*^9, 3.748338763325821*^9}, {
   3.748338807236164*^9, 3.7483388192757797`*^9}, {3.748338926064983*^9, 
   3.748338946316023*^9}, {3.748339008784735*^9, 3.748339010300783*^9}, 
   3.7483399760707045`*^9, {3.7483400127685337`*^9, 3.7483400176555862`*^9}, {
   3.748340636143362*^9, 3.7483406523026686`*^9}, {3.748340994495614*^9, 
   3.7483409992298527`*^9}, 3.7486158338071747`*^9, {3.7517855145478144`*^9, 
   3.7517855190458183`*^9}, {3.751785587862006*^9, 3.751785589428156*^9}, {
   3.7548948726829386`*^9, 
   3.7548948811473913`*^9}},ExpressionUUID->"869625c4-c640-4b6d-963c-\
5879d140481b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333]], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
KzVbXqLahj7GOetoLTH5eqeaKGbchv4HcbQe+w==
      "]]}, 
    {GrayLevel[0], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
     LineBox[CompressedData["
1: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
7jvu9MzQhwKX+gf3r0HbZmROygVSoFDyvqQkGsq7Fw+EUSB6Ue26jnoesbiZ
vbfyBF6v7sOJO+jUEe/U8/EU0NJcqh+NFp1X3OhxgQIve7pnHdCB7HHRNWkU
OHr2nKk2umvDqvULrlNgr8UcWUG0lWvY4e58ChT3q7vw6njEo5CneWUlFDgf
8pxWgOYmC3fFPaLALsG+XVHo5GIThZ1VFOBqnlTZgRZ6FW+5rJ4Csb35Zrpo
v763UXObKKC72Of7XHSboNzD1o8UKC/oF+56ySNM1RxHij9TYHmEeXw5ukw/
nRU9QIEn7TXHz6Ppdl3Ojj8oYDqc0uuNPufPTNL+jeXxnXffGP0nbv9LAUFV
cAzxG1ZHe+UWzDaLqQJhoZr4u5ZH8J6NLs9bqAqv54SkNKM3ti8/EKGkCsIH
v8+5g74zFXLNmqoKgc9GefFoNblKPourCgNes+L70XE6ggumdVShvjU1wxg9
ab7JuGGVKux3tEmkofd6xh7NJtCV5V2zL3jEu+Nv7gSZqEK3rdfZNvJ7kBnS
X823orNELz5C3y7frqbhoAqpq9ZMpKCVmq/YjrupgumZ0uJgdPRIe2ytpyow
67TBHj0mQYc0P1WQyXFnr0S7sT0n/INUIWOF3Gd59OsN+drGx1Qh/J30yK8a
7O+uw7uVTqlCdafmVh75PcsQvStDZ1Uh4IGewAO0THLQW7ioCo2hYoIp5Pcv
ix/NuZiB5R85sy0UPVQ/u9brhioYe9z87kR+L7PPKGB9oSoUxRvz16FfCMbc
kr6vCrnb7SU1yO9rqr3q6H2sCus+vo8XRGfpS8k/qlaFfboP7XqqecR8O1uL
hNeqYOAy17MWfdT/8vHdzaqQxa5+ko/+Gtf6YGWbKkjNnXZNQNvlagxL9KiC
tGi5UQD62bM9zM5vqnD6urSPPXpJ+02ne+PYHhXqH9eg06a+JcbMqMKI38xp
DbSYnG6ts7AalMx9eVQEfUQn8K/OPDV4+uVW4cBzHtFtXr5MRFYNjFxeUN+i
t3r+8WpRUQPxYsv3pejHxw2zCuhqUNh/oDoVrZkRzYvUUoPMBofxSPSl8peS
2/XU4Fa9yc59aKFmyY2aa9Sg/0PQXCv0wZFtoX83qMFBD8a35eg2iYvF78zU
wMf+nLgq2pz9sfeGtRrkt/7bJYwu26CmenSHGpR7V44PVvEIpusuG6tdauCX
L/ukCZ0YcuM03UsNFHZZwyP07IWBJxMH1SB6z8vf2Wjv4sW/6kPU4Gj0G694
dEv9oUVXI9UgJrpcKhBt3Hd/1+HTatAn2DPogi4RnL5skqgGpV6F05vQ6moG
DZQUNbDsDzTQQcfrR4mMXlUDOeeM+0roKdsXa6pvqoG00ZmdQmgPf4lDKcVq
0HE3b+3QMx7RFGd10+eBGuhudjfjoYncpHbDp2pQJKd2GtAFz3iy8rX481e3
TuajldtVzAca1CCq3uvSRfSpKbfISp4aOL3q3BuJHpe9Xna+A9uHxt19AO2u
83XIo08NmDEVZ+3Rb8wXMdYMq8GbfrmvG9BrPP13LJjA+nS467sYffP4vXPd
f9Wg6p8UTRktlzFZUzZHHbaplQjMQUeWr/0TN18dFMdUJH8Ajxh+/5/eTnl1
sK94a9SOdhp5vn+Zmjr033TIqUO/lBC7OpelDuca1uqWoZezLT+0aqvDHubc
vmx09obEeXeWq8P1w5trzqEXuDZviF6nDh02p9+Eo8NDlEIcjdXhDcV11gvd
f8GlSNtSHXK77R0c0PbFWT0Cdupg6CfeYoyuqu9R+eCsDst1JCL10Lp9XOu8
Peqgrz9qRUWnC/rGRBxQh+8r7IwXoMXV7lZaH1aHzH2NO/88xbyg/2ucFaYO
zMsC1wbRX2xXa01HqcMamai5H9Hb/CPcG+LU4U72eFItujLu2aXsJHVojPll
VIbWyp3zJihVHVT9NRVvoC8/MxO2yFYHcz89qWS0SPvZ1Rr56nBmplTrBPrQ
1Dv/8bvqcLzf3isA3SGrkFv7UB3OOz2t34W20HFqS3umDn01l6ys0eXmmTIH
69ThVt+pn4Zolme3qfE7dbhUseaxLjrpOPs/pY/qkP2f2w0qejbd+/5Qlzos
uXG1eCHap7zoG/SrQ+Xbgk8C6Jb3Y7SLo+og9HYF+8cTzAsjKx29ptTB58q3
85/RJRJhCesFNODH5ki1JjSV/bRaWkwDJubdfFmFPrNBeKZXSgNuL5e7cA89
7WKy9JGiBjRpRITnoD1D4vclaGiA2JqU6Ivo5gtvM3ZzNGDLb9Xbp9CGxbLN
K3U0YG/L85FgdFG9g8S8VRqwyGazjRdapS/NsNNAA7Lb3Zqc0DGCXUH3NmuA
7sBLf0v0T1VmYYyVBpTyDLUM0Lv0939xtteAkMkTgrroBtsCZV03DWiJ2faL
hl7rP7pVxFMDqm57zJFD34pbfqrFVwM8vU8sFUXL54Y8LjiiAW/zvUOnKjEv
PHs8FhmhAb067W2D6JE2Ac3tJzVgNjnDuR3tMmW8U/OsBjDM/X+9RdfJxl78
m6wBBYkK+VXolTpvXr1L14DPwY6h99HXzaWFcnM0YM/H6d230As9t+sfLdAA
c/tqzzR0+PErflalGhBgGx6dgB5Mb8+hP8brnxisOI62L6e1TjzXgJ2Mj5JH
0NXvPaRfvdKA0eCFwfvRuiN5Jlffa8Aac+dpZ3SmxHDE4VYN+J4TfWkrWoKt
V2ryRQM6jR0tNqJDNgQNUr5pQM7FbKVV6B6XR9TRMQ1IL9ad1ULbhMzaV09r
QLhd44w6utPs2mZLQSrofN8qLYu+5PB818o5VOg7dcxgLtrSozecKk6FF42L
Tsw85hHCh+emSMyngqEyt3ME/TBS897PhVR4a2Fs04M+mGDR0CFHBe6wdVsL
mp3uO/BSiQrh6oyIN+i2vHMi91Sp4JcYt7wKfeHBXY0MKhX2xjsLPUCb17xf
E8OkwshXr77baIH3v7Yf4lLh1/y4rix0WZfiIWdtKvz7kTh6Ee07vPrMJl0q
ZMnaKcSjmX+cb+osp4JaWJ51JPqT+LEqZX0qBD3Yl30EnaiY1S68jgp2bR5i
B9AmrKqp7wQVwiLDTrij/+r1yLZspMKCikhZe3SpoahOlQkVttGtyi3Q3lZc
8wILKjTVPT60AU1zMfe4tJUKvUQusQrN9/KJjLSlguTZHtpidEJwQpq3AxVG
dW2UGGjjk3fK7JypUEqrpyujZ5Ka3hnspML0S84GKfTdrJ9D3D1UyBY2OTwH
vb9IQUx2HxWqNEQezlTg/PRYn/HXmwprP62VGUN/qHMy+OpHhW7XV8f60fH8
8B3vAqiw0ihxtgNt1JsZWBFEhbbT+89/QE+NwbkbR6mgnqG36jW6SOBL/rlj
VPhk/WakCu2xYM6L0Cgq2HQpVjxEq6pyPu85RYXIvh8pd9BNmmZ/tsRRYYnn
2tib6NOrDijqJ1Dhb1VzfCaa2HRWj55EheBnmVkX0RM2xVskL1Eh7uTR2jPo
Avd3+yeuUGH3eTOBaPRuv/ETXRlUGH/+3TwMrRwuf7X+GhVeOpjdDEA3xq56
VHqDCkOfDeS90acu7/iQmYftue1u8i70uhtho6cLqXBs4ARrB3q8JGPe4bvY
f81Sa7eh8+Ap2/U+FXT3thw1Rbs3fN5g8pAKTv/RCUO0Qpuw69JKKjSucJXT
R78ZYIVQnlHBNNB3Wgd9YtLkwpwaKiSG6P/goNfM8S4aeYn9vfH6lAZ6VOZM
3cfXVBB3urhQCX2TWtTzvJEKJ4lx/YVo1yWN/wqbqRD4+/ohMbTcujGVlBYc
P5YJjwTQ9WZyK6PaqGBtckX29yMecdxhpbVPFxXWGBeE/0Cv8nD0se+hwp3e
ol8D6OGAozGG/VT4oBB7rBudE5merTVEhXZxhmIr2inhSaXcKBWervJ4+h4t
nd7VMjuO5XXTD36Nfpkn9LN/kgpyUScNatDHHjCl3s9Q4UT/Cvkn6OU1m7Uq
/1FhjLJspgz9rWn/ppvCNAjo9xwtRmd3xbmfn0uDKOeKn7fQjsMFYWHzaCD8
XEUsG73gT8MlDykaQIG/Vhq6RvzH3a2yNLDqzXFORocpyr5ZrUiDJ8E30s6i
9Vgr+hkUGmwucBk8he7XcxBeoEEDXbEyk0j0VcNQ9Sk6ns8y414oertV2upu
Ng2yjswuPoyWdKm0e61Fg2OPasp80FVenf5lS2jQFt+5xRMdGiwYn6VHg6YL
+uM70TonGblxK2kwW1qZuwPdl7TpWeAaGtwWd9lvi07P2tfmZkADvy8C+lvQ
tkWxk6ZGNCiqvyJvghZ/fFtm2WYaWEbICW5AQ92bxWrmNPg07Da9Bh3EHzGd
a0UDb5N9givQ2r3Se39Y00DsC0VBB/1lbNl/rdtpcMv6gL4mOlXAPrVmBw1a
thvvZ6C3LQi5X+xKg9M9F2+ooUVVUxuv7KJBBHPrqCK6UvPxtxMeNCj13Wkq
gw5c1SHq50WDCtOyQkm01iYBuqMvnt9vI3UuusuGvt7oEA0kaieuCqIvuxs7
ah+hgao3aP95iPnWz/OwQigNwjMSX0ygRcJPJwhE0EDvg4PvD/Sj2Py8wUga
DJeI0obQhy6/rm6OpoHanITPfWjujeHOJ6dpIFfbUfQZ3VGycObWGRr0aAye
bkMng57ChUQaJO++5s9HWzTYLY1IpgFl/sTuJrRQW5DlvhQsz8uPu9+gywdS
9lmn0yDb08D/Jdpv8lHU2iwaOPXKn36OZs5pz2Dl0MDD26bwCbpV5l+51C0a
VBv3dTxEJ1Fpzb9v00Bk6LnqfbTpko0jX4ppUPev3fMOenath0TDPRpsM+FU
3kbfN4thlT+gwcq7SRo30T4OeYbZFTQYs5FNyEbTPV45n3lKA9f96WKZ6JaA
70FBz2lwypZ27gr6XKRUknstDWTTL9IuojcnLC00f0UD2sjQ00T0nzTbl8vf
YnupU7zPoEvyjnxRf08DO5oc9TTa68HlWTE+DYakX38+gabWPFQe/4T9X2dV
8X9oXlPr8vYOGmxtNTsdhj7T9XdrbTcNeGlTPsHojcMaB+724fhT1nc9jJ6e
2XAqbZAG6Wp/Hf3Rd8T3Xjs5jOPt0jr3A2hPxVOP/cdooHnhW8A+tBrrFn/H
BA3sN/5L3INu1qsf2zhNg7dTPo92ouMMh+YvmcXxy9YacUYbWi3QVBKiw2s3
bR1H9KSzrrGQKB36tnsdtUMXetnsHBKng2Inr3Ebem9w4FHefDpEfvfW24JW
OXnpIkjT4csFylUzdGNS+Z18eTp0CHcqbEbHZH16laxMB++E21eM0AZFf/qO
qdEhOjuYQ6B/VqgLedHoMPxmNaxF59cZqtmy6GD4uH+PPnoXf7f+ek06TKwM
k1mBVuqNtuUsRjP7Xy1FN4zl+kkvpYNvHDtxCTpaoC52Zjkdxk4v3rkIvXbB
t5xefTqYu/3U56LHKPPh7To66HsEqLHQtzR1Wh8aYnnkrkrS0W6rrCeuG9NB
4d8hUQ20/KbD0gmmdHj8vltCFf3a5qJ2iCUd+C4DysroKPcHJru30UEmMmKZ
Alrf7+NuSzs6GBhcdpBFj4TNRKx0pIP8vSWnFqJzY9WuUF3oICC/7ul8tMtl
olTCnQ7q9x8IzUPL3Nj19uceOgTPXtkmhq4rOTHYsY8Ou4Jab81BR8KNOXUH
6PCnInCeMHplQy31nj8d5p12CxFAD7UOrM04TIeWgvMjf8vx/j4wzyEmGC0/
99AMesfk4oBDYXTIr33wZwq9cM62s87/0aGsMz1pAv1CJuDWphN0MEou1vuJ
DqcmP9eJwd9fNtD2A71sSVmHcjwdglgbz4+gB9e2/BY+Rwer/rKt39FZZtNy
w0l08Jc1UPqGtndQ1W25RIcX25sG+9HzPQwsqlLp0HTEt7YPXR3g7lmQSYdk
a/GiHvTRyKjjl7KxvTquZnajdRNy0iNz6bCXu+hKF/pr2osH3vl02GB7I6MD
nZnX32RXRIeZFLGCNrTdA4lhgxI6xJtvrf6ElqjRFtcsowPz7eG+FvSzJium
7CM6nMo5KMNHh3QdJP5W0iHczdD0A3rJcJLT12dYv7ntMe/RPTOlR97V0OHn
+o3v3qHTxPmJFXV06Jk6wGxE2yj+vn3jDf58lc3xBrQYi1J77h0dJDLGvr5G
P9Fb3x36gQ5iGZsdX6GPGO78u+cj1tewWVMdepHVcSWrdjosfze5/SW62/n6
Mv3P2J/SLL68QKd41VjRe+kgWmZ4tAZtFfzVS3KADkNZTSrV6DknxU9ODGF7
jfyprkI/TlqU1TVKhxHTipBn6ICsLRX1P+lA9RZfCWhukT+vdIoOBxhf/jxB
d1ac/5H5B+tzh/GbSvSlunuSsQIM2CGiefMx2pL/gXNYhAHSS8/GVaCFeieN
XMUYUPrPJ/gR+uGYspuJJAPYOdW+D9EHBdaFLl3IgCaPRN9yNHuBWzJFjgGP
rr4OeoBuo0QWz1FiwGI4EluGvqCZXT9CYcBl09M37qPNV1X3ftRgALwReFWK
FtjUJ1DNYMDBydbf99BlNmKqRRwG6EYq6JH2dddalbKIAbUrCg+XoJl+ljZR
OgwInkp/chf9KczP12cZAywrumVIJ8YmnrZfxQDZ6LCDd9Aml0uuG65lQI73
Xn4xejan+YkWwYAvV1JNSJeWTHyU28iAYivKsyK0Nyj9mt3MAKGWLxtJUxvW
LBwwZ0D45R9vC9H8VpdF760Y4C5g5EE6YeDY5kobBmxLaRImbTyZteumPQMK
J7JuF6CnRZ6Hn3diwMvqfBfSd2V6L4e5YXkqvyuQ3k+de89jNwO0ivZ9uo1W
X6LZsNWTAW8DFW6Sbl5rMbDamwE3BKfCSceb+Yow/Riwzl7ChbSRwzmNBQEM
yD1pYUx6au/dNVNHGGBb+nAF6aKA99u7QxkwqmirS9oj8tfB1xEMSJ2UX05a
NUHxTNlxBkTdFthAuilt9c2skwyYTJd2IH06z7kqLpYBhzabBJEmHkS0B55l
wNFlWZmkJ6qvTrmdx/oRoDSSLmh6Jmt2kQHNTmUS5PXt7vqyZNkVBjwTOGRF
Wnl4jrlaBgNsnpmlkW6c4XjMvcYAt3DiB+lT4uaRP3IYEES33kbW5zpFn7TW
WwyoLo0oJz3OTCirKWCA3qZqTbJ98vTuvCu+wwCVCUYOaXfDpqErpQyInk7j
kO2rYPVzbnQ5A15fXFRK+rWzAsPvMQPXy01mZP844aVv4AgMWPsjoZ/0mmCn
HUbVDNgftyuR7E+j0eGB2i8ZsMfHbAPZ/3KTMs8pvGZAgfbmGdKuWZAv0IjX
d9DhCdlf5Yq6awbfY/8cDo8j+3d9hcjnZj4Deg6U7ST7f2Qd+8+TVuzfT4UN
yPGxim+qmNfJgJKGvSxy/Az3eOtd+ILjK/GjPDm+csbObIn4ygAjyd1S5Phz
Eijev+8bAzY7zEqT41N6wbsT1iM4XlOK1Mjx+5Iynrl2nAEKcw/rkeP7mKb8
I9YkA0QHLLaR43/5qlUfpGYY0J+8Opi8P3wz3jH6e5YBOw+tu/mUnE9swub1
CDHh0U+7LvJ+4uiewW4QZcKKGyfo5P1ngd/TDeUSTBBRrvN9jq4J++ySvYAJ
ohOsKvJ+FR4rHHJGhgkrx1I1yPub3mXWhSAFJmi/556qRffnmBS5qzDhqF/j
L/J+mFniVWeuzgTbvCS/evR2iO9ZTmdCdcjBUfJ+KtlQ+E+dzYScz95hb9BV
rW9VxLWYkDsVJfWWvL8P/FgxvpgJC7ofFpD3a51JWev2pUwQaFpo24TuE1np
U7uCCe6SsULN6HQZx5i7q5mQ0cOoIOcDG+rR7LT1TAh50h1OzhfiS9IrT25g
QrJkrclHNKx90uK/iQkvrJsoreggs67xHWZMqKWK/ibnI20HISnjLUy4Q9nb
Sc5XX/YytZZYM+H0z+8N5HyWGrB5k9J2JjT53Kgl57ttkfvdhXYwwdT+TB05
H4omxIUNuTCh6nxOMzlfVqYVXOK5M8F74Wg/OZ8G5jXchb14vU0HRcn5VuvB
6Ov8/UyY6ucuJufjrmqZ/mQfLP9hFVdyvr7ctFz4v4NMUMg2uUTO51Zd9upe
gUwILS1pGUeLDIestg1hAmvalUmuBx7NpNqtD2fC5iaLUHK9cEi80p8Tice/
fYw/Tc4nip1x0tHYfqK/Dcj1RgdTMHcmhglJ/pXF/9DJeoxnvfHYX041aArh
+sTccFPb23NMUJleUiiCFrTaN/nwAvr059VzybzgHCuTc5kJQ7P9b8XJvOB1
e3FCGhPurTP1lyTzQvAb05CrTMjUEVKSIvNC9Mie3dfx+B+U66XJvJAk/Z/l
TSbQ1iedlCPzQtay1JW3mdByws9ckcwLhdvvU4uZeP++q6RC5oWK4EaJe0z4
GLxzlFzf+dRd+fazjAkpd4++I9d/dH6FaOcj7F9fRB+T68OWnnZa3RMmxIXP
vUOuH8+N/Vt3r4oJ36b/KyTXl5sxrmW8YELj98Ol5Przz3zjwzH1TND72VdN
rk9LKJ4JhxqYcL6yrYNcv3pp4h20CcsvvkOIXN9SV+VXb+IxIfHWTh1y/csz
ft2p8wn7y9GfHuT6+IzN8LRyB46Pg5RcAzIvuC9UEOnG8sa3jGwg84Kv3tLh
XiZUtOts3ETmhTA7y5YBJijFsrJMybwQG7Sv6jsTjkGlqCVa9XJKVMEPJjjW
/gnain6f8yjj0i8mvP7RN2pD5oWStvLI33j+nMhAezIvwOx7779MWLi9QdAJ
PfGGOmInyILM2OYUVzIvtBpJEHNY4PLx8updZF4Y2MvSFGeB7pBqz14yL0ye
MpSdzwKxsP0p+8m8IJLn/HchCyq2/mfvQ+YFmVdBX+VYwN3kqX6QzAvU7+ff
KbHA2IQ+Suahn4ulCitUWUCxLX9F5qX8tUtf3qCyoCdo8V0yT+0ys/1yjskC
raZTWWTeUnI4MhvKZUHOxborZB5r2HtZea82C/YIz6THkHkh4OFyK10WCPlT
8+PJvBDZulV/OQt81hPPzpF54exfb7o+lqfXpfsCmRfSNE5JrmOB3vCx+Slk
XsjbcG2CYIHtWL5ROpkXHux53LWRBaIZfcezyLxQfZJfb8ICp9urXuWQeaHp
5lipBQuODl1XzyPzQlfd/KtbWbBuw9LwQjIvfP/GjbVlQWJ675e7ZF6YwQ7k
wAJf4drtZWReENfd6erMgq4zre8ekXlB0eaoyU4W0HZrOj5Fv2QGXly6hwW5
T8r6yXz9n96lO5R9LLAcjT1B5u+VhuWv5hxgwQaHPC6Zz4e2fOob8WOBoSel
5R062/mP4KcAFhzJ7jvPQ+/wUlerDmJB9XVp+1b0wmBD/aKjLHgud53ZhX4R
vds25RgLXpdc+9uDDk+K9ouKYoGyldznAfSyrNxYn1Ms6K4TfDuMHix8mWMf
xwIb1UO14+isisGnhgksqLPyqp9C29dJtmol4fkifvD/oufzl0zIXcL+83Hh
qNAjzAs926T/XWGBdk6DjBj66FiA9kAGCzxX6BnOR+sKXDR5fw3rc9IohHye
8nX+g92VN7C+94lVkM9bMikfI27msaBeMU6MfB5jpzmTcr6QBcWFb93paIlV
aqVhd1mQ3t31nIN+Zky89bjPgokTNUsXo0Nsdg1ufciCnYdP5uuhl7ifmLOm
kgXZudwl+uge3xtU5jMWTHEePF5PPg8Kq127oIYFI/Kr7TeirWMH7KdesuDK
9bJpU7TY5XkB3a9Z0KSkn2+FfpKz+OzrRhZoNNXstSOfB5VsvVXWzIJGw/1a
TuhFcOh5VguOr2+cGfL5V/ebCx1xbSxY6Duf74FOab3/O7CLBclBtCcH0FYD
fLmdPTg+3vjcOYSeM/lbx6yfBaZWU4XB6MciqhbLhlhwqv91WQQ6QMbAU20U
2+f6eP0JNJfqfnzuTxY8Sj0yGIvuXByV/mOSBTKCLvKJ6Etrcx60zrAgQP2O
xSW0pdmLppp/OF6tw86mo4Uc+r8XC7NhfH7tJ/J54sO9EuKpc9kQ3pm+LA99
MECbGT2PDa77RFPI55HsSCvCT4oNua7zxcjnlW1nDzo5yrJB93zFicfoC2lJ
R4wU2QBfVeY9R5vnlSZqU9hAdVuRWYcWeMC7raDBhq1i8usb0WXVUy8EGGxI
kq7+ykP7Nql0D7LZkP/YMrMdzexa97dZiw05ex6696A/fXdTerqEDaUhcjrf
0Ikzkcvy9NjQcXK/+Bh6s/h1qwsr2dCiDSNT6L8KNV4Ra9hQxGF3/0OXMr9G
7zNgw5jpjS7RCswLeuJZ1kZssA4z/TYfTTVcVLF2Mxu0qlSE5NH8LVt4LHM8
3moOSxWd4Oz/Q8qKDf6KoXYMtLHXeclpazYI5FEStdDTQfc4PdvZIGiv0rIU
fTf6g1HDDqy/q5Haq9H7kyZdy13ZYKnhdJZ8Hq6epRyavYsNzbEl0ybo5sK1
yWc82KBYeDFwK7m/UOFaHOSFxzskNWNP7i/U/Vfv7suGWv6iBDdyf4F3rdf8
EBtkZicWe5L7Cz3PBVYcYUObSsQnX3J/YayXohHKBvPI+gtHyP0FAbFV4hFs
EEv7tiOC3F+Yr2UzHsmGeeND2ifJ/QWKpW97NBsiF7VKniX3FzT9TteexusT
fv47mdxfWJl4/e4ZNnyxvTueTu4vGJc8SUtkw3K5e9M55P6CTfPHk8l4fPsP
CwrRSu4TP/1T2FBlwtK9j37rq7TQKZ0NC5ffcask9xfC1iwyzmLDsqgTqTXk
/kKsy+YlOVhfZQVf3qDHLh3bpXSLDVcOrV7DI/cXcrLChQrYQA9YlUnut7iX
VF0eKmbD1QulUl/J/QXoKeHdY4PP2ycJI+jXb0Qb4AEbAtftpUyR+wut3IH8
CjYMSt27L/AY88KAucjFp2yQznjoKo4enfDR+O859rftp2Rl0Lki59Z41bKB
Xc/hq6BdZe5ut33FhpK8glvk/pIc9f3B9W+x/aoYp7XR9Yt/xXPes0FfOP3I
CnTkWsWb0nys3xDmIQP0KrPVVTOf2HDU6vVRE/SwvXN7bwcb/N5nJ21D5+yN
mHrbzQbjwAflO9BOAVdlH/Vhez9R/r4bLR35bEnOIBv27/qo44N+efaLWcIw
GxIXiR4n99uOpc3xCBnD+l9wp+sYenkeJ3L3BBueq3y1Oo3+VmaWZjnNhoKT
Fa/Oo7OrD5StnMXz56x3SEM7Np19RxXigOhIxI8c9IKu4iEJUQ60/juTWoSu
/v5u7i9xDigkh9mUo8Nmxumd8znwMt5Jmdxf1BNXMKiT5sCBwTUjr9D9Cvo7
7slzgMdb3PwBncl0CsxQ5kBBmvHLTvR2vfBzMWocuHAz8dUAWtIwM/8QjQP9
Zxkd4+iqLVDjzOKAlqiUwCw6xLm7a5MmByS+710qVol5wUvkj85iDigarwqQ
QfcFsRVVlnLgn15KlSo6PdpUT2QFB4JFU+kccj82yXvLsD4Hni3dmrQULZ51
Zn/LOg6stKqXXoeGwqITVYYckFFVv7YZHVTRmFlgzIGoKFdDa7R23djDS6Yc
aDiXNkLuD3/hyX2ItOTA59BvRZ7o1J6Vo97b8Poy3Y8dQm8bc5y33Y4DjtEL
3MLRogJhbMKRA54fxaxi0JXzMzZounDg6JE9VknoQMpTF1l3DizZobczA62l
+Tn47x4OvC2KjST3u7tWCl/4uo8Du+sjSu6hLxuzit4d4IC9FuPXE/QWG5O6
Cn8OuAUnmNajRdy9em4c5sD2k80FH9CPfOP/nQvG9rOVoH9GHwwrVDkaxgGX
eZtuDaE5sW9X7P2PA2dEUgly/77j0o9tVic4kP1MvV/4CeaFHFkf/RgOTP/o
vyaFNi9ZEUOPx+MHLPCloAXBIVvyHAfSLW+YcdDlb0IrJ5I4kFX+fNUytF9r
WkvXJSyvauQqAs0cqByvT+WAj+QPUwt060TngvuZHNC3XOzjgE4SEdK6ms2B
ygaLa3vQpjLMTbG5WL6yPf3+6FmNze6H8/H37c9sCEffX7w/zLWIA8+Xthec
RvusjbtkUsKBsj++WuT7E3SzgrtLyzjAyrB/dA3dYt/wmvII61+r2KUIfW7v
6Nc5TzhwbPicdAX5PkeAjPDoM2x/D+mPteg//y1X/1TDASZhea+ZfL/jrP3q
6joOOLjtyCLf9/BKC7EresOBNZ+ss4bJ9z3yUv1T3nGAPmt1bwbNK3scF/WB
A0nm3h/FnmJeqO644fORA78CK2UU0EZNAs/s27F+9+/eyUD/7qS3GX7mwB7T
w0/J91PufDee1OrlQN4BiWUGaM8ZTxn5AQ7E7TZ6ZIFWFY9d/G8Iy/9zxfYd
6PcKt00HRjnApQmI7EPHMd/sef8TxzP18YtAtKHeyLHKKQ5YepzMiEJPENKp
N/9w4PKV4NOJ6MIty+6fF+CC5/WimEz0XuftjWEiXMjJ3pxWgFbxCv7mIcYF
9rjz80foxqArotskufBr0TyBOnRMdAVtzUIutFEPWfPRBknt65hyXFDvzn/Q
i/559Z/DAiUuDFZ+0PuJzi+kHZ6icKGckHouBJgXKjYmdGtw4c/SI/ul0Up1
HnmvGVw4nMlikO8jNfBiqss4XJh5YzC+BB3dk9eZtYgLo2adLevRa8deTcfp
cCG5jdVsiR77913+yDIs//mlvc7oW/MXLt25igslZTTJA2g3ip6l2VoufG+V
NzuKlte027eM4EJH8+L0WPSrlUFRahu50F8eO+cKOso4JWOuCRfqv5idvIXW
t3lU/sOcC5cnEijl5PtdO9vet1pxcb4OfVmLvuE7O1xjw4Xq0kVn+GiXMKrE
HXsuuAu+8PyKlok1YqU6caEm1Ntxknz/69Jew2g3LgjR1+6a+wzzQs4pZ7/d
XEg0cTquiF5ZcivI0ZMLVscHyznooaf15428uTB1Z4GYPjr7zVCBth8XVIUH
/UzRO1oXvFQI4ILj6NXvjuiFA7pfBIK4kLveLtoL/WLCZnYwlAuRf7WWHUWH
k/9BcQQXLBNNp+PQy2QuL396nAvmN959TEMPajzcmneSC6y1394VoLMWt3pf
iOVCd9aj7kq0/dq/JyPOciEryEPyLXq+mca1fee5YFAkvbULXW2/4bH1RS6s
O9Ob/wN9dO8e/tor2F635lKFqzAvBJwcY2VwYedIZpEc+ut/N+cvvMaF2WtN
9mx05tk67nQOF4wc6pX00XZp3zb23OKC4t/Cn2Zoibz5OxsKuHCz5cagMxrK
dI6W3+HCk5hP077o4Grri9mlXNATPMKKRC9pOnznTDn2z0uZ3knons6Lr4Ie
cyFtLLI+B536/UGfO3AhRX3zpgdo65mPghbV2L+PKbXWocXE/6iueMkFER79
TBv6iYK6vsZrLuhvSnQcQQcyDW3FG9FbzhgKPce8oLfbb/w9F9a8NTKWJ98P
JaJj2/lcMF3QtYeLTtmSm1PbyoW44sSra9FWzi+f3u3E81UcnyTf95zjNfgp
7Qu2R1bXgd3k+6NBkhMnv3KhQKf1zxF0QPQS6YPfuLDg+tX8WDQ3aZu20wgX
dNNcjmSgO68GmBiPc2EpbYPrXfT/r4mvKQ==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[{
     Thickness[Large], 
     GrayLevel[0]}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
    Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
     Charting`ScaledFrameTicks[{-#& , -#& }]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->600,
  LabelStyle->Directive[{Bold, 
     GrayLevel[0], 12}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        ((-#& )[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        ((-#& )[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, -6}, {-22.482338312270105`, 47.9583266631424}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
    Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2., 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-3., 
       FormBox["3", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4., 
       FormBox["4", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5., 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-6., 
       FormBox["6", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{3.7517855963796806`*^9, 3.7548948790777826`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"6ae423fc-4ca8-4e00-b49f-98aab5126904"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Spin echo", "Subsubsection",
 CellChangeTimes->{{3.7517855668535924`*^9, 3.7517855716387463`*^9}, {
  3.751785612129964*^9, 3.751785613522607*^9}, {3.751786027777651*^9, 
  3.751786028417385*^9}},ExpressionUUID->"dab93187-a908-4ba7-ae93-\
e35b0b7d7535"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", "#", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", "sys", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSpinEcho", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{"50", "/", "1000"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", "\[IndentingNewLine]", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "5"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppm", "=", 
   RowBox[{"out", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"Total", "@", 
    RowBox[{"out", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectrum", "[", 
   RowBox[{"ppm", ",", "spec"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7482351714990845`*^9, 3.748235191739445*^9}, {
   3.748273924937831*^9, 3.74827395143205*^9}, 3.748339867254298*^9, {
   3.7483399355053816`*^9, 3.748339960080967*^9}, {3.7483400574082403`*^9, 
   3.748340059871789*^9}, {3.7483406608814077`*^9, 3.7483406634237876`*^9}, 
   3.748615848685067*^9, {3.7517856216532736`*^9, 3.751785623062027*^9}, {
   3.7548948899820714`*^9, 
   3.7548948976117563`*^9}},ExpressionUUID->"7e2a2150-d80c-4034-83d6-\
d9565cf12a88"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333]], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
9KEMH+1Kn7ts2KMwe+CjbR8KyinV2OPNhs9GOHKvGvQhu1mT2MZXbHg2UUcs
YXcfOiLfuskrkg0fHOZMj6X0ITGby16yP9mwp1KS8+RML1oMGRmlYjbc1/yX
70ljL6qpumfuSmXDOzepa1ln9aJE8mqBBI0NS77lzvH53It8Dj1RLp1gw4sB
U+dmHvciKyeuz3c32LCQE3PXF9te+p7whnMbLztWygpQ/nSiFwl0izz4J8aO
W+aSFJuUe9G40Jdee0V2vN/rADoj1IuKjXafEtBix+XWpvUC6z0oyic9J/sE
O2Y2PX9DoLcHueUckrt6kR2z5n/8z7S0B52ZLXjHfZMdh5aK81Yn96A98ieZ
MtzZcWnHk33P3/cgdpuG25bP2bH46bzlx549qCfEso0cxo5fPGT1/HW1B+VU
9ev9SGDHq14v2nac6EHvybfTz2WxY+2EOwcrVXqQ46EFCVIZO/Z7/qrgh0gP
MnB6+DKuhR2Xfb6RUMLcg6QTWFeMh9nxkd/zktvGutF6V+D1pSV2TNX7cD26
vhs1CQnVRbJzYMswhj/Wud0oxSiCMBDmwNIWFKszsd3ouY/s92lZDnzYqzLG
I6gbXctJFv5I3/uIUxZNza7diJhV89HR48Cz6R1GNy53o63yf6dHznHgk2Uv
r8qf6Eaz1vqX3lznwFkBsQ+2H+hGlSHVZZouHFio7sHYEYluFFdlrtbnw4HF
brvs/sjZjbzJ3TEv3nFgzSsWsRLzXejCITu+/V85sP9r3apGWhfa7zTt0ZHO
gbfmc23PKetClIT/hn0KOPAR2kPB6owuNNzFeG5PPQc2vDRycFNUF8oXCvjX
2MuBA+XSRR6/6ELhRpuUvGY58AX5gyfFXbvQA5+PYbLMnNhwgen28JUudCpH
ir16Eyce3nJVtsu4C8nPJtx3leLEoWdqlJgPdSEWeZVuiX2cOCNGysh0Vxfq
tM4+WarNiZXU9S5Vbu5Cv0OOZN014cTTvSLm9xm70OuqcpltNpzY+p+7hd4E
DTmQz7z5d4cTV39WyDjWRkO6h9pJDo84saxtK7tTCQ2JO129KfCKE3NL3L5Y
mUFDy/FjzdkRnPjaFgkDsxgaquu6r3s1mRNnqzVtEgimoSSh9RRuzIn3ybzQ
Y/aiIT8jn+0ZVZz4QkWYzK5bNGTjw/PcspMTR76U7rt/gYY0c94tkic48XMv
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
      "]]}, 
    {GrayLevel[0], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
     LineBox[CompressedData["
1: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
kQEd2h/0/wrZfYc=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[{
     Thickness[Large], 
     GrayLevel[0]}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
    Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
     Charting`ScaledFrameTicks[{-#& , -#& }]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->600,
  LabelStyle->Directive[{Bold, 
     GrayLevel[0], 12}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        ((-#& )[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        ((-#& )[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, -6}, {-15.946399338420731`, 37.97609941246094}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
    Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2., 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-3., 
       FormBox["3", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4., 
       FormBox["4", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5., 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-6., 
       FormBox["6", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{3.751785624312359*^9, 3.7548948940940824`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"73d0c1a6-c9fb-4e5e-b351-53aaf3afe346"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["STEAM", "Subsubsection",
 CellChangeTimes->{{3.7517856346602097`*^9, 
  3.7517856380873747`*^9}},ExpressionUUID->"11b0bc08-716e-4837-a55b-\
d3c98505048d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sys", "=", 
        RowBox[{"GetSpinSystem", "[", "#", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"din", ",", "struct"}], "}"}], "=", 
        RowBox[{"SimHamiltonian", "[", "sys", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dout", "=", 
        RowBox[{"SequenceSteam", "[", 
         RowBox[{"din", ",", "struct", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"50", ",", "10"}], "}"}], "/", "1000"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SimReadout", "[", 
        RowBox[{"dout", ",", "struct", ",", "\[IndentingNewLine]", 
         RowBox[{"ReadoutSamples", "\[Rule]", "2048"}], ",", 
         RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
         RowBox[{"Linewidth", "\[Rule]", "5"}]}], "]"}]}], 
      "\[IndentingNewLine]", ")"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
      ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppm", "=", 
   RowBox[{"out", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{"Total", "@", 
    RowBox[{"out", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"pl", "=", 
  RowBox[{"PlotSpectrum", "[", 
   RowBox[{"ppm", ",", "spec"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7481818389400015`*^9, 3.7481819043061547`*^9, {3.748182035959757*^9, 
   3.7481820635046773`*^9}, {3.748182213971154*^9, 3.7481822141298923`*^9}, {
   3.748182985022589*^9, 3.7481829851078463`*^9}, {3.748183176701327*^9, 
   3.748183191138928*^9}, {3.7481837396375275`*^9, 3.7481837399500513`*^9}, {
   3.7481848422946672`*^9, 3.748184842377087*^9}, {3.7482302286989613`*^9, 
   3.748230234199986*^9}, {3.748235208171048*^9, 3.748235241162552*^9}, 
   3.7483399007853546`*^9, {3.7483400698624706`*^9, 3.748340071613772*^9}, {
   3.748340674871582*^9, 3.748340676398965*^9}, 3.748615857818198*^9, {
   3.7517856460385566`*^9, 3.751785648340697*^9}, {3.754894903115119*^9, 
   3.7548949094661736`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333], 
      NCache[
       Rational[1, 3], 0.3333333333333333]], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
o5PlhA==
      "]]}, 
    {GrayLevel[0], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
     LineBox[CompressedData["
1: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
p3zw/MO2M0bl6kBZsajB3BfPv6n7alp6LTT4v26+4IfjSb/ldthVCy09jIfu
/jies827rdkMSPAV4A4PwPHytuh0KDNgx3rOoJwgHG+1te31Jzq4+PrtaHuE
4xnE3LbE++a6r9VmgRC8nuGWIusLcZ86FxdsFIrXs0k0mw41IHX1dlJYOF5P
6fqjYcXVwGA58bz1KV5P52cDRoeqYX9+5ZO9z/F65p18wPmzCioV+8iIKLye
awKSpYZVsKOi88zSy//vpzhPtleVcNr+6vMrr/+/PzZn+cRVQJtGSuLAm//n
e3T/XNJf2J8kXXg14f/5KyJxLe0PGIpRRClJOF5ThNlg5m/IbZ0YffkOvw9n
/tALH3+BiPpxbyIVr//q49KWr+UgrCtHmUjH6xPOsXrq20+4e0b/Y/oHPL70
A5XK0jIo2n+k/QaeGeUj0xWDP6Uw+/MT0svD4xv4JH6rLoGIONaYbfl4/KbF
5v31PyDVMjOf9hWPf+WWUG7Ld7BLPXmeowiPvzZlqNhZDPomeU083/D44a5+
yX3foH2y7Zb4Dzz+1pHPW0YQWPcrBWiW4d9foXfu6SHhxoqfmeMvfD3iz/Gt
44WQri9LJP3Fz/OpBIksfQVngU0vRqvw+M1FuzipX8BwTOCjHgPfT8mPXaLl
wz2+pwvv6/H927J4Rzd+hMmKDd+2NuP7DVO92rfnAvqsfDWtDd/v8naoZk82
xA28uqzdie9/GmNZopEJ7gtnxAZ7sF3ln14NTYftoVODCQP4/i+br5kmpcD+
Vx7Hrozg6yw0Y/WviXDFvujT4Ql8/Sizonh1HGQFeceqzWArDqyjVkTD1V5v
n/0L2OhvdeVCOBTRi+uNV7CT7TbuPeIPTD6fd3oyMYCy+5PRhse2kIgu83xi
w94kOHiE253UfPTfKicXdj94C2Y8Iu2XTkRd58O2+eoH8s/IaifvaxOC2BV1
pTfXYkjr+59lAtczwHezJ1vd5QRS+5WJlfImfJ0RIDNxMpl8EhNYtCCBrz+K
PMyjlUoee9EzV78NXz+Y4CQjm0Gumvigyh0MQEv1epKcWeQ33oO1Hbvw9fq2
+p2r2aRJ25FFPhXs7B4HjalckgvpLJntZwARMrxwuP8j6dKblVYIOL7D1COz
1nzSKtC+jziE4+ksbrxY84VUCO2I6DTE929hen+9rIBMffft1VsTfP8iu5Zv
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
RZ/21jd2BAa80/hovx5teNRph1kNA0rPtT3bgJ6IDAtUf4mu+K69id+/J2Wc
k21iwL3Pa4v447NrJtwRaGFA9s5qva1o6YL+2i+tDFgUfLCeP743VAh9aOtg
QFqWtQd//A+vZ/9+2sXA+YSrGH9+oNexQS7vPQO6V16rcEKPDfhoX/zIgE2v
xYNc0dmTCZuPDzEg43OJoRvaSaDQa98IAxJM40T2oCXEX5+2Gcf7szSl3wP9
kjyVYTTFgBrt9lov9AkVmXLWT4zPh1b396N19PTeLJ3D+LaeveOHHjHfMfHr
LwOY1L78Q/zxxDZUbECQCYK7/pXx51OObtfYzQuYsMtmx3/8+Za43zPTMlEm
XN0yPs6fj9WGfnC5Ic4EoZpqBf58LSx2fnCCJBN+q77Zwp/PaV9mXQySZcID
Se65SPTnbIsCNwUmHCFXdsbw+/cS73pLJSYY/0xRj0dvh/gBHToT5HwexCWi
Fzff+6fExvJYKkxdQFd3/acgosqEOyfqPVL4/fvwt1VTy5kwMK+mnz8/1fwp
ZdOjxQT192I+6ehPQrq+dauYQNK5Ocef36ZLOsYUGzChWjPhMn/+a0s9diNt
DRNKperX8OfHIhrplVGmTHih7TJ2Bw1GTzv91zGh+ZtFXgE6aGPf1I6NTPhT
l+hXglZ3EFxqvpkJ3WtWGpeiP+5lqmrYMGH6qx6pHH01YP060nY8fuT13/z5
/NZwLzfBHUwoBt8R/nx/QWJc6KgLE/4eujHAzwcq0/IvtbsxYeLY2s/16MC8
5mLYy4Sj/9lOv0KrPppouuPFhCdHWsV56L4ayc/Jvky4G/VSqx19macz/+RB
JuirrNr1Dm3dZ6/kHcgE03TFy71oobFgg23BTChXj3jbjy6fu2q3JowJoYbe
7CH0IZFKf044E/z03hzn50dcufdxEpFMSLxd/34c3cuclzMXw4R+qqXVd3Sy
NqNqMB7bc5PT8xl+/26yrvu/c0yI+PDH/A96nvW+n48vMsGzUP/1PMzfypxj
JbMvMyH9orjXArSf993liWlMeHbitIgYmnn01Ybg60yAw2kP+flgV+T4Hveb
WF8xTr78fDEpSeKk1W2s3w81y+XRGzJXXtW9y4TVT3p/UdB/721/SC1kgq97
fgsd/bDiaIvofSb80tYu4aB966+MfC9lwoWMwAx1NL2jYsH7ciZ4cINTtNCd
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
BeYL1wMszKe4UOb9w42D/h/e6o2y
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[{
     Thickness[Large], 
     GrayLevel[0]}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {
    Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , 
     Charting`ScaledFrameTicks[{-#& , -#& }]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->600,
  LabelStyle->Directive[{Bold, 
     GrayLevel[0], 12}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        ((-#& )[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        ((-#& )[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, -6}, {-18.384442871407963`, 43.061804494610094`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
    Charting`ScaledTicks[{-#& , -#& }][#, #2, {6, 6}]& , Automatic}, {{{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2., 
       FormBox["2", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-3., 
       FormBox["3", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4., 
       FormBox["4", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5., 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-6., 
       FormBox["6", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.2, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.4, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.6, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.8, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{3.7517856496220827`*^9, 3.7548949131128883`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"c8d40f87-9f07-41a1-a5be-a276ab024bc4"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fat STEAM with various TEs", "Subsection",
 CellChangeTimes->{{3.751785834342079*^9, 
  3.7517858461181536`*^9}},ExpressionUUID->"6705b400-369d-4acb-94b1-\
826717b38934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simuluate", " ", "STEAM", " ", "j", " ", "coupling", " ", "for", " ", 
    "various", " ", "TEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TEs", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"10", ",", "100", ",", "10"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"out", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"din", ",", "struct"}], "}"}], "=", 
          RowBox[{"SimHamiltonian", "[", "#", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"dout", "=", 
             RowBox[{"SequenceSteam", "[", 
              RowBox[{"din", ",", "struct", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "16"}], "}"}], "/", "1000"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"SimReadout", "[", 
             RowBox[{"dout", ",", "struct", ",", 
              RowBox[{"ReadoutSamples", "\[Rule]", "1024"}], ",", 
              RowBox[{"ReadoutBandwith", "\[Rule]", "2000"}], ",", 
              RowBox[{"Linewidth", "\[Rule]", "10"}]}], "]"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "TEs"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ")"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<fatGly\>\"", ",", "\"\<fatStart\>\"", ",", "\"\<fatDouble\>\"", 
        ",", "\"\<fatEnd\>\"", ",", "\"\<fatMet\>\""}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ppm", "=", 
     RowBox[{"out", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "All", ",", "3"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"spec", "=", 
     RowBox[{"Total", "[", 
      RowBox[{"out", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "4"}], "]"}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.746847702956359*^9, 3.746847705100912*^9}, {
   3.7468479330417895`*^9, 3.746847952202388*^9}, {3.746848216013152*^9, 
   3.746848222191821*^9}, {3.746867356897272*^9, 3.7468673656261845`*^9}, {
   3.7469409624679255`*^9, 3.746940997218149*^9}, {3.7469412837966795`*^9, 
   3.7469413006612544`*^9}, {3.746947619898952*^9, 3.746947642884818*^9}, {
   3.7469743198506145`*^9, 3.7469743256202364`*^9}, {3.746974428086774*^9, 
   3.746974429134055*^9}, {3.74702703695601*^9, 3.747027064566635*^9}, {
   3.747027165936557*^9, 3.7470271708788805`*^9}, 3.7470273367688255`*^9, {
   3.7470347282528763`*^9, 3.747034737261882*^9}, {3.74711149700712*^9, 
   3.747111525534052*^9}, 3.7471116676340513`*^9, {3.747111911059723*^9, 
   3.747111917714374*^9}, {3.747114588771387*^9, 3.7471146516068797`*^9}, {
   3.7471166314768953`*^9, 3.747116631987259*^9}, {3.747127234573103*^9, 
   3.7471272350985055`*^9}, {3.7471306683493767`*^9, 3.747130668924918*^9}, {
   3.7471315273127337`*^9, 3.7471315516455436`*^9}, {3.7471321219486876`*^9, 
   3.7471321847326574`*^9}, {3.7476337305343657`*^9, 
   3.7476337744916043`*^9}, {3.747633832030656*^9, 3.747633836796017*^9}, {
   3.7476342984003572`*^9, 3.747634306030753*^9}, {3.747634466656008*^9, 
   3.747634468544018*^9}, {3.747635769872473*^9, 3.747635780432063*^9}, {
   3.7476363974099693`*^9, 3.747636398321417*^9}, {3.74763650353691*^9, 
   3.7476365081429768`*^9}, {3.7476393842920556`*^9, 3.747639385170397*^9}, {
   3.74764448938281*^9, 3.7476444908432393`*^9}, {3.7476477306289525`*^9, 
   3.7476477314119787`*^9}, {3.747647779191697*^9, 3.7476477810777893`*^9}, {
   3.747647829237409*^9, 3.7476478295081244`*^9}, 3.7476500709523573`*^9, {
   3.747654333852504*^9, 3.7476543406161475`*^9}, {3.747654371015292*^9, 
   3.7476543755804176`*^9}, {3.747654422730257*^9, 3.747654429002034*^9}, {
   3.7476675470303087`*^9, 3.7476675588223953`*^9}, 3.7477280521847553`*^9, 
   3.7477356641071596`*^9, {3.7477361631787443`*^9, 3.7477361853068104`*^9}, {
   3.7477363563671713`*^9, 3.7477364114518213`*^9}, {3.747739148767829*^9, 
   3.747739149101492*^9}, {3.7479780758682137`*^9, 3.7479780763334537`*^9}, {
   3.7479781439989133`*^9, 3.747978148798498*^9}, 3.7479792037889395`*^9, {
   3.747979391919927*^9, 3.747979392126504*^9}, {3.7479799066708283`*^9, 
   3.747979907452491*^9}, {3.747980692702307*^9, 3.7479807026207476`*^9}, 
   3.7479808276809664`*^9, {3.7479809349769087`*^9, 3.7479809358236504`*^9}, {
   3.7479809894711394`*^9, 3.7479810158581653`*^9}, {3.747981348595498*^9, 
   3.7479813646464586`*^9}, {3.74798319683325*^9, 3.7479832002891583`*^9}, 
   3.7479842186745553`*^9, {3.747995457844248*^9, 3.747995510024599*^9}, 
   3.7479958258832617`*^9, {3.74807035312002*^9, 3.748070356575066*^9}, {
   3.748070871569313*^9, 3.748070907324333*^9}, {3.748070996381597*^9, 
   3.7480709968789206`*^9}, {3.748071062064003*^9, 3.7480710622434826`*^9}, {
   3.7480715415038767`*^9, 3.748071542000207*^9}, {3.748155127640109*^9, 
   3.748155141911248*^9}, {3.748155187464883*^9, 3.7481551884560943`*^9}, {
   3.748155911609275*^9, 3.7481559358457966`*^9}, {3.74815596876221*^9, 
   3.748155970425609*^9}, {3.748163734305396*^9, 3.748163734499945*^9}, {
   3.7481638602877836`*^9, 3.7481638611199694`*^9}, {3.7481639585134196`*^9, 
   3.748164021183906*^9}, {3.7481641352187877`*^9, 3.7481641355206037`*^9}, 
   3.748164233552312*^9, 3.748164520050725*^9, {3.7481650363078775`*^9, 
   3.748165037298518*^9}, {3.748183627588142*^9, 3.748183630401523*^9}, {
   3.74818374905184*^9, 3.7481837531270247`*^9}, {3.748184010324383*^9, 
   3.7481840350810156`*^9}, {3.748184901581254*^9, 3.7481849016752176`*^9}, {
   3.748184963572925*^9, 3.748185002889196*^9}, {3.748185244432699*^9, 
   3.748185244495197*^9}, {3.7481853966725035`*^9, 3.748185409793804*^9}, 
   3.7482356701465745`*^9, {3.748236803697485*^9, 3.748236935330164*^9}, 
   3.748236996960808*^9, {3.7482372353783035`*^9, 3.7482372416149197`*^9}, 
   3.7482384531850214`*^9, {3.7482385653166056`*^9, 3.748238584817676*^9}, 
   3.7482387650455165`*^9, {3.748238885012453*^9, 3.7482388851718793`*^9}, {
   3.748239053475803*^9, 3.7482390569960413`*^9}, {3.7482392158578467`*^9, 
   3.74823921592115*^9}, 3.748241105142406*^9, {3.748241442903722*^9, 
   3.748241442947858*^9}, 3.7482516734992294`*^9, {3.748260670691536*^9, 
   3.7482606708134456`*^9}, 3.7483232357717247`*^9, {3.7483237520266685`*^9, 
   3.7483237571758156`*^9}, {3.7483238221696987`*^9, 3.748323840248466*^9}, {
   3.748340712448462*^9, 3.7483407347322335`*^9}, 3.7484211561194906`*^9, {
   3.74842123880229*^9, 3.7484213926426015`*^9}, {3.748421629781578*^9, 
   3.7484216299536457`*^9}, {3.748429378027416*^9, 3.748429382407913*^9}, {
   3.7484294783384333`*^9, 3.7484295103613825`*^9}, 3.7486823458223124`*^9, 
   3.7486846945995955`*^9, {3.74868594788026*^9, 3.74868594808681*^9}, {
   3.7486859934652977`*^9, 3.748685994134081*^9}, 3.748690600121831*^9, {
   3.7486907570038414`*^9, 3.748690766999828*^9}, {3.7517857312706747`*^9, 
   3.751785742947794*^9}, {3.7548949310998926`*^9, 
   3.7548949712902346`*^9}},ExpressionUUID->"3edd32fa-7110-4380-a1ac-\
e91a7e073cb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"define", " ", "the", " ", "T2", " ", "relaxation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t2sim", "=", "90"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T2relax", "=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "TEs"}], "/", "t2sim"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{"T2relax", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "@", "spec"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"pls", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PlotSpectrum", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#2", " ", "#3"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "7"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
        "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"ppm", ",", 
         RowBox[{"spec", "/", "max"}], ",", "T2relax"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7482369404648113`*^9, 3.7482369435500307`*^9}, {
   3.7482369917619576`*^9, 3.74823700190097*^9}, {3.748237046433651*^9, 
   3.748237163011227*^9}, {3.7482372480360584`*^9, 3.7482372551559963`*^9}, 
   3.7482386052210474`*^9, {3.7483234243515415`*^9, 3.748323428072304*^9}, {
   3.748325389244517*^9, 3.7483253896906757`*^9}, 3.748325462450378*^9, {
   3.7483255575170727`*^9, 3.7483255582841234`*^9}, {3.7483411264195046`*^9, 
   3.7483411281903915`*^9}, {3.748343977350229*^9, 3.748344058210185*^9}, {
   3.748344088963969*^9, 3.7483440922413635`*^9}, 3.748421279533637*^9, {
   3.7484213472454386`*^9, 3.748421385632394*^9}, {3.748421426973504*^9, 
   3.7484215145800934`*^9}, {3.748429497485859*^9, 3.748429515080805*^9}, {
   3.7484296177337627`*^9, 3.748429617827312*^9}, {3.748429653038226*^9, 
   3.748429655905289*^9}, {3.748431245924173*^9, 3.7484312512832603`*^9}, 
   3.7484313278619294`*^9, {3.7486670014810476`*^9, 3.748667008235139*^9}, 
   3.748667040122573*^9, {3.751785801650653*^9, 3.7517858077166452`*^9}, {
   3.7517858690923147`*^9, 3.7517858693640347`*^9}, {3.754894949211228*^9, 
   3.754894957913658*^9}},ExpressionUUID->"1aef8f21-e40a-49dc-bf08-\
ddabcbdf3501"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"pls", "[", 
    RowBox[{"[", "n", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "\"\<echo time\>\""}], "}"}], ",", "1", ",", 
     RowBox[{"Length", "[", "pls", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754894922908832*^9, 3.754894926506301*^9}, {
  3.754894978542844*^9, 3.754895009340332*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate Tensor Data", "Subchapter",
 CellChangeTimes->{{3.7548946289884815`*^9, 3.7548946340141907`*^9}, 
   3.7548950428099594`*^9, {3.7554985560315247`*^9, 
   3.755498559150863*^9}},ExpressionUUID->"1751ae4d-03af-43ab-814a-\
5f1f74188c44"],

Cell[CellGroupData[{

Cell["Simulate Diffusion signal", "Subsection",
 CellChangeTimes->{{3.7555055424913597`*^9, 
  3.755505547990526*^9}},ExpressionUUID->"d31f39f7-0271-44c7-bb22-\
4483ca591ade"],

Cell["MRI acquisition parameters used in simulation", "Text",
 CellChangeTimes->{{3.755498706578211*^9, 
  3.7554987088653297`*^9}},ExpressionUUID->"10ef7ece-7769-4d88-bcb0-\
24ae840e2ae7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grad", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"GenerateGradients", "[", 
      RowBox[{"16", ",", 
       RowBox[{"VisualOpt", "\[Rule]", "False"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvec", "=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"450", ",", 
        RowBox[{
         RowBox[{"Length", "[", "grad", "]"}], "-", "1"}]}], "]"}], ",", 
      "0"}], "]"}], "//", "N"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TR", ",", "TE"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2990", ",", "49"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parMus", "=", 
   RowBox[{"{", 
    RowBox[{"0.9", ",", "1200", ",", "37"}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"pd", ",", "T1", ",", "T2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"parFat", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "300", ",", "80"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dim", "=", 
   RowBox[{"{", 
    RowBox[{"50", ",", "50"}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"2500", " ", "voxels"}], "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.7554991728825464`*^9, 3.7554991895206566`*^9}, {
   3.7555027201165314`*^9, 3.755502726818404*^9}, 3.7555027960200157`*^9, {
   3.7555046513955193`*^9, 3.755504652242817*^9}},
 CellLabel->
  "In[820]:=",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],

Cell["diffusion properties of fat and muscle", "Text",
 CellChangeTimes->{{3.7554987153767567`*^9, 3.755498717795229*^9}, {
  3.755498845121635*^9, 
  3.755498846384009*^9}},ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-\
d99cba543428"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigFat", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.8", ",", "0.8", ",", "0.8"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDfat", ",", "FAfat"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigFat", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trueFat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"1000", "*", "eigFat"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1000", "MDfat"}], ",", "FAfat"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigMus", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.6", ",", "1.4", ",", "1.0"}], "}"}], "/", "1000."}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"MDmus", ",", "FAmus"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "eigMus", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"ADCCalc", ",", "FACalc"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trueMus", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"1000", "*", "eigMus"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1000", "MDmus"}], ",", "FAmus"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554987124178233`*^9, 3.7554987420325537`*^9}, {
  3.755498807491068*^9, 3.7554989260180225`*^9}, {3.7554989951714444`*^9, 
  3.7554990114404864`*^9}, {3.755503913939555*^9, 3.755503915827593*^9}, {
  3.7555045928829904`*^9, 3.7555045943549566`*^9}},
 CellLabel->
  "In[825]:=",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],

Cell["\<\
relative signal of muscle and fat, muscle signal is set to 1 and fat signal \
is relative to that\
\>", "Text",
 CellChangeTimes->{
  3.7554987349964027`*^9},ExpressionUUID->"1460edd8-ebc9-4085-89c9-\
9648c5994b0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigMus", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parMus", ",", "TR", ",", "TE"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigFat", "=", 
   RowBox[{"Signal", "[", 
    RowBox[{"parFat", ",", "TR", ",", "TE"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sigMus", ",", "sigFat"}], "}"}], "=", 
   RowBox[{"1000", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigMus", ",", "sigFat"}], "}"}], "/", "sigMus"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498733095319*^9, 3.7554987566720223`*^9}, {
  3.7555040874450517`*^9, 3.755504088387574*^9}, {3.7555045991718335`*^9, 
  3.7555046397624445`*^9}, {3.7555046804054747`*^9, 3.75550471723564*^9}, {
  3.755505126598693*^9, 3.755505158163907*^9}, {3.755505202579651*^9, 
  3.7555052230444407`*^9}},
 CellLabel->
  "In[908]:=",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],

Cell["SNR and fat range for simulation", "Text",
 CellChangeTimes->{
  3.7554987547880144`*^9},ExpressionUUID->"a46f428a-dc95-4a9c-94ee-\
db51bba31c07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SNR", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", "55", ",", "5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fat", "=", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "60", ",", "5"}], "]"}]}], "/", "100"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.755498747952379*^9, 3.7554987529771776`*^9}, {
  3.7555026885814595`*^9, 3.7555026952833323`*^9}, {3.7555039261491194`*^9, 
  3.7555039312025957`*^9}, {3.7555047653022795`*^9, 3.755504765826683*^9}},
 CellLabel->
  "In[911]:=",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],

Cell["Each slice has a different SNR value", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.7554993879996243`*^9, 
  3.7554993928785996`*^9}},ExpressionUUID->"26edf3b3-8ad9-461c-86ea-\
f42fcabaaf29"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffSNRData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AddNoise", "[", 
      RowBox[{
       RowBox[{"CreateDiffData", "[", 
        RowBox[{
        "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
        "]"}], ",", "#", ",", 
       RowBox[{"NoiseSize", "\[Rule]", "\"\<SNR\>\""}]}], "]"}], "&"}], "/@", 
    "SNR"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffSNRData", "]"}]}], "Input",
 CellChangeTimes->{{3.755499371169255*^9, 3.755499410639565*^9}},
 CellLabel->
  "In[913]:=",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "17", ",", "50", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7554994192559714`*^9, 3.755502701763615*^9, 3.7555027352940073`*^9, 
   3.7555028025364304`*^9, 3.7555039390573373`*^9, {3.7555041019772453`*^9, 
   3.7555041295891848`*^9}, 3.7555047298794103`*^9, 3.7555047678372107`*^9, 
   3.7555051366916103`*^9, 3.755505226167738*^9},
 CellLabel->
  "Out[914]=",ExpressionUUID->"3f00324c-cecf-48de-8c45-a725b67b6c96"]
}, Open  ]],

Cell["\<\
Each slice has a different fat concentration and all data has an SNR of 30\
\>", "Text",
 CellChangeTimes->{{3.7554992010614014`*^9, 3.755499222088479*^9}, {
  3.7554992963196063`*^9, 3.7554993090876026`*^9}, {3.755499418469868*^9, 
  3.755499419198783*^9}},ExpressionUUID->"2870d320-5902-4ad9-9183-\
18b8640c365a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "#"}], ")"}], 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigMus", ",", "eigMus", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}], "+", 
       RowBox[{"#", " ", 
        RowBox[{"CreateDiffData", "[", 
         RowBox[{
         "sigFat", ",", "eigFat", ",", "bvec", ",", "grad", ",", "dim"}], 
         "]"}]}]}], ")"}], "&"}], "/@", "fat"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"diffFatData", "=", 
   RowBox[{"AddNoise", "[", 
    RowBox[{"diffFatData", ",", 
     RowBox[{"1000", "/", "30."}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "diffFatData", "]"}]}], "Input",
 CellChangeTimes->{{3.7554990540502625`*^9, 3.7554990574422503`*^9}, {
  3.755499098578025*^9, 3.755499165345476*^9}, {3.7554991990731335`*^9, 
  3.755499199856219*^9}, {3.7554992345026464`*^9, 3.7554992567207756`*^9}, {
  3.7554992876353903`*^9, 3.7554993508476458`*^9}, {3.7555040025015373`*^9, 
  3.755504002562702*^9}, {3.755504115733507*^9, 3.755504119538631*^9}, {
  3.7555051476217604`*^9, 3.7555051480198555`*^9}, {3.7555058283248744`*^9, 
  3.755505829011708*^9}},
 CellLabel->
  "In[961]:=",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13", ",", "17", ",", "50", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{{3.7555051377645454`*^9, 3.7555051605652795`*^9}, 
   3.755505227105238*^9, 3.755505829600276*^9},
 CellLabel->
  "Out[963]=",ExpressionUUID->"f712621c-77a9-4029-9e28-ffce3d3a020c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate The Tensors and analyse the data", "Subsection",
 CellChangeTimes->{{3.7554994431638927`*^9, 3.755499448960779*^9}, {
  3.755505559892274*^9, 
  3.755505563490865*^9}},ExpressionUUID->"70957c7c-9985-4811-a1db-\
22a102f78f7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensSNR", ",", "S0SNR", ",", "outSNR", ",", "resSNR"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffSNRData", ",", "grad", ",", "bvec"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tensFat", ",", "S0Fat", ",", "outFat", ",", "resFat"}], "}"}], 
   "=", 
   RowBox[{"TensorCalc", "[", 
    RowBox[{"diffFatData", ",", "grad", ",", "bvec"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7554994561780434`*^9, 3.7554994672640123`*^9}, {
   3.7554995041277866`*^9, 3.7554995062093306`*^9}, {3.7554999740035515`*^9, 
   3.7554999771208525`*^9}, {3.7555000830755177`*^9, 3.755500086728283*^9}, {
   3.7555038872848186`*^9, 3.755503894660489*^9}, {3.7555040058494663`*^9, 
   3.7555040072512045`*^9}, 3.755505488884363*^9},
 CellLabel->
  "In[964]:=",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],

Cell["\<\
Calculate Parameters with and without rejection of negative eigenvalues\
\>", "Text",
 CellChangeTimes->{{3.7555057186792235`*^9, 
  3.755505737032175*^9}},ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-\
815afc33504c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNR", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFat", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "False"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}},
 CellLabel->
  "In[966]:=",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parSNRT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensSNR", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"parFatT", "=", 
   RowBox[{"ParameterCalc", "[", 
    RowBox[{"tensFat", ",", 
     RowBox[{"Reject", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755500102429257*^9, 3.755500118594836*^9}, 
   3.755500158406703*^9, {3.7555022625180807`*^9, 3.755502271492881*^9}, {
   3.7555057406599007`*^9, 3.755505770595284*^9}},
 CellLabel->
  "In[968]:=",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"],

Cell["Show histogram of MD and FA with different SNR values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 
  3.755500419601555*^9}},ExpressionUUID->"ca482818-c0ff-4fd6-a65d-\
7ccf593d5fbc"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parSNR", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<SNR = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"SNR", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Length", "[", "SNR", "]"}], ",", "4"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755505256917855*^9, 
  3.755505257698938*^9}},
 CellLabel->
  "In[970]:=",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],

Cell["Show histogram of MD and FA with different fat values", "Text",
 CellChangeTimes->{{3.755500179573262*^9, 3.7555001958141766`*^9}, {
  3.755500399489155*^9, 3.755500419601555*^9}, {3.755504259300619*^9, 
  3.7555042596989145`*^9}},ExpressionUUID->"eb75b5be-106f-402c-87c8-\
a260f27e02a9"],

Cell[BoxData[{
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1.8"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<MD\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Hist", "[", 
      RowBox[{
       RowBox[{"parFat", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "#"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "\"\<FA\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<fat [%] = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"100", 
           RowBox[{"fat", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "fat", "]"}], ",", "5"}], "]"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.755500162982013*^9, 3.7555001712671423`*^9}, {
  3.755500207797134*^9, 3.755500389828378*^9}, {3.755500476213152*^9, 
  3.7555004765159626`*^9}, {3.755502751367876*^9, 3.755502765781315*^9}, {
  3.7555028251228733`*^9, 3.7555028274430604`*^9}, {3.755504263621405*^9, 
  3.7555043462739897`*^9}, {3.755505301230109*^9, 3.7555053021796412`*^9}, {
  3.755505373463333*^9, 3.7555053828834915`*^9}},
 CellLabel->
  "In[972]:=",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNR", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}},
 CellLabel->
  "In[974]:=",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFat", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}},
 CellLabel->
  "In[975]:=",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "2"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<MD as function of SNR\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parSNRT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", "SNR", ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "0.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<SNR\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of SNR\>\""}]}], "]"}]}],
    "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555029294139233`*^9, 3.755502944645937*^9}, {
   3.7555032449315224`*^9, 3.755503245778783*^9}, {3.7555033968206387`*^9, 
   3.755503412773309*^9}, {3.755503455748889*^9, 3.755503541041586*^9}, {
   3.7555037516536865`*^9, 3.7555038438775*^9}, 3.7555054146962986`*^9, {
   3.7555054546298923`*^9, 3.7555054697152395`*^9}, {3.7555056432709084`*^9, 
   3.7555056532680564`*^9}, {3.7555057548698072`*^9, 3.755505756086052*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.5"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<MD\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<MD as function of fat fraction\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ErrorPlot", "[", 
     RowBox[{
      RowBox[{"parFatT", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", 
      RowBox[{"100", "fat"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.4"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<fat fraction [%]\>\"", ",", "\"\<FA\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<FA as function of fat fraction\>\""}]}],
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7555054226454363`*^9, 3.755505444498875*^9}, {
  3.7555057607111783`*^9, 3.755505761685171*^9}},
 CellLabel->
  "In[977]:=",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1357, 1060},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 96, "Title",ExpressionUUID->"934d8265-4fcc-4427-9f34-640074773381"],
Cell[751, 27, 284, 6, 34, "Text",ExpressionUUID->"22b0e3d8-9903-4283-b556-9ad31d8e7f65"],
Cell[CellGroupData[{
Cell[1060, 37, 164, 3, 64, "Subchapter",ExpressionUUID->"4d401d3b-2658-4bc0-bbef-6cc2152ecc5c"],
Cell[1227, 42, 203, 3, 34, "Text",ExpressionUUID->"a102f725-94d2-43a9-822e-d1dd3b7c0c23"],
Cell[1433, 47, 278, 4, 28, "Input",ExpressionUUID->"cae7997b-5732-4630-8297-a72d2ca96db1"],
Cell[1714, 53, 343, 8, 28, "Input",ExpressionUUID->"de89fb8e-3ffb-4d57-bd77-151cf99ecb57"],
Cell[CellGroupData[{
Cell[2082, 65, 183, 3, 53, "Subsection",ExpressionUUID->"1037c5ba-e19a-4732-8360-f60e7a2fa01d"],
Cell[2268, 70, 215, 5, 34, "Text",ExpressionUUID->"9def143d-308d-45ea-9146-337b684f48fb"],
Cell[CellGroupData[{
Cell[2508, 79, 449, 7, 28, "Input",ExpressionUUID->"66f0941d-b74d-4f23-a6d3-c5e28a3d33c5"],
Cell[2960, 88, 2306, 35, 71, "Output",ExpressionUUID->"27d84e42-9238-46d8-ba78-333f5e6aa156"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5303, 128, 517, 8, 28, "Input",ExpressionUUID->"2daef7a9-1b9d-41bf-a8ae-40d232f006a0"],
Cell[CellGroupData[{
Cell[5845, 140, 8135, 140, 468, "Print",ExpressionUUID->"2d732253-89d6-4183-ab18-c75a8e8f46d3"],
Cell[13983, 282, 7393, 134, 469, "Print",ExpressionUUID->"448ee829-4625-4d50-a8e4-6de013c21006"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21425, 422, 218, 4, 28, "Input",ExpressionUUID->"017dd998-8132-4761-a2ee-0fc908034fca"],
Cell[21646, 428, 6345, 114, 878, "Output",ExpressionUUID->"0c727ef7-1fe4-46b2-bb5b-33381b57810a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[28040, 548, 160, 3, 37, "Subsection",ExpressionUUID->"8ee5c0ae-81ad-4d98-953f-c7e16140406d"],
Cell[28203, 553, 210, 4, 28, "Input",ExpressionUUID->"a66d2a05-f5eb-4f7c-8218-62ea88883b7a"],
Cell[28416, 559, 221, 4, 34, "Text",ExpressionUUID->"0b15c18e-462f-410c-a373-4af09d51be09"],
Cell[28640, 565, 25904, 429, 722, "Input",ExpressionUUID->"538c1a9a-c29d-462c-aafe-1d9d7b0e26f9"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54593, 1000, 294, 4, 64, "Subchapter",ExpressionUUID->"fa1ebb06-be4c-4fd9-86a2-22990e083b10"],
Cell[CellGroupData[{
Cell[54912, 1008, 172, 3, 53, "Subsection",ExpressionUUID->"ef8f60c6-1123-44e0-aa4c-01d9fab680a3"],
Cell[55087, 1013, 507, 14, 48, "Input",ExpressionUUID->"1ba38701-07bb-494e-82ee-7d21f0bb7296"],
Cell[55597, 1029, 374, 9, 48, "Input",ExpressionUUID->"7d5996b5-b119-4a70-987f-a14d8037aa23"],
Cell[55974, 1040, 525, 15, 48, "Input",ExpressionUUID->"8df64434-479f-48f3-bbf6-1802ed564d7c"]
}, Closed]],
Cell[CellGroupData[{
Cell[56536, 1060, 189, 3, 37, "Subsection",ExpressionUUID->"b78c9120-ccf2-40e5-87d7-a484213417b3"],
Cell[56728, 1065, 235, 6, 34, "Text",ExpressionUUID->"dc9dff42-f5b7-4251-8736-a0dca6b379bb"],
Cell[56966, 1073, 586, 15, 48, "Input",ExpressionUUID->"696f126b-efab-4a13-8aa9-b44de55e3f44"],
Cell[57555, 1090, 400, 9, 28, "Input",ExpressionUUID->"5a9a50a3-b161-48d9-a14d-cc00a14c8221"],
Cell[57958, 1101, 402, 8, 28, "Input",ExpressionUUID->"41ec57c1-ef10-4a83-b8a8-146c45bdf378"]
}, Closed]],
Cell[CellGroupData[{
Cell[58397, 1114, 166, 3, 37, "Subsection",ExpressionUUID->"0d830d7c-dc92-4a0f-96b0-5cb8ad6ed729"],
Cell[CellGroupData[{
Cell[58588, 1121, 868, 20, 105, "Input",ExpressionUUID->"2c5f1eed-b1d2-413a-a711-e9e26a4cb615"],
Cell[59459, 1143, 314, 7, 32, "Output",ExpressionUUID->"bb71510c-74f8-43af-810d-0c0d83bfa0da"],
Cell[59776, 1152, 316, 7, 32, "Output",ExpressionUUID->"e231f42d-8499-4b0e-9bc2-9adc74a815d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60129, 1164, 915, 24, 124, "Input",ExpressionUUID->"0711c021-52b7-4374-b710-c62812e3419e"],
Cell[61047, 1190, 266, 6, 32, "Output",ExpressionUUID->"17e573a1-7bdf-4fac-8551-78b546d4f566"],
Cell[61316, 1198, 268, 6, 32, "Output",ExpressionUUID->"d3d67d74-80e3-4617-a452-8a07e749698b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[61633, 1210, 158, 3, 37, "Subsection",ExpressionUUID->"d51e43d8-34ee-4df9-8bf3-5b69733ed3ff"],
Cell[CellGroupData[{
Cell[61816, 1217, 167, 3, 44, "Subsubsection",ExpressionUUID->"968fa70b-c4b4-4d48-a949-8da4355d6428"],
Cell[61986, 1222, 310, 7, 28, "Input",ExpressionUUID->"0ec03379-9273-43c8-969d-41d370813788"],
Cell[62299, 1231, 291, 7, 28, "Input",ExpressionUUID->"74538836-333a-4a62-b9e6-38ff5ee95d7f"],
Cell[62593, 1240, 242, 5, 28, "Input",ExpressionUUID->"5d2b3531-cdd4-413e-b108-ae67e2b9af5b"]
}, Closed]],
Cell[CellGroupData[{
Cell[62872, 1250, 173, 3, 36, "Subsubsection",ExpressionUUID->"267579d6-9b73-4c4b-aa48-be3e08dfda04"],
Cell[63048, 1255, 361, 9, 28, "Input",ExpressionUUID->"9298008e-ebb6-4839-b787-3eb2650efb20"],
Cell[63412, 1266, 215, 4, 28, "Input",ExpressionUUID->"c002fff5-58c3-459d-bd3c-c4ccbb6ca90d"]
}, Closed]],
Cell[CellGroupData[{
Cell[63664, 1275, 166, 3, 36, "Subsubsection",ExpressionUUID->"9c3fe646-8c82-4fa5-ba13-4d6d8bf9eb94"],
Cell[CellGroupData[{
Cell[63855, 1282, 465, 11, 48, "Input",ExpressionUUID->"8d1daacd-8970-4659-9835-8f732610f46c"],
Cell[64323, 1295, 212, 5, 32, "Output",ExpressionUUID->"9cbff17b-1b63-475e-a27e-bf527e719314"]
}, Open  ]],
Cell[64550, 1303, 244, 5, 28, "Input",ExpressionUUID->"30981062-8ace-4811-b1a0-840f0ffb8e73"],
Cell[CellGroupData[{
Cell[64819, 1312, 777, 19, 105, "Input",ExpressionUUID->"95428a0b-7e40-4b51-92e8-5da74f819672"],
Cell[65599, 1333, 292, 6, 32, "Output",ExpressionUUID->"18f4e781-e28f-4dd1-81ae-1feeb8387ed5"],
Cell[65894, 1341, 237, 4, 32, "Output",ExpressionUUID->"8f6197cf-8e3e-4a70-ad86-43ec5763186a"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66192, 1352, 166, 3, 53, "Subsection",ExpressionUUID->"93607360-ed31-4145-8241-5b261eccc5b0"],
Cell[CellGroupData[{
Cell[66383, 1359, 171, 3, 44, "Subsubsection",ExpressionUUID->"4f8cb032-dea0-497b-bd1c-d723913ce783"],
Cell[CellGroupData[{
Cell[66579, 1366, 321, 8, 28, "Input",ExpressionUUID->"3cd642da-fd22-4802-9288-f01565803535"],
Cell[66903, 1376, 5432, 110, 73, "Print",ExpressionUUID->"7baa6da3-a77c-4a8a-86e3-efca81ada7af"]
}, Open  ]],
Cell[72350, 1489, 256, 5, 28, "Input",ExpressionUUID->"203bb6e8-79b2-4927-b104-77c6b4bb166c"],
Cell[72609, 1496, 293, 7, 28, "Input",ExpressionUUID->"a26cc5d9-e803-45fa-b22e-fae71af4e8d4"],
Cell[72905, 1505, 220, 4, 28, "Input",ExpressionUUID->"3309429c-25c3-464f-a97a-6193bde41c61"],
Cell[73128, 1511, 481, 13, 48, "Input",ExpressionUUID->"c7b59436-5334-4cdf-8c43-2d2fe93b3917"]
}, Closed]],
Cell[CellGroupData[{
Cell[73646, 1529, 180, 3, 36, "Subsubsection",ExpressionUUID->"2e5b960f-ce39-4cd9-a390-ec4c724d0794"],
Cell[73829, 1534, 2123, 57, 181, "Input",ExpressionUUID->"ccc5fd89-681d-4742-9855-ddf4ecfe57a6"],
Cell[75955, 1593, 243, 5, 28, "Input",ExpressionUUID->"53fddc99-c4e8-45c0-a9f3-8bc732aba17d"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76259, 1605, 290, 5, 64, "Subchapter",ExpressionUUID->"ff48cf42-cb85-4663-b23e-43657c60dfe7"],
Cell[CellGroupData[{
Cell[76574, 1614, 161, 3, 53, "Subsection",ExpressionUUID->"47e835ce-4699-4923-898e-db43e06f49d0"],
Cell[76738, 1619, 808, 23, 67, "Input",ExpressionUUID->"d9902e8c-2a9f-40e9-88a5-9c6eca85b9c9"],
Cell[77549, 1644, 243, 5, 28, "Input",ExpressionUUID->"d449b604-02c3-4b41-963f-9c32375bec9f"]
}, Closed]],
Cell[CellGroupData[{
Cell[77829, 1654, 159, 3, 37, "Subsection",ExpressionUUID->"586003b9-59ba-4f2a-a670-aeb201812c92"],
Cell[CellGroupData[{
Cell[78013, 1661, 182, 3, 44, "Subsubsection",ExpressionUUID->"69a2c8a5-fb3b-4839-94de-bdb3a0a3b69c"],
Cell[78198, 1666, 255, 6, 28, "Input",ExpressionUUID->"76a2f7e3-7d49-45ab-aaf7-cdffb72eccbf"],
Cell[78456, 1674, 241, 5, 28, "Input",ExpressionUUID->"a853d33f-3e4d-4a97-be23-2d351b6b6b09"],
Cell[78700, 1681, 408, 9, 56, "Text",ExpressionUUID->"b2a29537-e3dd-40af-9ab3-396f946f0c7f"],
Cell[79111, 1692, 450, 10, 28, "Input",ExpressionUUID->"ca643546-dc1d-430e-b21a-ecac262f9a1e"],
Cell[79564, 1704, 505, 11, 28, "Input",ExpressionUUID->"0ca068e9-45ab-4193-b700-ea079aa30009"],
Cell[80072, 1717, 457, 11, 28, "Input",ExpressionUUID->"3c45e684-0113-4b2f-9a58-889dba598670"],
Cell[80532, 1730, 160, 3, 34, "Text",ExpressionUUID->"cc0b2c2b-3f9b-46a3-812b-fdd16430c436"],
Cell[80695, 1735, 296, 7, 28, "Input",ExpressionUUID->"0653d5ab-e1f9-42eb-9a3c-efc992067962"],
Cell[80994, 1744, 243, 5, 28, "Input",ExpressionUUID->"06c51025-4365-4585-b0fb-f98b6c96c521"]
}, Closed]],
Cell[CellGroupData[{
Cell[81274, 1754, 236, 4, 36, "Subsubsection",ExpressionUUID->"ded5d62a-f398-4005-9427-e92efe288312"],
Cell[81513, 1760, 270, 6, 34, "Text",ExpressionUUID->"30dac8a6-273d-4495-981c-2a1d6d3a8f80"],
Cell[CellGroupData[{
Cell[81808, 1770, 691, 17, 86, "Input",ExpressionUUID->"5d3cf964-b905-48d5-a57a-61d50ebef712"],
Cell[82502, 1789, 444, 9, 32, "Output",ExpressionUUID->"05e9e289-db4f-4a81-a5bf-62df53e19ddc"],
Cell[82949, 1800, 315, 6, 32, "Output",ExpressionUUID->"f15b2f95-bd82-4fac-9a86-946e099737ff"],
Cell[83267, 1808, 326, 6, 32, "Output",ExpressionUUID->"33f2aa7c-ad2f-4a67-8b90-06288fcf88aa"]
}, Open  ]],
Cell[83608, 1817, 347, 7, 34, "Text",ExpressionUUID->"1f4758f5-443f-4df8-b208-0f642bb70f02"],
Cell[83958, 1826, 528, 13, 48, "Input",ExpressionUUID->"4434b8fb-f66c-460e-a0c4-571c04a56121"],
Cell[84489, 1841, 357, 7, 28, "Input",ExpressionUUID->"9365ecdb-b734-4c5d-8503-bb51d35b6eac"],
Cell[84849, 1850, 265, 6, 34, "Text",ExpressionUUID->"1b611f18-649c-473d-992a-229c3cb8c4f4"],
Cell[CellGroupData[{
Cell[85139, 1860, 607, 14, 48, "Input",ExpressionUUID->"abe1de54-7eda-49dd-816f-028249e80717"],
Cell[85749, 1876, 244, 5, 32, "Output",ExpressionUUID->"366e6703-f0ca-472c-8506-a558e6c19df0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86030, 1886, 1059, 26, 48, "Input",ExpressionUUID->"524331ef-fe4b-4ceb-9bd0-466fdbff5ae8"],
Cell[87092, 1914, 36065, 703, 254, "Output",ExpressionUUID->"5c9b8703-bcf7-4d12-906e-147158935246"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123218, 2624, 173, 3, 53, "Subsection",ExpressionUUID->"cf83491c-53d6-4317-902a-83e581aa5dc7"],
Cell[CellGroupData[{
Cell[123416, 2631, 555, 13, 67, "Input",ExpressionUUID->"295b97a0-e9dc-4121-923c-5eaf1358301e"],
Cell[123974, 2646, 262, 6, 32, "Output",ExpressionUUID->"067273ae-4568-4568-a585-65b7c58d9c4a"],
Cell[124239, 2654, 264, 6, 32, "Output",ExpressionUUID->"7153a140-ebe3-42ef-8676-3235282ebda6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124540, 2665, 631, 16, 86, "Input",ExpressionUUID->"f34b5322-4762-42a1-b96d-7c26a6f0c9fb"],
Cell[125174, 2683, 237, 5, 32, "Output",ExpressionUUID->"391ce56b-9f79-4d6f-a6d9-f1723beb8bac"],
Cell[125414, 2690, 235, 5, 32, "Output",ExpressionUUID->"e0897190-01dc-4038-b821-c951833471a2"]
}, Open  ]],
Cell[125664, 2698, 359, 7, 28, "Input",ExpressionUUID->"da20adbf-60c7-4030-adc2-fd83c41d3f1b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126072, 2711, 278, 4, 64, "Subchapter",ExpressionUUID->"7e315242-c9a0-48d7-a79c-e62367557aee"],
Cell[CellGroupData[{
Cell[126375, 2719, 161, 3, 53, "Subsection",ExpressionUUID->"932638bc-7c62-479b-bb0d-3cffa205baac"],
Cell[CellGroupData[{
Cell[126561, 2726, 1558, 44, 162, "Input",ExpressionUUID->"fbf5ef71-e74a-4a87-867e-8a3346fab1f4"],
Cell[128122, 2772, 5606, 112, 73, "Print",ExpressionUUID->"1047d256-f43e-4f8a-b593-87704665c6a6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[133777, 2890, 173, 3, 37, "Subsection",ExpressionUUID->"5c27d6f6-8cde-4515-862a-aa9c9642bd78"],
Cell[133953, 2895, 163, 3, 34, "Text",ExpressionUUID->"4c5eacb3-63dd-4261-bae3-aa2546f96de9"],
Cell[134119, 2900, 1537, 36, 48, "Input",ExpressionUUID->"63000fed-904c-4a4f-b696-9368e0f79cb4"],
Cell[135659, 2938, 576, 12, 28, "Input",ExpressionUUID->"816e27ef-b777-4331-a0c7-f21e570a53c8"],
Cell[136238, 2952, 281, 6, 28, "Input",ExpressionUUID->"914da50d-8987-45c6-86c2-efa574454895"],
Cell[CellGroupData[{
Cell[136544, 2962, 243, 5, 28, "Input",ExpressionUUID->"527dc924-9b90-4cd1-8a40-dbeeca06c032"],
Cell[136790, 2969, 1554, 48, 286, "Output",ExpressionUUID->"eb2fabaa-d587-4a15-a6e1-b34d57c28708"]
}, Open  ]],
Cell[138359, 3020, 322, 7, 34, "Text",ExpressionUUID->"71e298ab-c4f6-4b0e-9225-05f491f97805"],
Cell[138684, 3029, 1071, 21, 28, "Input",ExpressionUUID->"1c36b922-6e1f-438c-8272-93926ea59256"],
Cell[139758, 3052, 278, 6, 34, "Text",ExpressionUUID->"619ccb59-1402-4b29-83d1-c92d637ab02a"],
Cell[140039, 3060, 767, 20, 48, "Input",ExpressionUUID->"8ceb4c98-d616-490c-8fb5-4843ba78006c"],
Cell[CellGroupData[{
Cell[140831, 3084, 836, 23, 28, "Input",ExpressionUUID->"3696fe4f-f01d-45bd-92a4-16e14eb5f35f"],
Cell[141670, 3109, 2153, 49, 100, "Output",ExpressionUUID->"56b7b693-0bb9-4255-9106-bbacab49843c"]
}, Open  ]],
Cell[143838, 3161, 308, 7, 28, "Input",ExpressionUUID->"09229319-c33b-4e4a-ba78-73bea25fef4c"]
}, Closed]],
Cell[CellGroupData[{
Cell[144183, 3173, 278, 4, 37, "Subsection",ExpressionUUID->"c10c058b-a500-4c2d-bffa-2955b14de21a"],
Cell[CellGroupData[{
Cell[144486, 3181, 170, 3, 44, "Subsubsection",ExpressionUUID->"adaf1997-c6af-46c4-ae60-0fb87f7483c2"],
Cell[144659, 3186, 290, 6, 34, "Text",ExpressionUUID->"8fc205d5-3384-40ca-a0e5-a8c9f829c920"],
Cell[CellGroupData[{
Cell[144974, 3196, 724, 18, 28, "Input",ExpressionUUID->"646203ff-d303-4507-9da0-c6c6b2da4b18"],
Cell[CellGroupData[{
Cell[145723, 3218, 8642, 161, 71, "Print",ExpressionUUID->"6cc7170a-6e42-43f8-b847-6ba7dd418875"],
Cell[154368, 3381, 5456, 110, 73, "Print",ExpressionUUID->"e0327bd3-e034-46ef-9afd-87b286222aba"]
}, Open  ]]
}, Open  ]],
Cell[159851, 3495, 176, 3, 34, "Text",ExpressionUUID->"869142fd-77a5-4044-bfa0-ffaeaff29d3f"],
Cell[160030, 3500, 1290, 33, 86, "Input",ExpressionUUID->"c5d26f17-e5d3-4460-99c6-c6d6d4fc11dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[161357, 3538, 179, 3, 36, "Subsubsection",ExpressionUUID->"f38c2344-3618-4b65-86d0-b42b8689639d"],
Cell[161539, 3543, 245, 5, 34, "Text",ExpressionUUID->"8b20a75d-31f3-4056-ac74-f1127d0d96dd"],
Cell[CellGroupData[{
Cell[161809, 3552, 1058, 23, 48, "Input",ExpressionUUID->"e8e00cae-5dc7-462d-8948-526b28aeb597"],
Cell[CellGroupData[{
Cell[162892, 3579, 8638, 161, 71, "Print",ExpressionUUID->"ff809583-b6a4-4d5c-8152-5b0dd1ac336e"],
Cell[171533, 3742, 5454, 110, 73, "Print",ExpressionUUID->"5f02643f-e458-4743-b302-574a20ab3b55"]
}, Open  ]]
}, Open  ]],
Cell[177014, 3856, 1343, 34, 86, "Input",ExpressionUUID->"a8ab54f5-bbbb-4ea9-a109-96d066fc16c2"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178406, 3896, 182, 3, 53, "Subsection",ExpressionUUID->"52e9fa03-400d-4512-9bf9-1437a0e5fcb7"],
Cell[CellGroupData[{
Cell[178613, 3903, 786, 19, 28, "Input",ExpressionUUID->"27a1cde0-d94a-47cf-abeb-3c946e78e8b6"],
Cell[CellGroupData[{
Cell[179424, 3926, 5434, 110, 73, "Print",ExpressionUUID->"468154aa-5ab2-4d0e-b167-4f17eb2141f0"],
Cell[184861, 4038, 8618, 161, 71, "Print",ExpressionUUID->"7d482505-af6e-4120-989d-ff8e3fa3be67"]
}, Open  ]]
}, Open  ]],
Cell[193506, 4203, 349, 9, 28, "Input",ExpressionUUID->"d1be5a12-791a-4350-96bc-97a8b33f7dcb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193904, 4218, 176, 3, 64, "Subchapter",ExpressionUUID->"bd72d8f9-e5f9-4dc6-8f74-865e5a0d73d1"],
Cell[CellGroupData[{
Cell[194105, 4225, 215, 4, 53, "Subsection",ExpressionUUID->"a6da33c3-efdf-4208-ba9d-24feeed10a88"],
Cell[CellGroupData[{
Cell[194345, 4233, 222, 4, 44, "Subsubsection",ExpressionUUID->"2edddb44-1bfb-48ca-829f-4e01ababe642"],
Cell[194570, 4239, 3631, 106, 243, "Input",ExpressionUUID->"9b91eb61-00ab-48df-a447-fedb2fd2f5db"],
Cell[198204, 4347, 567, 13, 48, "Input",ExpressionUUID->"8d073112-10fc-4030-921c-ef26a3c0437e"]
}, Closed]],
Cell[CellGroupData[{
Cell[198808, 4365, 201, 3, 36, "Subsubsection",ExpressionUUID->"b587fa99-4fd2-4a9f-84c3-cef7608ce734"],
Cell[199012, 4370, 183, 5, 28, "Input",ExpressionUUID->"1d7b806a-dd41-45bf-9618-e62a5081374b"],
Cell[199198, 4377, 1488, 43, 105, "Input",ExpressionUUID->"7e46033f-85f1-4dc7-bd60-9ce5bc39fd40"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200735, 4426, 181, 3, 53, "Subsection",ExpressionUUID->"7b0ca489-2d98-4b70-8d0f-822a0387c0f1"],
Cell[CellGroupData[{
Cell[200941, 4433, 164, 3, 44, "Subsubsection",ExpressionUUID->"177a1753-5f03-4991-89d8-98a1aa966a50"],
Cell[201108, 4438, 491, 9, 56, "Text",ExpressionUUID->"87f508a6-1540-4424-bb30-6ac782debcec"],
Cell[201602, 4449, 556, 14, 28, "Input",ExpressionUUID->"423e2d86-3a51-46b3-9197-72f7f0028581"],
Cell[202161, 4465, 674, 19, 48, "Input",ExpressionUUID->"58d81c30-8194-49d8-99f2-afe922769900"],
Cell[202838, 4486, 256, 5, 28, "Input",ExpressionUUID->"d5065ca8-34be-491d-8e7c-859fa128d3ef"],
Cell[203097, 4493, 180, 3, 34, "Text",ExpressionUUID->"5d8722a6-0f30-46da-9a66-70fc6e81a4e1"],
Cell[203280, 4498, 1088, 30, 86, "Input",ExpressionUUID->"cdcc633d-9298-474d-8926-467ed718c7df"]
}, Closed]],
Cell[CellGroupData[{
Cell[204405, 4533, 185, 3, 36, "Subsubsection",ExpressionUUID->"fad4d634-1ff8-466d-8264-61cf6051a1dc"],
Cell[CellGroupData[{
Cell[204615, 4540, 1334, 37, 86, "Input",ExpressionUUID->"f00cc5d1-3776-4533-888e-d37a4fe114b1"],
Cell[205952, 4579, 8895, 166, 73, "Print",ExpressionUUID->"79846589-a18d-4d5e-adb4-9e03c42f49c2"]
}, Open  ]],
Cell[214862, 4748, 618, 17, 28, "Input",ExpressionUUID->"0d87a2c4-dbb9-4b69-9cbd-5329e4c7140f"]
}, Closed]],
Cell[CellGroupData[{
Cell[215517, 4770, 190, 3, 36, "Subsubsection",ExpressionUUID->"1b109d2e-a32c-48ad-9a6b-09b964323db5"],
Cell[215710, 4775, 565, 12, 28, "Input",ExpressionUUID->"d7bdf8d5-6e6b-401a-9fb0-4bd3e02954af"],
Cell[216278, 4789, 571, 14, 28, "Input",ExpressionUUID->"bc8e7efa-dd51-4c32-b014-721652d5ace8"]
}, Closed]],
Cell[CellGroupData[{
Cell[216886, 4808, 208, 4, 36, "Subsubsection",ExpressionUUID->"202a85c6-aa77-469d-80b0-13a415d3aa61"],
Cell[217097, 4814, 222, 3, 34, "Text",ExpressionUUID->"e24414a3-74e8-46ce-b0b6-aa68e3bb6b37"],
Cell[CellGroupData[{
Cell[217344, 4821, 309, 6, 28, "Input",ExpressionUUID->"61f94af4-5685-4721-b8e5-76cc0311a7c5"],
Cell[217656, 4829, 1525, 45, 184, "Output",ExpressionUUID->"5bdc8e8c-dd4e-4d46-a349-35c98a1430a3"]
}, Open  ]],
Cell[219196, 4877, 1190, 27, 48, "Input",ExpressionUUID->"df9ae3da-52fc-492a-9b8d-9589c9e0af8a"],
Cell[220389, 4906, 634, 15, 28, "Input",ExpressionUUID->"3b55af4b-60ef-43ab-be1f-e829b9d3ed23"],
Cell[221026, 4923, 429, 10, 28, "Input",ExpressionUUID->"d640f839-5ffc-4132-865e-cae8836aa204"],
Cell[221458, 4935, 423, 10, 28, "Input",ExpressionUUID->"5f8b9cc7-a71a-4c83-b65d-69c317df4b2a"],
Cell[221884, 4947, 348, 8, 28, "Input",ExpressionUUID->"ef9d930e-46b1-4c08-ab9d-54b1b8bc8691"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222293, 4962, 271, 4, 64, "Subchapter",ExpressionUUID->"b341beda-5ee8-44a9-9312-619b2c8f81f1"],
Cell[CellGroupData[{
Cell[222589, 4970, 163, 3, 53, "Subsection",ExpressionUUID->"b8cae968-01be-4d76-93c4-914725dacb60"],
Cell[222755, 4975, 423, 8, 56, "Text",ExpressionUUID->"838c8185-e694-4949-9dd0-0c59b961e8bf"],
Cell[223181, 4985, 690, 20, 67, "Input",ExpressionUUID->"b207c621-7de3-43fa-8bdf-ef8e64f0d8bd"],
Cell[223874, 5007, 813, 20, 67, "Input",ExpressionUUID->"6a0e43c3-6e49-4acf-a0d5-faa81d3c50fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[224724, 5032, 173, 3, 37, "Subsection",ExpressionUUID->"e4d814b7-307b-44b1-8176-77d613190d5c"],
Cell[224900, 5037, 261, 6, 34, "Text",ExpressionUUID->"84309912-9796-472d-8aa5-a93ea74bc056"],
Cell[225164, 5045, 2147, 57, 124, "Input",ExpressionUUID->"83924ee4-b18d-4de6-b618-a5e212f482da"],
Cell[227314, 5104, 764, 19, 48, "Input",ExpressionUUID->"d3e7e3d0-876a-4f04-a706-ec1533d2392e"]
}, Closed]],
Cell[CellGroupData[{
Cell[228115, 5128, 176, 3, 37, "Subsection",ExpressionUUID->"a32b7405-2d28-4efa-ad38-9fc2d3fe6ff7"],
Cell[CellGroupData[{
Cell[228316, 5135, 958, 24, 28, "Input",ExpressionUUID->"2b8f0007-7a5b-43a9-8a6e-74ff32e52a1c"],
Cell[229277, 5161, 468, 13, 32, "Output",ExpressionUUID->"c61b8349-772e-459b-801f-872114982cd9"]
}, Open  ]],
Cell[229760, 5177, 254, 6, 34, "Text",ExpressionUUID->"fd6e9fa0-b5a6-4e96-bc4d-c468cb86b649"],
Cell[230017, 5185, 669, 18, 28, "Input",ExpressionUUID->"8de819ca-705a-4220-8130-c192af8d549b"],
Cell[230689, 5205, 470, 11, 28, "Input",ExpressionUUID->"47a0659c-4df1-4f1b-9d7b-b96779ba5cb1"],
Cell[231162, 5218, 173, 3, 34, "Text",ExpressionUUID->"3ef473e1-450e-4731-ae4d-89c5b79bd2a1"],
Cell[231338, 5223, 257, 5, 22, "Print",ExpressionUUID->"fac8500f-e172-4333-a9f7-7e02973e79b9"],
Cell[231598, 5230, 404, 11, 28, "Input",ExpressionUUID->"3e9a97a0-dd2f-4ec4-bfe3-85b303b130d6"],
Cell[232005, 5243, 475, 12, 28, "Input",ExpressionUUID->"6a2dbfc3-df24-43c6-a38b-c46b51dc77c7"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232529, 5261, 237, 4, 64, "Subchapter",ExpressionUUID->"47034db1-d0d6-4b23-af6e-0f6546045b3b"],
Cell[CellGroupData[{
Cell[232791, 5269, 178, 3, 53, "Subsection",ExpressionUUID->"25adc37f-e4d2-4d9f-a5ed-8612c20d46c3"],
Cell[232972, 5274, 199, 3, 34, "Text",ExpressionUUID->"ea42799b-6877-4b38-b569-13addb9d2db3"],
Cell[233174, 5279, 1144, 33, 105, "Input",ExpressionUUID->"27dca582-2b36-49e0-88a2-e3bb99bd2d01"],
Cell[234321, 5314, 241, 4, 28, "Input",ExpressionUUID->"9d2e7d89-461c-48fc-92b8-0015aa0d0da2"],
Cell[234565, 5320, 178, 3, 34, "Text",ExpressionUUID->"06fed56e-cf72-4eab-877f-8a2fa48264d1"],
Cell[234746, 5325, 198, 4, 28, "Input",ExpressionUUID->"505f5e4d-61b2-45a6-8a8a-10a30bdf2cee"]
}, Closed]],
Cell[CellGroupData[{
Cell[234981, 5334, 165, 3, 37, "Subsection",ExpressionUUID->"37567aef-8b97-425f-abdf-d82ae053b962"],
Cell[235149, 5339, 1202, 29, 86, "Input",ExpressionUUID->"b6a6e3c8-61e2-4f74-8ee2-1ecd45f55cfc"]
}, Closed]],
Cell[CellGroupData[{
Cell[236388, 5373, 372, 6, 37, "Subsection",ExpressionUUID->"29712ec0-7f9d-4363-bd69-fedc89b926de"],
Cell[CellGroupData[{
Cell[236785, 5383, 164, 3, 44, "Subsubsection",ExpressionUUID->"7b6f1d42-3372-4eae-9f3b-52b01fd6c20a"],
Cell[236952, 5388, 290, 6, 34, "Text",ExpressionUUID->"27abfcd5-f584-46cd-8df8-6aa1f69b339e"],
Cell[237245, 5396, 1075, 27, 105, "Input",ExpressionUUID->"e685e2ff-8cec-433d-90f3-cd1e4ba107a4"],
Cell[238323, 5425, 242, 4, 28, "Input",ExpressionUUID->"2c219bff-98ca-4149-8f73-f5d4c18d1d6f"],
Cell[238568, 5431, 245, 5, 28, "Input",ExpressionUUID->"58a620c5-fd10-4d1a-b298-19131a1f4f75"],
Cell[238816, 5438, 622, 15, 48, "Input",ExpressionUUID->"82cbf336-e0f4-43db-94e4-46d687594afa"],
Cell[239441, 5455, 315, 6, 28, "Input",ExpressionUUID->"e78c9670-4878-485f-9214-babcab9aa322"]
}, Closed]],
Cell[CellGroupData[{
Cell[239793, 5466, 169, 3, 36, "Subsubsection",ExpressionUUID->"75236b9f-93a9-4123-9f0b-e0d6063ca27a"],
Cell[239965, 5471, 265, 6, 34, "Text",ExpressionUUID->"8f267ee5-face-4d96-81f2-eb7a65fb2c80"],
Cell[240233, 5479, 612, 13, 28, "Input",ExpressionUUID->"b25ec0c8-9dee-4355-8b9d-d5d64b8430a5"],
Cell[240848, 5494, 681, 17, 28, "Input",ExpressionUUID->"2421eea9-a6e2-44b3-aab6-fe2b35f370c9"],
Cell[241532, 5513, 218, 5, 34, "Text",ExpressionUUID->"645118b4-3efb-4e87-b82b-7000552f32c3"],
Cell[241753, 5520, 484, 13, 28, "Input",ExpressionUUID->"3d0989cb-3f8b-44de-811e-bb762ce4f8ac"],
Cell[242240, 5535, 327, 7, 28, "Input",ExpressionUUID->"cb791753-16a4-485a-856b-2d0dfaadcfaf"]
}, Closed]],
Cell[CellGroupData[{
Cell[242604, 5547, 185, 3, 36, "Subsubsection",ExpressionUUID->"d4ebefef-2c40-4afa-86e2-01e82ef7e608"],
Cell[242792, 5552, 188, 3, 34, "Text",ExpressionUUID->"2c663dae-ce55-4c0e-9ead-798d28b2441d"],
Cell[CellGroupData[{
Cell[243005, 5559, 588, 14, 28, "Input",ExpressionUUID->"9b20175a-57c0-4449-83ec-169ccd6f1d3d"],
Cell[243596, 5575, 5181, 105, 73, "Print",ExpressionUUID->"f06fe0fb-b50f-4822-b830-086cb2ff9f50"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248838, 5687, 164, 3, 53, "Subsection",ExpressionUUID->"194fc7a6-9250-4380-ab91-b6f48a0893c5"],
Cell[CellGroupData[{
Cell[249027, 5694, 200, 3, 44, "Subsubsection",ExpressionUUID->"c83a9054-dd74-47d7-ad95-3b9d6619e603"],
Cell[249230, 5699, 235, 6, 34, "Text",ExpressionUUID->"c0285daf-d6f8-45d3-b7b0-a5175ce9af64"],
Cell[249468, 5707, 772, 20, 67, "Input",ExpressionUUID->"2c24046e-db0b-4e2d-93ce-548abb04f40d"],
Cell[250243, 5729, 194, 3, 34, "Text",ExpressionUUID->"ee6a7083-6d3f-4950-8cbe-77fbc5364897"],
Cell[CellGroupData[{
Cell[250462, 5736, 1209, 27, 105, "Input",ExpressionUUID->"fea884d6-0f69-4111-9d39-fa9e2a661e4d"],
Cell[251674, 5765, 51815, 1027, 159, "Output",ExpressionUUID->"8041104a-d0a0-48dd-993e-edebfdd8cbf7"],
Cell[303492, 6794, 53268, 1043, 159, "Output",ExpressionUUID->"f7f96c00-2519-47e7-bc97-2da38c49e0b4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[356809, 7843, 241, 4, 36, "Subsubsection",ExpressionUUID->"37c42ac9-91fe-46e0-b5f0-8a8055e0e5be"],
Cell[357053, 7849, 219, 5, 34, "Text",ExpressionUUID->"0f42b6f0-0ac9-4f04-a3fa-eb1d2d31934f"],
Cell[357275, 7856, 860, 21, 48, "Input",ExpressionUUID->"9b64546e-04bc-4e97-994c-1aede4a4f620"]
}, Closed]],
Cell[CellGroupData[{
Cell[358172, 7882, 195, 3, 36, "Subsubsection",ExpressionUUID->"e507394d-7fce-45ce-bab9-205bc132c31e"],
Cell[358370, 7887, 263, 6, 34, "Text",ExpressionUUID->"f1339e48-5568-4181-9103-13343d87b5ba"],
Cell[358636, 7895, 684, 14, 28, "Input",ExpressionUUID->"01726389-dcb2-4df4-a42f-14741a4d3969"],
Cell[359323, 7911, 446, 9, 28, "Input",ExpressionUUID->"377f4aec-7083-4a3a-92f1-91ca05e12f9b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[359818, 7926, 214, 4, 53, "Subsection",ExpressionUUID->"46cb5c22-df36-42f1-8278-128db9e6546d"],
Cell[CellGroupData[{
Cell[360057, 7934, 168, 3, 44, "Subsubsection",ExpressionUUID->"46110b45-9f52-4171-ae7f-cc9053aa8a39"],
Cell[CellGroupData[{
Cell[360250, 7941, 242, 4, 28, "Input",ExpressionUUID->"4cc308f1-c626-492a-91a8-f47d2cfafa5c"],
Cell[360495, 7947, 762, 22, 116, "Output",ExpressionUUID->"cf2246ab-4c99-4e8b-83d6-f46ec253570d"]
}, Open  ]],
Cell[361272, 7972, 180, 3, 34, "Text",ExpressionUUID->"9b1f7978-adca-4e60-bbe3-3c5f3c0ab3f1"],
Cell[361455, 7977, 664, 13, 28, "Input",ExpressionUUID->"c4046150-0e85-4051-a718-7bc3b4410eb8"],
Cell[362122, 7992, 954, 27, 67, "Input",ExpressionUUID->"81b68c3e-6296-44bd-95a1-16e20540b96c"],
Cell[363079, 8021, 343, 7, 34, "Text",ExpressionUUID->"b7b2a8a2-13df-4751-8d89-c4d73b0ea43f"],
Cell[363425, 8030, 1406, 35, 48, "Input",ExpressionUUID->"0e3b5a12-1999-4716-a93f-1cb468138eef"],
Cell[364834, 8067, 301, 6, 28, "Input",ExpressionUUID->"9219a9f5-b371-4dfb-9bc4-f5c419d321ba"],
Cell[365138, 8075, 270, 6, 34, "Text",ExpressionUUID->"db2d0a1f-9d4a-4bf6-94d9-6893ddbeb429"],
Cell[365411, 8083, 671, 17, 28, "Input",ExpressionUUID->"81d0d641-85ea-42a6-9641-aa770949ecd2"],
Cell[366085, 8102, 340, 6, 28, "Input",ExpressionUUID->"28bec43e-e76d-4463-9d29-c32ba0fd6212"]
}, Closed]],
Cell[CellGroupData[{
Cell[366462, 8113, 283, 4, 36, "Subsubsection",ExpressionUUID->"5df7f489-c3af-447f-892b-2d741b7472b9"],
Cell[366748, 8119, 197, 3, 34, "Text",ExpressionUUID->"827dae19-915f-47c7-88e0-29476a68b6eb"],
Cell[366948, 8124, 408, 7, 28, "Input",ExpressionUUID->"6288443b-53ef-46c2-adb6-5fd242877ecd"],
Cell[367359, 8133, 557, 15, 28, "Input",ExpressionUUID->"7d283bc0-0b1c-4f90-843a-7e94e6175fe9"],
Cell[367919, 8150, 192, 3, 34, "Text",ExpressionUUID->"c7e1f636-4a65-44ba-97f5-3c532c2ec232"],
Cell[368114, 8155, 746, 20, 67, "Input",ExpressionUUID->"016438a3-9162-4cbf-bae2-0cd4f7115cfa"],
Cell[368863, 8177, 240, 6, 34, "Text",ExpressionUUID->"811ccd9c-c131-4267-85e8-406bc2e46d47"],
Cell[369106, 8185, 898, 21, 28, "Input",ExpressionUUID->"a7a27062-ebb2-4ed3-a1d1-3025b602e14b"]
}, Closed]],
Cell[CellGroupData[{
Cell[370041, 8211, 229, 4, 36, "Subsubsection",ExpressionUUID->"e037ed65-c2cd-4cc5-8065-ba7af72e972b"],
Cell[370273, 8217, 277, 6, 34, "Text",ExpressionUUID->"da9608bd-9f5a-4fa4-b8a1-f1650dab7c2a"],
Cell[370553, 8225, 325, 7, 28, "Input",ExpressionUUID->"3fe6c7c2-00b5-4d1e-b4f8-750688380984"],
Cell[370881, 8234, 215, 3, 28, "Input",ExpressionUUID->"d05c621c-17a6-4dab-b5a8-744183e72ded"],
Cell[371099, 8239, 227, 5, 34, "Text",ExpressionUUID->"c2e709da-971c-4de4-a9f5-34d1b012c9b1"],
Cell[371329, 8246, 656, 17, 48, "Input",ExpressionUUID->"cfeacfe6-ee62-43ac-999d-2a12cb57a737"],
Cell[371988, 8265, 377, 8, 28, "Input",ExpressionUUID->"ecc0c585-9da4-4f6a-a6fe-b989e06865e6"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372426, 8280, 199, 3, 64, "Subchapter",ExpressionUUID->"3b817272-df1a-4e68-aaea-c22d9c35e327"],
Cell[CellGroupData[{
Cell[372650, 8287, 168, 3, 53, "Subsection",ExpressionUUID->"16e4c173-1b98-4694-a73e-a9458b44e628"],
Cell[372821, 8292, 214, 5, 34, "Text",ExpressionUUID->"a933a9a3-528b-4c0e-a038-17f710e1fe43"],
Cell[CellGroupData[{
Cell[373060, 8301, 944, 25, 67, "Input",ExpressionUUID->"07aa0cbd-4fe8-4a6b-9db7-30e546e930eb"],
Cell[374007, 8328, 1833, 30, 32, "Output",ExpressionUUID->"8a3e72b1-bd91-45a6-af68-2184474f4c36"],
Cell[375843, 8360, 17930, 478, 627, "Output",ExpressionUUID->"551d144d-d9d8-471c-962c-bcfc7c16006b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[393822, 8844, 229, 4, 37, "Subsection",ExpressionUUID->"2cfca995-51c1-4930-93bd-525f0bdfb9d5"],
Cell[CellGroupData[{
Cell[394076, 8852, 3169, 71, 219, "Input",ExpressionUUID->"b250ee77-119c-4a6c-ae60-654c651ae432"],
Cell[397248, 8925, 269013, 4533, 271, "Output",ExpressionUUID->"c61aea08-c863-4859-9ed5-7b13d14f7af0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[666310, 13464, 249, 4, 37, "Subsection",ExpressionUUID->"bdc44691-f744-4c66-a1dd-7438bdd242a3"],
Cell[CellGroupData[{
Cell[666584, 13472, 167, 3, 44, "Subsubsection",ExpressionUUID->"59807f79-d229-49e5-b637-790a17413076"],
Cell[CellGroupData[{
Cell[666776, 13479, 3458, 70, 200, "Input",ExpressionUUID->"869625c4-c640-4b6d-963c-5879d140481b"],
Cell[670237, 13551, 89100, 1508, 384, "Output",ExpressionUUID->"6ae423fc-4ca8-4e00-b49f-98aab5126904"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[759386, 15065, 259, 4, 36, "Subsubsection",ExpressionUUID->"dab93187-a908-4ba7-ae93-e35b0b7d7535"],
Cell[CellGroupData[{
Cell[759670, 15073, 2078, 51, 200, "Input",ExpressionUUID->"7e2a2150-d80c-4034-83d6-d9565cf12a88"],
Cell[761751, 15126, 89449, 1514, 384, "Output",ExpressionUUID->"73d0c1a6-c9fb-4e5e-b351-53aaf3afe346"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[851249, 16646, 160, 3, 36, "Subsubsection",ExpressionUUID->"11b0bc08-716e-4837-a55b-d3c98505048d"],
Cell[CellGroupData[{
Cell[851434, 16653, 2471, 58, 200, "Input",ExpressionUUID->"d097a75f-b5e4-4687-abe5-6b28aa73ed5f"],
Cell[853908, 16713, 89124, 1509, 384, "Output",ExpressionUUID->"c8d40f87-9f07-41a1-a5be-a276ab024bc4"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[943093, 18229, 176, 3, 53, "Subsection",ExpressionUUID->"6705b400-369d-4acb-94b1-826717b38934"],
Cell[943272, 18234, 7302, 129, 219, "Input",ExpressionUUID->"3edd32fa-7110-4380-a1ac-e91a7e073cb0"],
Cell[950577, 18365, 2491, 58, 105, "Input",ExpressionUUID->"1aef8f21-e40a-49dc-bf08-ddabcbdf3501"],
Cell[953071, 18425, 579, 13, 28, "Input",ExpressionUUID->"04a56dc3-b7cd-4cbf-ac36-5103d5b1f965"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[953699, 18444, 249, 4, 64, "Subchapter",ExpressionUUID->"1751ae4d-03af-43ab-814a-5f1f74188c44"],
Cell[CellGroupData[{
Cell[953973, 18452, 175, 3, 53, "Subsection",ExpressionUUID->"d31f39f7-0271-44c7-bb22-4483ca591ade"],
Cell[954151, 18457, 189, 3, 34, "Text",ExpressionUUID->"10ef7ece-7769-4d88-bcb0-24ae840e2ae7"],
Cell[954343, 18462, 1608, 47, 143, "Input",ExpressionUUID->"5bf5b320-1c49-437a-99de-8917ff7c9d0c"],
Cell[955954, 18511, 231, 4, 34, "Text",ExpressionUUID->"924a6c5c-f5e2-49c7-9aec-d99cba543428"],
Cell[956188, 18517, 1794, 57, 143, "Input",ExpressionUUID->"ac329d16-f122-4398-9d78-bd98c3eb7a70"],
Cell[957985, 18576, 225, 6, 34, "Text",ExpressionUUID->"1460edd8-ebc9-4085-89c9-9648c5994b0c"],
Cell[958213, 18584, 932, 25, 67, "Input",ExpressionUUID->"8ef48365-f337-4591-929a-e3834a62a6b4"],
Cell[959148, 18611, 152, 3, 34, "Text",ExpressionUUID->"a46f428a-dc95-4a9c-94ee-db51bba31c07"],
Cell[959303, 18616, 642, 16, 48, "Input",ExpressionUUID->"4c01170b-1dc6-4a6f-94bb-326f8fac8dcb"],
Cell[959948, 18634, 283, 4, 34, "Text",ExpressionUUID->"26edf3b3-8ad9-461c-86ea-f42fcabaaf29"],
Cell[CellGroupData[{
Cell[960256, 18642, 622, 16, 48, "Input",ExpressionUUID->"dc246c71-2d8c-4755-93db-3ddef0094fa6"],
Cell[960881, 18660, 477, 9, 32, "Output",ExpressionUUID->"3f00324c-cecf-48de-8c45-a725b67b6c96"]
}, Open  ]],
Cell[961373, 18672, 325, 6, 34, "Text",ExpressionUUID->"2870d320-5902-4ad9-9183-18b8640c365a"],
Cell[CellGroupData[{
Cell[961723, 18682, 1373, 33, 67, "Input",ExpressionUUID->"bc673003-00c7-4136-ab12-9df2d7f84eeb"],
Cell[963099, 18717, 298, 6, 32, "Output",ExpressionUUID->"f712621c-77a9-4029-9e28-ffce3d3a020c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[963446, 18729, 241, 4, 37, "Subsection",ExpressionUUID->"70957c7c-9985-4811-a1db-22a102f78f7c"],
Cell[963690, 18735, 924, 22, 48, "Input",ExpressionUUID->"936e9f89-0d66-473b-9277-3d000d5d55d5"],
Cell[964617, 18759, 223, 5, 34, "Text",ExpressionUUID->"8fa6be86-0e1e-4c2d-92fd-815afc33504c"],
Cell[964843, 18766, 579, 14, 48, "Input",ExpressionUUID->"16a20155-a9d0-46dd-9004-3126334dafa9"],
Cell[965425, 18782, 631, 15, 48, "Input",ExpressionUUID->"d9be655b-99c1-4a49-92e9-1066227e6a3d"],
Cell[966059, 18799, 246, 4, 34, "Text",ExpressionUUID->"ca482818-c0ff-4fd6-a65d-7ccf593d5fbc"],
Cell[966308, 18805, 1831, 49, 48, "Input",ExpressionUUID->"e1644f4b-cc91-419f-a202-938b3f310269"],
Cell[968142, 18856, 294, 4, 34, "Text",ExpressionUUID->"eb75b5be-106f-402c-87c8-a260f27e02a9"],
Cell[968439, 18862, 2010, 52, 48, "Input",ExpressionUUID->"73bedda0-2b21-40b2-b6f2-ac649cc09720"],
Cell[970452, 18916, 1471, 33, 86, "Input",ExpressionUUID->"e72fb9d0-91ec-427c-bffa-63847b71c7e9"],
Cell[971926, 18951, 1241, 31, 86, "Input",ExpressionUUID->"7039e879-900b-4789-b0f3-47a256fa0bbf"],
Cell[973170, 18984, 1521, 33, 86, "Input",ExpressionUUID->"e4f0b636-a1bc-40f5-a4ba-1f9a6c814878"],
Cell[974694, 19019, 1294, 32, 86, "Input",ExpressionUUID->"9ea6aef0-d1d8-4b93-aa04-3764b091c42d"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

