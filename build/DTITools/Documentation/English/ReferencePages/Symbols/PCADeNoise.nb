(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18514,        470]
NotebookOptionsPosition[     14882,        386]
NotebookOutlinePosition[     17184,        440]
CellTagsIndexPosition[     17141,        437]
WindowTitle->PCADeNoise
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell",ExpressionUUID->
     "10db1c50-35c4-4eee-abf0-0bda09fe8ad5"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"c06135cf-3d81-45f2-b628-106ef86069f6"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DenoiseTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/DenoiseTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "34a734c3-dbab-40fe-a521-5998ea873f14"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"35d31203-3fa6-4b59-81b3-4c2ae0efcb4a"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/PCADeNoise\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/PCADeNoise"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/\
PCADeNoise.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$158649], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/PCADeNoise", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "92e62922-7773-41c3-a5a5-18eae14a9274"]
    }], "AnchorBar",ExpressionUUID->"f2698757-b627-45f7-a678-3aa904aa79cb"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"5cf65e5c-de23-4d3a-94fc-506c4c202016"],

Cell[TextData[{
 Cell["PCADeNoise", "ObjectName",ExpressionUUID->
  "fa1d6121-a658-4860-aaa5-4bc94adcf735"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8],
   Selectable->False]],ExpressionUUID->"2531e6f8-f390-45ab-a348-0d0961ff183f"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "21dd474c-9097-459c-b09a-4a1359bd9f66"]
}], "ObjectNameGrid",ExpressionUUID->"033ac326-f02c-46ca-968e-aed58138ffc4"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PCADeNoise", "[", 
       StyleBox["data", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "2833f64c-8559-4e78-98f4-1f0f0ad42666"],
     "\[LineSeparator]removes rician noise from the data with PCA. "
    }],ExpressionUUID->"df645779-3755-4b7b-a470-8cde1ed71c22"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PCADeNoise", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", " ", 
        StyleBox["mask", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "2ee8a011-56a9-4f77-ab11-74656478ca20"],
     "\[LineSeparator]removes rician noise from the data with PCA only \
withing the mask. "
    }],ExpressionUUID->"51c5ac03-f278-4374-b682-a805ffea4095"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PCADeNoise", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", " ", 
        StyleBox["mask", "TI"], ",", " ", 
        StyleBox["sig", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "dbb149e2-4cea-4381-b807-352105078638"],
     "\[LineSeparator]removes rician noise from the data with PCA only \
withing the mask using sig as prior knowledge or fixed value. Output is de \
{data denoise, sigma map} by default if ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAOutput"]],"paclet:DTITools/ref/PCAOutput"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "087c6933-3c8d-4741-9e72-a578603831ba"],
     " is Full then fitted {data dnoise , {sigma fit, average sigma}, {number \
components, number of fitted voxesl, number of max fits}, total fit -time per \
500 ittt}."
    }],ExpressionUUID->"5429de26-bfcd-4d6c-a742-0c7293e064d5"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, 
   "RowsIndexed" -> \
{}}},ExpressionUUID->"8551c4df-451c-42f4-b46b-d7864141473a"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6],
     Selectable->False]],ExpressionUUID->
    "8a512c09-6f48-48eb-8819-1b5ed4f84dac"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"93a3b143-a8fb-4ceb-b021-d75bb3af8f2b"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"8d41d524-5a2d-4f8c-83d8-2ebb34814151"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1,ExpressionUUID->"236585fc-d3a1-4721-8723-2c157d7e1510"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"d53e067d-20a2-479c-a6df-3c2b6409fc8d"],

Cell["The following options can be given: ", "Notes",ExpressionUUID->"c731083e-4dd0-42d2-8984-61265829a115"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "bd17bc37-f132-45df-905b-4cbfc09d3713"], 
    ButtonBox["PCAKernel",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PCAKernel"], "5", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAKernel"]],"paclet:DTITools/ref/PCAKernel"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "841476f8-8375-4a2f-9c1a-c90837929359"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "d8461e60-7597-4cb8-abf5-11945900ba96"],
     ". It sets the kernel size."
    }], "TableText",ExpressionUUID->"9494720d-61d5-40ec-8f24-ba5e76279fa5"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "6c203fce-d9b4-4d3e-bf9a-db5ecf2e8908"], 
    ButtonBox["BinSize",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BinSize"], "5", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BinSize"]],"paclet:DTITools/ref/BinSize"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "cbbc661c-bb18-4d64-a2f4-a7fb0a0522ae"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "80022d89-0e3e-4ccc-940b-e3e9a2d44045"],
     ". Sets the binsize."
    }], "TableText",ExpressionUUID->"fb85ce5f-e3b5-4ff8-9825-e0be244ef552"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "742a5511-894e-45b8-801f-276b3281f528"], 
    ButtonBox["InitializationP",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/InitializationP"], "10", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["InitializationP"]],"paclet:DTITools/ref/InitializationP"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "1f5b3c87-5dba-4e2a-bc86-a14240fefd66"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "73436080-32e7-4559-9504-d732840df53a"],
     ". How many signal PCA components are initialized."
    }], "TableText",ExpressionUUID->"2228b3a1-ea25-4965-8e45-1b5aa2ce76b3"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "7b28633e-d839-40db-bb63-74ba0176221e"], 
    ButtonBox["MaxIterationsFit",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MaxIterationsFit"], "10", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MaxIterationsFit"]],"paclet:DTITools/ref/MaxIterationsFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "b5a80905-b536-474a-b8a2-e2c3e7d04177"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "ac099ab6-0edf-4cd0-83a6-c979979f4ee5"],
     ". How many itterations can be used."
    }], "TableText",ExpressionUUID->"afaff049-7aa9-437a-8f7e-e0ada1ad5722"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "168cc47d-cb49-4ff3-928e-f0572fec3a90"], 
    ButtonBox["FitSigma",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/FitSigma"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FitSigma"]],"paclet:DTITools/ref/FitSigma"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "f9f2ec7e-769a-431a-9085-9912f917b109"],
     " is an option of ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAFitHist"]],"paclet:DTITools/ref/PCAFitHist"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "d14cf4e7-a3ef-4594-80d7-d8f0e4fc61db"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAFitEq"]],"paclet:DTITools/ref/PCAFitEq"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "3e3ca10d-06b3-4d19-9571-93ea7af989cd"],
     " and ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "21e32475-d623-4533-9741-415b2c227aad"],
     ", if set ",
     "True",
     " sig is fitted if set ",
     "False",
     " sigma is fixed to input value."
    }], "TableText",ExpressionUUID->"7b49b6f9-e119-426e-8c6c-2ab3b8e01005"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b2b12365-ac0d-46ad-a960-2a814e5c6bc3"], 
    ButtonBox["PCAOutput",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PCAOutput"], 
    ButtonBox["Full",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Full"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAOutput"]],"paclet:DTITools/ref/PCAOutput"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "7e50cdf9-7707-4461-a41b-9eccd7446c75"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "edb7b63d-2d76-4d92-8fe6-65554fd119de"],
     ". ",
     "If",
     " output is full the output is {datao, {output[[1]], sigmat}, \
{output[[2]], output[[3]], j}, timetot}.\nElse the output is {datao, \
sigmat}."
    }], "TableText",ExpressionUUID->"315f8068-14a1-430d-a528-dc1d0057123a"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "ccd3b8e6-3a6e-4107-a9dc-0f25d536d484"], 
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], 
    ButtonBox["Histogram",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Histogram"], Cell["\<\
Method is an option for various algorithm-intensive functions that specifies \
what internal methods they should use.\
\>", "TableText",ExpressionUUID->"d3a9ab97-377a-404f-bbd3-38ff6dc64606"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, 
      True}}}},ExpressionUUID->"f2d94fff-c280-42b0-b73e-debe230127fe"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"0a1bd272-44bd-4b01-9b05-c5056c85a648"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6],
   Selectable->False]],ExpressionUUID->"84211b21-b16d-499c-a7fd-d480ed47ad62"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"fb636355-74db-475d-b36c-2e58f2225108"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"dc5445f8-ad2a-4e42-91de-b0cb8e068a1c"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["DenoiseTools"]],"paclet:DTITools/guide/DenoiseTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1,ExpressionUUID->"48abe531-9ca9-4333-bda2-c89e36113e20"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"2d502970-1759-4169-a80b-8dd81f95f1c7"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"PCADeNoise",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 8, 9, 33, 56.5960759}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DTITools`DenoiseTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "PCADeNoise[data] removes rician noise from the data with PCA. \
PCADeNoise[data, mask] removes rician noise from the data with PCA only \
withing the mask. PCADeNoise[data, mask, sig] removes rician noise from the \
data with PCA only withing the mask using sig as prior knowledge or fixed \
value. Output is de {data denoise, sigma map} by default if PCAOutput is Full \
then fitted {data dnoise , {sigma fit, average sigma}, {number components, \
number of fitted voxesl, number of max fits}, total fit -time per 500 ittt}.",
     "synonyms" -> {}, "tabletags" -> {}, "title" -> "PCADeNoise", 
    "titlemodifier" -> "", "windowtitle" -> "PCADeNoise", "type" -> "Symbol", 
    "uri" -> "DTITools/ref/PCADeNoise"}},
CellContext->"Global`",
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 3450, 77, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"5cf65e5c-de23-4d3a-94fc-506c4c202016",
 CellID->1],
Cell[4035, 100, 537, 15, 70, "ObjectNameGrid", "ExpressionUUID" -> \
"033ac326-f02c-46ca-968e-aed58138ffc4"],
Cell[4575, 117, 1970, 45, 70, "Usage", "ExpressionUUID" -> \
"8551c4df-451c-42f4-b46b-d7864141473a"],
Cell[CellGroupData[{
Cell[6570, 166, 985, 28, 70, "NotesSection", "ExpressionUUID" -> \
"236585fc-d3a1-4721-8723-2c157d7e1510",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[7558, 196, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"d53e067d-20a2-479c-a6df-3c2b6409fc8d"],
Cell[7647, 198, 108, 0, 70, "Notes", "ExpressionUUID" -> \
"c731083e-4dd0-42d2-8984-61265829a115"],
Cell[7758, 200, 6178, 152, 70, "3ColumnTableMod", "ExpressionUUID" -> \
"f2d94fff-c280-42b0-b73e-debe230127fe"],
Cell[13939, 354, 86, 0, 70, "SectionFooterSpacer", "ExpressionUUID" -> \
"0a1bd272-44bd-4b01-9b05-c5056c85a648"]
}, Closed]],
Cell[CellGroupData[{
Cell[14062, 359, 408, 13, 70, "MoreAboutSection", "ExpressionUUID" -> \
"fb636355-74db-475d-b36c-2e58f2225108",
 CellID->38303248],
Cell[14473, 374, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"dc5445f8-ad2a-4e42-91de-b0cb8e068a1c"],
Cell[14562, 376, 223, 5, 70, "MoreAbout", "ExpressionUUID" -> \
"48abe531-9ca9-4333-bda2-c89e36113e20",
 CellID->1]
}, Open  ]],
Cell[14800, 384, 78, 0, 70, "FooterCell", "ExpressionUUID" -> \
"2d502970-1759-4169-a80b-8dd81f95f1c7"]
}
]
*)

(* End of internal cache information *)
