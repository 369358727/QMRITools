(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     13028,        387]
NotebookOptionsPosition[     10363,        317]
NotebookOutlinePosition[     12447,        369]
CellTagsIndexPosition[     12404,        366]
WindowTitle->PCADeNoise
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DenoiseTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/DenoiseTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/PCADeNoise\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/PCADeNoise"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/\
PCADeNoise.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$135907], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/PCADeNoise", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["PCADeNoise", "ObjectName"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8]]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell["\<\
PCADeNoise[data]\[LineSeparator]removes rician noise from the data with PCA. \
\
\>"]},
   {"", Cell["\<\
PCADeNoise[data, mask]\[LineSeparator]removes rician noise from the data with \
PCA only withing the mask. \
\>"]},
   {"", Cell["\<\
PCADeNoise[data, mask, sig]\[LineSeparator]removes rician noise from the data \
with PCA only withing the mask using sig as prior knowledge or fixed value.\
\>"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6]]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PCAKernel",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PCAKernel"], "5", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAKernel"]],"paclet:DTITools/ref/PCAKernel"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["PCADeNoise"], "InlineFormula"],
     ". It sets the kernel size."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BinSize",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BinSize"], "5", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BinSize"]],"paclet:DTITools/ref/BinSize"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["PCADeNoise"], "InlineFormula"],
     ". Sets the binsize."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["InitializationP",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/InitializationP"], "10", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["InitializationP"]],"paclet:DTITools/ref/InitializationP"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["PCADeNoise"], "InlineFormula"],
     ". How many signal PCA components are initialized."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MaxIterationsFit",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MaxIterationsFit"], "10", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MaxIterationsFit"]],"paclet:DTITools/ref/MaxIterationsFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["PCADeNoise"], "InlineFormula"],
     ". How many itterations can be used."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["FitSigma",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/FitSigma"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FitSigma"]],"paclet:DTITools/ref/FitSigma"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAFitHist"]],"paclet:DTITools/ref/PCAFitHist"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAFitEq"]],"paclet:DTITools/ref/PCAFitEq"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData["PCADeNoise"], "InlineFormula"],
     ", if set ",
     "True",
     " sig is fitted if set ",
     "False",
     " sigma is fixed to input value"
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PCAOutput",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PCAOutput"], 
    ButtonBox["Full",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Full"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAOutput"]],"paclet:DTITools/ref/PCAOutput"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option of ",
     Cell[BoxData["PCADeNoise"], "InlineFormula"],
     ". ",
     "If",
     " output is full the output is {datao, {output[[1]], sigmat}, \
{output[[2]], output[[3]], j}, timetot}.\nElse the output is {datao, \
sigmat}."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], 
    ButtonBox["Histogram",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Histogram"], Cell["\<\
Method is an option for various algorithm-intensive functions that specifies \
what internal methods they should use.\
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True}}}}],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6]]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["DenoiseTools"]],"paclet:DTITools/guide/DenoiseTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"PCADeNoise",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2016, 12, 14, 11, 18, 23.5233010}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DTITools`DenoiseTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "PCADeNoise[data] removes rician noise from the data with PCA. \
PCADeNoise[data, mask] removes rician noise from the data with PCA only \
withing the mask. PCADeNoise[data, mask, sig] removes rician noise from the \
data with PCA only withing the mask using sig as prior knowledge or fixed \
value.", "synonyms" -> {}, "tabletags" -> {}, "title" -> "PCADeNoise", 
    "titlemodifier" -> "", "windowtitle" -> "PCADeNoise", "type" -> "Symbol", 
    "uri" -> "DTITools/ref/PCADeNoise"}},
CellContext->"Global`",
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 3045, 74, 70, "AnchorBarGrid",
 CellID->1],
Cell[3630, 97, 287, 11, 70, "ObjectNameGrid"],
Cell[3920, 110, 608, 17, 70, "Usage"],
Cell[CellGroupData[{
Cell[4553, 131, 730, 24, 70, "NotesSection",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[5286, 157, 31, 0, 70, "SectionHeaderSpacer"],
Cell[5320, 159, 53, 0, 70, "Notes"],
Cell[5376, 161, 4393, 123, 70, "3ColumnTableMod"],
Cell[9772, 286, 31, 0, 70, "SectionFooterSpacer"]
}, Closed]],
Cell[CellGroupData[{
Cell[9840, 291, 276, 12, 70, "MoreAboutSection",
 CellID->38303248],
Cell[10119, 305, 31, 0, 70, "SectionHeaderSpacer"],
Cell[10153, 307, 168, 5, 70, "MoreAbout",
 CellID->1]
}, Open  ]],
Cell[10336, 315, 23, 0, 70, "FooterCell"]
}
]
*)

(* End of internal cache information *)
