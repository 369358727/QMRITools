(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18516,        470]
NotebookOptionsPosition[     14882,        386]
NotebookOutlinePosition[     17186,        440]
CellTagsIndexPosition[     17143,        437]
WindowTitle->PCADeNoise
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell",ExpressionUUID->
     "f4e1fda9-e74b-41ca-8890-76641650a54a"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"3b414087-b929-453e-8800-8ae3651c326d"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DenoiseTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/DenoiseTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "7e17f024-0ee0-4c6c-99aa-70284408a30b"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"92f79bc8-cdf6-4461-9ddf-0d5ece89c87c"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/PCADeNoise\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/PCADeNoise"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/\
PCADeNoise.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$154843], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/PCADeNoise", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "156c5629-8cb4-475e-8457-947f179be990"]
    }], "AnchorBar",ExpressionUUID->"6606b6d0-3dd7-47c7-8a73-c297922ef6c7"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"6ac63da9-6724-4c93-bb42-f754eaf19b7b"],

Cell[TextData[{
 Cell["PCADeNoise", "ObjectName",ExpressionUUID->
  "3352b38a-3e1b-4111-8318-d409f2853455"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8],
   Selectable->False]],ExpressionUUID->"6850779e-42a1-41f9-9483-c29c8d64aa2a"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "5c38205e-befe-4845-9316-9f0b28a1d955"]
}], "ObjectNameGrid",ExpressionUUID->"ec5cd182-da48-42a4-a91a-755ff2578f87"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PCADeNoise", "[", 
       StyleBox["data", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "f6a31219-9843-4b2b-8188-699b34e897e8"],
     "\[LineSeparator]removes rician noise from the data with PCA. "
    }],ExpressionUUID->"0ee00ae7-42ff-4299-99f6-c792329173c3"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PCADeNoise", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", " ", 
        StyleBox["mask", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "43521982-dc20-497f-b146-94d79ad1d04a"],
     "\[LineSeparator]removes rician noise from the data with PCA only \
withing the mask. "
    }],ExpressionUUID->"e78b7825-ffec-4386-a10e-fbdd6682c596"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"PCADeNoise", "[", 
       RowBox[{
        StyleBox["data", "TI"], ",", " ", 
        StyleBox["mask", "TI"], ",", " ", 
        StyleBox["sig", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "41db9116-a525-4c56-86ee-8c9f8c49ee1c"],
     "\[LineSeparator]removes rician noise from the data with PCA only \
withing the mask using sig as prior knowledge or fixed value. Output is de \
{data denoise, sigma map} by default if ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAOutput"]],"paclet:DTITools/ref/PCAOutput"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "591ce2c6-d700-45cf-b51b-65d931c3e02d"],
     " is Full then fitted {data dnoise , {sigma fit, average sigma}, {number \
components, number of fitted voxesl, number of max fits}, total fit -time per \
500 ittt}."
    }],ExpressionUUID->"3a9a9e0a-1a6c-42a5-ba15-67674dc25dbe"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, 
   "RowsIndexed" -> \
{}}},ExpressionUUID->"c49906c0-8454-443c-a679-ded8b9c85673"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6],
     Selectable->False]],ExpressionUUID->
    "fc276e54-4e59-4cc7-a99d-e52360cef306"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"020d1ffa-a1bb-4508-8c8c-5fba2265f334"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"eb12c09e-379e-4721-b317-55b06e679fb4"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1,ExpressionUUID->"dfbb915c-e5fe-4f66-a133-ab3229278019"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"470f36d4-f90e-49ba-b2b7-85706d256f6f"],

Cell["The following options can be given: ", "Notes",ExpressionUUID->"d48d3eea-e201-4e1e-bfe0-a4887a04ac2f"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "9a0217ba-070c-401e-8ebe-d7e89cb233cb"], 
    ButtonBox["PCAKernel",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PCAKernel"], "5", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAKernel"]],"paclet:DTITools/ref/PCAKernel"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "ec7a8852-063f-4944-9deb-52274d9f83d4"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "0ca3792f-0ef3-4e28-ab1d-c74c94b14c8b"],
     ". It sets the kernel size."
    }], "TableText",ExpressionUUID->"6de190bb-ae15-4790-b0eb-c8baa6faf2fb"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "91fcb16c-9ea6-43e4-8b54-1a953c51c134"], 
    ButtonBox["BinSize",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BinSize"], "5", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BinSize"]],"paclet:DTITools/ref/BinSize"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "2619df48-0bec-4607-b97f-651bd83d8187"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "0c42e6f3-3bb6-49ad-8f8a-d3cfffa6c3c5"],
     ". Sets the binsize."
    }], "TableText",ExpressionUUID->"ea9bedbf-55d6-4a49-89c8-86f656097d3a"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "afb832b2-202f-4c1c-8be1-ad263f8035b7"], 
    ButtonBox["InitializationP",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/InitializationP"], "10", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["InitializationP"]],"paclet:DTITools/ref/InitializationP"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "2ea00154-12b3-46e6-b0a7-0429eea4c768"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "49502c3e-4cd9-4040-b8c4-b3f8d424ff95"],
     ". How many signal PCA components are initialized."
    }], "TableText",ExpressionUUID->"522f2faa-0058-4e4d-b916-c09fb3b7f611"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "a63e1332-31f1-48a0-8c8a-7037467f9715"], 
    ButtonBox["MaxIterationsFit",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MaxIterationsFit"], "10", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MaxIterationsFit"]],"paclet:DTITools/ref/MaxIterationsFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "40b4314b-8b81-4410-9afb-e870a1eb6b5b"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "5e8da282-4ea5-457b-bbc5-de02f878728d"],
     ". How many itterations can be used."
    }], "TableText",ExpressionUUID->"518d6beb-6762-4b6a-a31d-7df0c73cfb76"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "36556d95-18c3-4998-af0d-c5523823362c"], 
    ButtonBox["FitSigma",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/FitSigma"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["FitSigma"]],"paclet:DTITools/ref/FitSigma"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "a7179a4e-f216-439f-ab31-a2f9ede6aa82"],
     " is an option of ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAFitHist"]],"paclet:DTITools/ref/PCAFitHist"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "de89cbe0-c4ee-4ca8-88eb-30c294bc72cf"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAFitEq"]],"paclet:DTITools/ref/PCAFitEq"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "3b9a1111-4285-4f68-b8cc-fc3801e76020"],
     " and ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "ff6151a8-1915-40bf-8e6c-57d66c66afaf"],
     ", if set ",
     "True",
     " sig is fitted if set ",
     "False",
     " sigma is fixed to input value."
    }], "TableText",ExpressionUUID->"e16e604d-5dc8-436b-8380-172febc1248f"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "1fc08569-792b-4c36-816a-9b36eee33211"], 
    ButtonBox["PCAOutput",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PCAOutput"], 
    ButtonBox["Full",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Full"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PCAOutput"]],"paclet:DTITools/ref/PCAOutput"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "3d71da13-d59e-4248-997f-2955972aff5a"],
     " is an option of ",
     Cell[BoxData[
     "PCADeNoise"], "InlineFormula",ExpressionUUID->
      "7df07654-6cc1-402c-9d3a-7e064932428a"],
     ". ",
     "If",
     " output is full the output is {datao, {output[[1]], sigmat}, \
{output[[2]], output[[3]], j}, timetot}.\nElse the output is {datao, \
sigmat}."
    }], "TableText",ExpressionUUID->"05d91870-56a7-4b23-8be5-8e54aabff192"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "d339af84-6f94-4155-905d-10d059809ca0"], 
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], 
    ButtonBox["Histogram",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Histogram"], Cell["\<\
Method is an option for various algorithm-intensive functions that specifies \
what internal methods they should use.\
\>", "TableText",ExpressionUUID->"aff80476-e7af-497e-9e05-5e0fe302bb40"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, 
      True}}}},ExpressionUUID->"23fe9af4-4e22-4d88-9c32-4c14e4bef066"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"c4a98702-e758-448b-9193-e8f643576b28"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6],
   Selectable->False]],ExpressionUUID->"ea36be55-7803-4b68-8c64-6c7bbafc385d"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"0ad2d2e7-315d-4db2-bfa9-14a34ff6a3ff"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"c98e7164-52ea-4f3f-a59d-9660fc985a61"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["DenoiseTools"]],"paclet:DTITools/guide/DenoiseTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1,ExpressionUUID->"561ff9b4-9a8a-4891-a926-c8f88868757e"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"376bc8d3-0541-4df6-afaa-dbcfc17dde50"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"PCADeNoise",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 5, 15, 14, 25, 30.1700693}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DTITools`DenoiseTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "PCADeNoise[data] removes rician noise from the data with PCA. \
PCADeNoise[data, mask] removes rician noise from the data with PCA only \
withing the mask. PCADeNoise[data, mask, sig] removes rician noise from the \
data with PCA only withing the mask using sig as prior knowledge or fixed \
value. Output is de {data denoise, sigma map} by default if PCAOutput is Full \
then fitted {data dnoise , {sigma fit, average sigma}, {number components, \
number of fitted voxesl, number of max fits}, total fit -time per 500 ittt}.",
     "synonyms" -> {}, "tabletags" -> {}, "title" -> "PCADeNoise", 
    "titlemodifier" -> "", "windowtitle" -> "PCADeNoise", "type" -> "Symbol", 
    "uri" -> "DTITools/ref/PCADeNoise"}},
CellContext->"Global`",
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 3450, 77, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"6ac63da9-6724-4c93-bb42-f754eaf19b7b",
 CellID->1],
Cell[4035, 100, 537, 15, 70, "ObjectNameGrid", "ExpressionUUID" -> \
"ec5cd182-da48-42a4-a91a-755ff2578f87"],
Cell[4575, 117, 1970, 45, 70, "Usage", "ExpressionUUID" -> \
"c49906c0-8454-443c-a679-ded8b9c85673"],
Cell[CellGroupData[{
Cell[6570, 166, 985, 28, 70, "NotesSection", "ExpressionUUID" -> \
"dfbb915c-e5fe-4f66-a133-ab3229278019",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[7558, 196, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"470f36d4-f90e-49ba-b2b7-85706d256f6f"],
Cell[7647, 198, 108, 0, 70, "Notes", "ExpressionUUID" -> \
"d48d3eea-e201-4e1e-bfe0-a4887a04ac2f"],
Cell[7758, 200, 6178, 152, 70, "3ColumnTableMod", "ExpressionUUID" -> \
"23fe9af4-4e22-4d88-9c32-4c14e4bef066"],
Cell[13939, 354, 86, 0, 70, "SectionFooterSpacer", "ExpressionUUID" -> \
"c4a98702-e758-448b-9193-e8f643576b28"]
}, Closed]],
Cell[CellGroupData[{
Cell[14062, 359, 408, 13, 70, "MoreAboutSection", "ExpressionUUID" -> \
"0ad2d2e7-315d-4db2-bfa9-14a34ff6a3ff",
 CellID->38303248],
Cell[14473, 374, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"c98e7164-52ea-4f3f-a59d-9660fc985a61"],
Cell[14562, 376, 223, 5, 70, "MoreAbout", "ExpressionUUID" -> \
"561ff9b4-9a8a-4891-a926-c8f88868757e",
 CellID->1]
}, Open  ]],
Cell[14800, 384, 78, 0, 70, "FooterCell", "ExpressionUUID" -> \
"376bc8d3-0541-4df6-afaa-dbcfc17dde50"]
}
]
*)

(* End of internal cache information *)
