(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     36972,        995]
NotebookOptionsPosition[     31192,        894]
NotebookOutlinePosition[     35723,        977]
CellTagsIndexPosition[     35680,        974]
WindowTitle->RegisterData
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"ElastixTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/ElastixTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/RegisterData\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/RegisterData"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/\
RegisterData.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$186864], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/RegisterData", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["RegisterData", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       StyleBox["data", "TI"], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series. If data is 3D it performs \
multiple 2D registration, if data is 4D it performs multipe 3D registration. \
The target is the first image orvolume in the series. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["vox", "TI"]}], "}"}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["mask", "TI"]}], "}"}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["mask", "TI"], ",", " ", 
         StyleBox["vox", "TI"]}], "}"}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the moving data to the target data. target \
can be 2D or 3D. moving can be the same of one dimension higher than the \
target. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data using the given voxel size only \
using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. Output is the registered data with the \
dimensions of the moving data. If ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputTransformation"]],
        "paclet:DTITools/ref/OutputTransformation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is True it also outputs the translation, rotation scale and skew of \
all images or volumes."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Iterations",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/Iterations"], "1000", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Iterations"]],"paclet:DTITools/ref/Iterations"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the number of iterations used by the registration \
functions."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["Resolutions",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/Resolutions"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Resolutions"]],"paclet:DTITools/ref/Resolutions"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the number of scale space resolutions used by the \
registration functions."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["HistogramBins",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/HistogramBins"], "32", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["HistogramBins"]],"paclet:DTITools/ref/HistogramBins"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the number of bins of the joined histogram used by the \
registration functions."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["NumberSamples",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/NumberSamples"], "2000", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NumberSamples"]],"paclet:DTITools/ref/NumberSamples"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the number of random samples that are taken each \
iteration used by the registration functions."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["InterpolationOrderReg",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/InterpolationOrderReg"], "1", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["InterpolationOrderReg"]],
        "paclet:DTITools/ref/InterpolationOrderReg"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the interpolation order used in the registration \
functions."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BsplineSpacing",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BsplineSpacing"], "30", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BsplineSpacing"]],"paclet:DTITools/ref/BsplineSpacing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the spacing of the bsplines if the method is \"bspline\
\"."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["BsplineDirections",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BsplineDirections"], 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BsplineDirections"]],
        "paclet:DTITools/ref/BsplineDirections"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt gives the direction in which the bsplines are allowed to move \
when registering diffusion data to anatomical space."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["AffineDirections",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/AffineDirections"], 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["AffineDirections"]],"paclet:DTITools/ref/AffineDirections"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt gives the directions in which data can be moved when registering \
diffusion data to anatomical space."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MethodReg",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MethodReg"], "affine", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MethodReg"]],"paclet:DTITools/ref/MethodReg"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt spefifies which registration method to use. Mehtods can be be \
\"rigid\",\"affine\", \"bspline\" or \"cyclyc\"."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["OutputImage",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputImage"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputImage"]],"paclet:DTITools/ref/OutputImage"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies if the result image should be writen in the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TempDirectory"]],"paclet:DTITools/ref/TempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " as nii file."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["TempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/TempDirectory"], 
    ButtonBox["Default",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Default"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TempDirectory"]],"paclet:DTITools/ref/TempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies the temprary directory used to perform and output the \
registration."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DeleteTempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/DeleteTempDirectory"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "DeleteTempDirectoryis",
     " an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt specifies if the temp directory should be deleted after the \
registration is finisched."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["PrintTempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PrintTempDirectory"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PrintTempDirectory"]],
        "paclet:DTITools/ref/PrintTempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". \nIt spefifies if the location of the temp directory should be \
deplayed."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["OutputTransformation",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputTransformation"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputTransformation"]],
        "paclet:DTITools/ref/OutputTransformation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["RegisterData"], "InlineFormula"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ".\nIt specifies if the tranformation paramters (translation, rotation, \
scale and skew) should be given as output in the registration functions."
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, True}}}}],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["ElastixTools"]],"paclet:DTITools/guide/ElastixTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"RegisterData",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2018, 3, 26, 21, 53, 46.2909559}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DTITools`ElastixTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "RegisterData[data] registers the data series. If data is 3D it performs \
multiple 2D registration, if data is 4D it performs multipe 3D registration. \
The target is the first image orvolume in the series. RegisterData[{data, \
vox}] registers the data series using the given voxel size. \
RegisterData[{data, mask}] registers the data series only using data whithin \
the mask. RegisterData[{data, mask, vox}] registers the data series using the \
given voxel size only using data within the mask. RegisterData[target, \
moving] registers the moving data to the target data. target can be 2D or 3D. \
moving can be the same of one dimension higher than the target. \
RegisterData[{target, mask, vox}, {moving, mask, vox}] registers the data \
using the given voxel size only using data within the mask. \
RegisterData[{target, vox}, moving] registers the data using the given voxel \
size. RegisterData[target, {moving, vox}] registers the data using the given \
voxel size. RegisterData[{target, vox}, {moving, vox}] registers the data \
using the given voxel size. RegisterData[{target, mask}, moving] registers \
the data series only using data whithin the mask. RegisterData[target, \
{moving, mask}] registers the data series only using data whithin the mask. \
RegisterData[{target, mask}, moving] registers the data series only using \
data whithin the mask. RegisterData[{target, mask}, {moving, mask}] registers \
the data series only using data whithin the mask. RegisterData[target, \
{moving, mask, vox}] registers the data series using the given voxel size \
only using data within the mask. RegisterData[{target, mask}, {moving, mask, \
vox}] registers the data series using the given voxel size only using data \
within the mask. RegisterData[{target, vox}, {moving, mask, vox}] registers \
the data series using the given voxel size only using data within the mask. \
RegisterData[{target, mask, vox}, moving] registers the data series using the \
given voxel size only using data within the mask. RegisterData[{target, mask, \
vox}, {moving, mask}] registers the data series using the given voxel size \
only using data within the mask. RegisterData[{target, mask, vox}, {moving, \
vox}] registers the data series using the given voxel size only using data \
within the mask. RegisterData[{target, mask}, {moving, vox}] registers the \
data series using the given voxel size only using data within the mask. \
RegisterData[{target, vox}, {moving, mask}] registers the data series using \
the given voxel size only using data within the mask. Output is the \
registered data with the dimensions of the moving data. If \
OutputTransformation is True it also outputs the translation, rotation scale \
and skew of all images or volumes.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "RegisterData", "titlemodifier" -> "", "windowtitle" -> 
    "RegisterData", "type" -> "Symbol", "uri" -> "DTITools/ref/RegisterData"}},
CellContext->"Global`",
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 3053, 74, 70, "AnchorBarGrid",ExpressionUUID->"a8d88f8d-2db3-4886-a63f-e205e9920485",
 CellID->1],
Cell[3640, 97, 169, 6, 70, "ObjectNameGrid",ExpressionUUID->"d41a6a73-189f-4b84-b4dd-6d12a9f40a97"],
Cell[3812, 105, 10158, 289, 70, "Usage",ExpressionUUID->"bcaf4487-08aa-4312-a693-712fe20c746e"],
Cell[CellGroupData[{
Cell[13995, 398, 621, 19, 70, "NotesSection",ExpressionUUID->"ea8ccd64-b77a-462a-9d4b-f3225e0a038e",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[14619, 419, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"552624af-4bb9-4029-9aef-fd083423dbfc"],
Cell[14653, 421, 53, 0, 70, "Notes",ExpressionUUID->"0fe083f6-a1ce-40b8-927b-6d6a4d207086"],
Cell[14709, 423, 16009, 443, 70, "3ColumnTableMod",ExpressionUUID->"919a131f-75f0-4f72-85c0-3de10cd72464"],
Cell[30721, 868, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"83619fa7-959b-4516-9b7a-be7eb08ef558"]
}, Closed]],
Cell[CellGroupData[{
Cell[30789, 873, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"85f106cc-7f65-4e7b-8a7d-ed6588c27ea3",
 CellID->38303248],
Cell[30948, 882, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"8f2c49d6-4ab6-4cc2-8983-3727588e893f"],
Cell[30982, 884, 168, 5, 70, "MoreAbout",ExpressionUUID->"64762c40-8976-453d-aea8-d9c1c5485eb9",
 CellID->1]
}, Open  ]],
Cell[31165, 892, 23, 0, 70, "FooterCell",ExpressionUUID->"5e48407a-04ba-4b0f-8eaf-8884dab3f37c"]
}
]
*)

(* End of internal cache information *)
