(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     46727,       1144]
NotebookOptionsPosition[     40855,       1031]
NotebookOutlinePosition[     45386,       1114]
CellTagsIndexPosition[     45343,       1111]
WindowTitle->RegisterData
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell",ExpressionUUID->
     "3469c020-e31f-4efa-a86f-df5da50c4776"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"b8c16d20-745c-4be9-b96d-0a9383a8b342"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"ElastixTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/ElastixTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a8485268-3638-48b1-ae7d-d501692fa8b5"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"dfc47730-1634-4c12-91b1-92399389055b"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/RegisterData\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/RegisterData"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/\
RegisterData.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$182868], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/RegisterData", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a5f918fc-6800-4f19-926f-ddffe0914a7a"]
    }], "AnchorBar",ExpressionUUID->"684df7b5-066b-4828-9fc8-bb93b0aaf6e5"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"157a043a-b1d7-4b00-9230-bfb4ed9f7904"],

Cell[TextData[{
 Cell["RegisterData", "ObjectName",ExpressionUUID->
  "abc6915d-4c9a-417f-834c-0cbf5c8764c9"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8],
   Selectable->False]],ExpressionUUID->"2892068e-fc5a-4896-b029-e8e51aed28f6"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "a061f00a-7726-400f-98db-47a6a48ac4dd"]
}], "ObjectNameGrid",ExpressionUUID->"96868dc6-cb5c-4bda-bf09-4aa6e483753e"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       StyleBox["data", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "495eec52-dd86-49f5-b959-4bf84b99abda"],
     "\[LineSeparator]registers the data series. If data is 3D it performs \
multiple 2D registration, if data is 4D it performs multipe 3D registration. \
The target is the first image orvolume in the series. "
    }],ExpressionUUID->"4de18513-9b99-46fc-b821-1bc1e3b39449"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["vox", "TI"]}], "}"}], "]"}]], "InlineFormula",
      ExpressionUUID->"b1f77130-6c66-48dd-a647-5615bffac3cd"],
     "\[LineSeparator]registers the data series using the given voxel size. "
    }],ExpressionUUID->"fd9907da-8522-4bfd-b280-9380839dc2be"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["mask", "TI"]}], "}"}], "]"}]], "InlineFormula",
      ExpressionUUID->"a125e978-db2f-4326-a6d0-f87f306b36b2"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"ccf50416-e58f-4ae0-b907-22542658ad97"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["mask", "TI"], ",", " ", 
         StyleBox["vox", "TI"]}], "}"}], "]"}]], "InlineFormula",
      ExpressionUUID->"68e2b6ce-6b80-4855-9c12-98aa9e31f125"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"a220eb7c-b683-4682-8498-8b3cb961c388"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "3d931bfb-ff03-4b5f-b445-1b63cfa54861"],
     "\[LineSeparator]registers the moving data to the target data. target \
can be 2D or 3D. moving can be the same of one dimension higher than the \
target. "
    }],ExpressionUUID->"df27d0c1-b6fa-4675-978d-7b325607b072"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"399ecd89-d188-40a5-b3c7-4e07764c0896"],
     "\[LineSeparator]registers the data using the given voxel size only \
using data within the mask. "
    }],ExpressionUUID->"d90560d2-395c-4432-9135-170871309a68"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "d87adf0b-449f-473b-a56a-0d74c5867d90"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }],ExpressionUUID->"aae7bac2-d009-4c8d-9f2d-f1b45d3cc829"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"f7a48f75-e231-42db-a9b1-bcf842d0969e"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }],ExpressionUUID->"8a141c0f-5272-4ea6-acfa-4b95616e6148"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"69e19c21-c0d1-4d99-b767-516fea65e7d2"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }],ExpressionUUID->"df900f09-ac64-4d65-8a5a-ea8dde1b416d"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "6250d977-0547-4b86-9a21-1e6f55a71f87"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"4136f7f4-cc0a-4101-8de0-89f2f87e4f63"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"37c80462-76e4-49d1-bc6a-390a5e50af54"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"0bed14cb-bf71-455d-a693-15e4aecbb9bf"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "2b968842-d90a-4816-ab14-12f5b3b4a3e6"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"b0b6833e-2473-418c-b081-1597c673a8e6"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"e2b2bd5e-a86f-4969-854f-38ea6254b769"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"7169d157-b2c9-474a-92f8-5bab17234537"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"760977a4-09ca-4026-ac6f-22976fb160a1"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"16ecda1a-266e-4930-83f0-1a4fbcc05542"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"a23bee92-ad73-4837-bbec-c8920aef3501"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"4afb7479-2869-40d9-bb94-14f9b3e2c9ce"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"f46d766b-58d9-41d8-a176-17aaeaeeaa3a"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"26b4fc5a-838c-4e4e-9a03-75b2b78b5f66"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "2dc24c5e-d1d8-4fc5-80ed-23879d73f92e"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"c31cfd97-dcc0-42f6-8c7a-6e9c63004347"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"50314a60-726e-484a-ba32-78c43693650c"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"aa30af4c-6414-4213-af2e-672e23b35538"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"57c54656-4a35-4039-be8c-48068486ac47"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"9cbc4336-27ac-474d-b843-d3c574dcbbc4"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"7541d859-926f-460b-bda7-3c066af453f4"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"a741e914-dea3-4a78-b492-7e465be87c29"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"dceee997-1e1c-4cfd-aac6-84d47c3be027"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. Output is the registered data with the \
dimensions of the moving data. If ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputTransformation"]],
        "paclet:DTITools/ref/OutputTransformation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "bf33717b-a839-4066-b850-b0d12ee64f6d"],
     " is True it also outputs the translation, rotation scale and skew of \
all images or volumes."
    }],ExpressionUUID->"57af8466-6126-46c0-b49c-45342465e5e5"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> \
{}}},ExpressionUUID->"e52a919e-2ef8-41dd-8531-911e00c4ddcb"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6],
     Selectable->False]],ExpressionUUID->
    "b84ef283-acf1-4fe7-b118-1f6be9c3ed07"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"58ef3b12-3e9b-43db-9e35-f6553f667627"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"81bba217-711d-43a8-840b-80a656ae0350"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1,ExpressionUUID->"62d274fb-8ace-4a27-a9b3-c112922bcb37"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"c6b92e6a-fc88-488b-95fb-5d341fae54ad"],

Cell["The following options can be given: ", "Notes",ExpressionUUID->"41022417-ac40-421c-bad0-f8d2981fb544"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b5768f8c-dc9d-4075-8a1a-6b44489c22e6"], 
    ButtonBox["Iterations",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/Iterations"], "1000", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Iterations"]],"paclet:DTITools/ref/Iterations"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "a9207212-d23a-4f87-8a92-a2f37b060387"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "64ff5613-6674-4b2f-ade3-6f8993614bcf"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "d6f41613-c73d-48fe-9421-8dc585e26c97"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "1e3e589f-efbf-4b4c-963a-8ed4ef53b160"],
     ". \nIt specifies the number of iterations used by the registration \
functions."
    }], "TableText",ExpressionUUID->"66a7138f-cb6f-4daa-996b-ad2dd9ac81e0"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "487080ef-603d-42e6-b99e-c42072a85629"], 
    ButtonBox["Resolutions",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/Resolutions"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Resolutions"]],"paclet:DTITools/ref/Resolutions"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "774128e0-c47b-4fe7-9013-774d73017f81"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "4efb2812-af91-4ceb-bb44-56cf4f0870b8"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "696fc1da-1835-4e4f-8afc-dc34db002174"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "fdc8d0c8-3ba5-4a12-bbf3-8ee616ac3cca"],
     ". \nIt specifies the number of scale space resolutions used by the \
registration functions."
    }], "TableText",ExpressionUUID->"858fa72f-1ce2-44de-9df9-914f900e1be8"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "5d2332db-3fc5-454c-b365-1628a722357e"], 
    ButtonBox["HistogramBins",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/HistogramBins"], "32", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["HistogramBins"]],"paclet:DTITools/ref/HistogramBins"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "a6f1c6ab-5539-4b8b-8426-62e891548a40"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "36869f8a-1d70-4982-9aba-b5def1a65250"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "47cab06c-3387-4565-81e3-db764f8f59eb"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "3ac078f4-4479-461f-83fd-b71ce84d4a61"],
     ". \nIt specifies the number of bins of the joined histogram used by the \
registration functions."
    }], "TableText",ExpressionUUID->"538a3b5e-b725-4016-a16f-934e40df0755"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "bce27f51-23bd-4283-81d3-43b4bb841e43"], 
    ButtonBox["NumberSamples",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/NumberSamples"], "2000", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NumberSamples"]],"paclet:DTITools/ref/NumberSamples"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "cf6ce6f2-5d24-4343-8818-941a5273c746"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "faecec57-0cba-4a9b-b75b-09c413b81ff7"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "e6f0c243-1803-40ed-a259-63df5489be96"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "593c86a5-84dd-4d3f-878e-43698fd2c3e0"],
     ". \nIt specifies the number of random samples that are taken each \
iteration used by the registration functions."
    }], "TableText",ExpressionUUID->"90a2f39c-24d9-4b11-8511-10f1d028d32a"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "e915baa1-ad0f-418d-af83-35d399885b04"], 
    ButtonBox["InterpolationOrderReg",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/InterpolationOrderReg"], "1", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["InterpolationOrderReg"]],
        "paclet:DTITools/ref/InterpolationOrderReg"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "4740e0bf-3d3f-444c-8ae7-8ce74f9a7601"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "4be81a55-6fa1-45fe-89e2-499551f629ef"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "0f8dfcc8-2bb0-4f13-9586-58cbef3ee65d"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "cf08a326-05bc-4402-81ea-59dbda54d132"],
     ". \nIt specifies the interpolation order used in the registration \
functions."
    }], "TableText",ExpressionUUID->"8039053a-fafb-43e5-b96f-392ca2af9885"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b4471cb3-ad87-4ed6-a5f1-7c2c1ea525e7"], 
    ButtonBox["BsplineSpacing",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BsplineSpacing"], "30", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BsplineSpacing"]],"paclet:DTITools/ref/BsplineSpacing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "421e17b6-8733-43b0-8b71-9ba89cd366d5"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "4ad19c6a-3a91-4dfc-9d45-96572946b27c"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "cd65bb0b-0ad9-4e0c-8075-c692d2e69007"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "26775b55-c2fc-4e00-bf46-21beda162c4e"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "3c2397cf-459d-4047-8bed-a59df1e8b3bd"],
     ". \nIt specifies the spacing of the bsplines if the method is \"bspline\
\"."
    }], "TableText",ExpressionUUID->"ed3c0a33-c291-4b81-b2e2-6e303b3fe6ea"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "08f68b7e-71b3-4a38-b79d-89e0fe5d8b29"], 
    ButtonBox["BsplineDirections",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BsplineDirections"], 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BsplineDirections"]],
        "paclet:DTITools/ref/BsplineDirections"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "fb2c8846-b73f-4141-82a5-612187e09623"],
     " is an option for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "e73ef80e-e468-406b-a9ce-a8b6675e67c2"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "5f00964c-c574-4449-8f38-c6aff4c88a3d"],
     ". \nIt gives the direction in which the bsplines are allowed to move \
when registering diffusion data to anatomical space."
    }], "TableText",ExpressionUUID->"d4be64aa-4e09-478d-857a-2a47cf8e1671"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "158564d2-84f2-44fa-b6bb-7006d9b3801a"], 
    ButtonBox["AffineDirections",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/AffineDirections"], 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["AffineDirections"]],"paclet:DTITools/ref/AffineDirections"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "20c8e2cc-0e89-454f-94e3-1487a4f9e356"],
     " is an option for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "79a4a5e4-0e2d-411d-8ac3-3ac2e008628f"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "e30892a7-998b-4dcb-b022-e2a2b5b2c8e7"],
     ". \nIt gives the directions in which data can be moved when registering \
diffusion data to anatomical space."
    }], "TableText",ExpressionUUID->"6194639f-9d90-471b-89b7-02921db52266"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "1e999896-86a5-430c-94a4-07aa9e2a67fa"], 
    ButtonBox["MethodReg",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MethodReg"], "affine", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MethodReg"]],"paclet:DTITools/ref/MethodReg"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "9edfa1f8-7f4b-4458-8b4b-9a1676371f9f"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "f1b16858-aa73-45cd-9f80-be46368550eb"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "563536b3-1c5c-4aeb-8c46-264af67978f5"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "044a1ac7-7fd5-4290-a376-eb82b141ba8f"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "49216a81-8507-4914-97b3-929267a2b037"],
     ". \nIt spefifies which registration method to use. Mehtods can be be \
\"rigid\",\"affine\", \"bspline\" or \"cyclyc\"."
    }], "TableText",ExpressionUUID->"ad5e69f4-a011-4a65-a370-9263bb3205b6"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "fabb7bf4-8eaf-4334-9d0a-bab95d6fc548"], 
    ButtonBox["OutputImage",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputImage"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputImage"]],"paclet:DTITools/ref/OutputImage"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "cb03ebf0-9747-45c5-9503-de3c830a1682"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "6d7df2ae-38f7-49a3-aa85-b57f0a7695d8"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "94cee4e7-a624-4d8c-8084-a62d2569c69c"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "7e2b6bab-bd21-429e-8aed-829cd949244f"],
     ". \nIt specifies if the result image should be writen in the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TempDirectory"]],"paclet:DTITools/ref/TempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "043ee124-1179-4383-861f-03daa87e22fb"],
     " as nii file."
    }], "TableText",ExpressionUUID->"26ef0bc7-4912-46b4-a7d8-01342260debc"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "f6481465-4f3f-4b99-92a0-48685a663933"], 
    ButtonBox["TempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/TempDirectory"], 
    ButtonBox["Default",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Default"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TempDirectory"]],"paclet:DTITools/ref/TempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "175abb3a-dfda-4da4-8830-517ebfd5609a"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "fc96003e-8b7a-42f3-b31c-c8c09be02a2a"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "87ab52f5-82b5-4195-b13e-5e29b6239e3d"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "3e3fc607-2a60-4809-9a64-ef9d7ebe6c7e"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "964ac26c-200c-47b9-b199-3169d7b4e52d"],
     ". \nIt specifies the temprary directory used to perform and output the \
registration."
    }], "TableText",ExpressionUUID->"7794b255-f6bb-40a2-b972-f6016f361556"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "4d8098df-786f-48cc-bb17-148e65004414"], 
    ButtonBox["DeleteTempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/DeleteTempDirectory"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "DeleteTempDirectoryis",
     " an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "bca4afd6-ad20-4cd0-8fe8-8734497aac1e"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "de6a94e0-2428-45e4-b68d-435905a70be3"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "434e90b8-6fca-45c8-ba79-8d487eadc106"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "2804d03c-ef50-4c81-b410-5caf5b14075d"],
     ". \nIt specifies if the temp directory should be deleted after the \
registration is finisched."
    }], "TableText",ExpressionUUID->"e0b05d74-5bdf-48a5-bb11-e8804362b30e"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "38d450a8-ef53-406e-9715-2df1d7dec43c"], 
    ButtonBox["PrintTempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PrintTempDirectory"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PrintTempDirectory"]],
        "paclet:DTITools/ref/PrintTempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "6e3a9b0a-8e90-49b4-a40b-f975769c62a0"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "21ef52fd-fc8e-4f6c-a438-8a8d13697e16"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "c655fcc4-2a91-4a13-ab86-8d6b601a0c15"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "27198526-ad74-4fb4-922a-50121107c2bf"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "de539f8e-9b2b-4b45-962f-09f45a55afdd"],
     ". \nIt spefifies if the location of the temp directory should be \
deplayed."
    }], "TableText",ExpressionUUID->"823a3700-b47b-4a90-9511-7d9cb292e5a7"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "0446139a-aacd-4132-969f-9f51c32982dc"], 
    ButtonBox["OutputTransformation",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputTransformation"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputTransformation"]],
        "paclet:DTITools/ref/OutputTransformation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "6ecb198f-df12-4b5c-99d5-6a7c4b703c15"],
     " is an option for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "ff4758da-1565-4791-9783-501e6e176cb9"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "c1f1e9e1-694d-4f27-8eea-141bf483ac4d"],
     ".\nIt specifies if the tranformation paramters (translation, rotation, \
scale and skew) should be given as output in the registration functions."
    }], "TableText",ExpressionUUID->"090ac0c9-f81e-4c90-9d1f-50418014abc1"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, 
      True}}}},ExpressionUUID->"3e96fa0f-221d-42d9-bf6f-89c373c3610f"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"492f59ca-a58a-42b1-9e76-d409a49ca51d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6],
   Selectable->False]],ExpressionUUID->"cfd7bd1e-dbb3-4ef8-a2d1-7a4b2f984445"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"9de228b9-8d44-4bc2-bfb5-0aa284260ffa"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"d0469265-1087-40f4-a737-70026d6451dc"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["ElastixTools"]],"paclet:DTITools/guide/ElastixTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1,ExpressionUUID->"e18ceb66-a623-477a-9db3-dc91ffd08517"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"449adda0-61fb-4f3d-98da-6679c27860e3"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"RegisterData",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 8, 9, 35, 14.9885597}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DTITools`ElastixTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "RegisterData[data] registers the data series. If data is 3D it performs \
multiple 2D registration, if data is 4D it performs multipe 3D registration. \
The target is the first image orvolume in the series. RegisterData[{data, \
vox}] registers the data series using the given voxel size. \
RegisterData[{data, mask}] registers the data series only using data whithin \
the mask. RegisterData[{data, mask, vox}] registers the data series using the \
given voxel size only using data within the mask. RegisterData[target, \
moving] registers the moving data to the target data. target can be 2D or 3D. \
moving can be the same of one dimension higher than the target. \
RegisterData[{target, mask, vox}, {moving, mask, vox}] registers the data \
using the given voxel size only using data within the mask. \
RegisterData[{target, vox}, moving] registers the data using the given voxel \
size. RegisterData[target, {moving, vox}] registers the data using the given \
voxel size. RegisterData[{target, vox}, {moving, vox}] registers the data \
using the given voxel size. RegisterData[{target, mask}, moving] registers \
the data series only using data whithin the mask. RegisterData[target, \
{moving, mask}] registers the data series only using data whithin the mask. \
RegisterData[{target, mask}, moving] registers the data series only using \
data whithin the mask. RegisterData[{target, mask}, {moving, mask}] registers \
the data series only using data whithin the mask. RegisterData[target, \
{moving, mask, vox}] registers the data series using the given voxel size \
only using data within the mask. RegisterData[{target, mask}, {moving, mask, \
vox}] registers the data series using the given voxel size only using data \
within the mask. RegisterData[{target, vox}, {moving, mask, vox}] registers \
the data series using the given voxel size only using data within the mask. \
RegisterData[{target, mask, vox}, moving] registers the data series using the \
given voxel size only using data within the mask. RegisterData[{target, mask, \
vox}, {moving, mask}] registers the data series using the given voxel size \
only using data within the mask. RegisterData[{target, mask, vox}, {moving, \
vox}] registers the data series using the given voxel size only using data \
within the mask. RegisterData[{target, mask}, {moving, vox}] registers the \
data series using the given voxel size only using data within the mask. \
RegisterData[{target, vox}, {moving, mask}] registers the data series using \
the given voxel size only using data within the mask. Output is the \
registered data with the dimensions of the moving data. If \
OutputTransformation is True it also outputs the translation, rotation scale \
and skew of all images or volumes.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "RegisterData", "titlemodifier" -> "", "windowtitle" -> 
    "RegisterData", "type" -> "Symbol", "uri" -> "DTITools/ref/RegisterData"}},
CellContext->"Global`",
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 3458, 77, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"157a043a-b1d7-4b00-9230-bfb4ed9f7904",
 CellID->1],
Cell[4045, 100, 539, 15, 70, "ObjectNameGrid", "ExpressionUUID" -> \
"96868dc6-cb5c-4bda-bf09-4aa6e483753e"],
Cell[4587, 117, 12734, 312, 70, "Usage", "ExpressionUUID" -> \
"e52a919e-2ef8-41dd-8531-911e00c4ddcb"],
Cell[CellGroupData[{
Cell[17346, 433, 985, 28, 70, "NotesSection", "ExpressionUUID" -> \
"62d274fb-8ace-4a27-a9b3-c112922bcb37",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[18334, 463, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"c6b92e6a-fc88-488b-95fb-5d341fae54ad"],
Cell[18423, 465, 108, 0, 70, "Notes", "ExpressionUUID" -> \
"41022417-ac40-421c-bad0-f8d2981fb544"],
Cell[18534, 467, 21375, 530, 70, "3ColumnTableMod", "ExpressionUUID" -> \
"3e96fa0f-221d-42d9-bf6f-89c373c3610f"],
Cell[39912, 999, 86, 0, 70, "SectionFooterSpacer", "ExpressionUUID" -> \
"492f59ca-a58a-42b1-9e76-d409a49ca51d"]
}, Closed]],
Cell[CellGroupData[{
Cell[40035, 1004, 408, 13, 70, "MoreAboutSection", "ExpressionUUID" -> \
"9de228b9-8d44-4bc2-bfb5-0aa284260ffa",
 CellID->38303248],
Cell[40446, 1019, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"d0469265-1087-40f4-a737-70026d6451dc"],
Cell[40535, 1021, 223, 5, 70, "MoreAbout", "ExpressionUUID" -> \
"e18ceb66-a623-477a-9db3-dc91ffd08517",
 CellID->1]
}, Open  ]],
Cell[40773, 1029, 78, 0, 70, "FooterCell", "ExpressionUUID" -> \
"449adda0-61fb-4f3d-98da-6679c27860e3"]
}
]
*)

(* End of internal cache information *)
