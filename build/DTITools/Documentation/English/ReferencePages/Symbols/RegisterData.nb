(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     46729,       1144]
NotebookOptionsPosition[     40855,       1031]
NotebookOutlinePosition[     45388,       1114]
CellTagsIndexPosition[     45345,       1111]
WindowTitle->RegisterData
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell",ExpressionUUID->
     "3bb11245-690b-4a45-acaf-bb1cc6af4f48"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"8cb012bf-0734-46fc-bb1c-34320bacefba"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"ElastixTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/ElastixTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "1f2f4678-baed-4761-8de5-f9ed27809e2e"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"565274c3-77dd-4f7d-981f-74c53cec7cff"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/RegisterData\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/RegisterData"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/\
RegisterData.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$178121], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/RegisterData", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "14e3a86e-1f53-4bbc-83b0-9a615be32961"]
    }], "AnchorBar",ExpressionUUID->"d9bf5984-2ea0-4dfa-9f05-7e0ebd672b06"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"f1b8070d-1ec5-480c-8684-a268e021aef1"],

Cell[TextData[{
 Cell["RegisterData", "ObjectName",ExpressionUUID->
  "8e0760b1-f9f8-46b6-a0d7-dc953cb39b77"],
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{8, 0}],
    CacheGraphics->False],
   Spacer[8],
   Selectable->False]],ExpressionUUID->"9f57c947-c291-4ba1-a6f9-7f15aeefcbe7"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "9719d6f5-cbce-46a2-b06a-278bc74d9c29"]
}], "ObjectNameGrid",ExpressionUUID->"5562641a-4424-43b7-986d-f39e102ffdaf"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       StyleBox["data", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "b7bbb3fa-80b4-49a5-837f-0999a25a39ce"],
     "\[LineSeparator]registers the data series. If data is 3D it performs \
multiple 2D registration, if data is 4D it performs multipe 3D registration. \
The target is the first image orvolume in the series. "
    }],ExpressionUUID->"a6b82c2e-3aca-4f02-a292-f84017fc2c68"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["vox", "TI"]}], "}"}], "]"}]], "InlineFormula",
      ExpressionUUID->"ee3f9750-90a6-4fe0-a5e3-ea8c035056f4"],
     "\[LineSeparator]registers the data series using the given voxel size. "
    }],ExpressionUUID->"fcd6410d-f640-4672-aed5-168366846f2f"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["mask", "TI"]}], "}"}], "]"}]], "InlineFormula",
      ExpressionUUID->"69531b52-adaf-46ee-aed9-644949f4b73c"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"8d5eca0a-262d-4c4b-b32f-df882313a5bd"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["data", "TI"], ",", " ", 
         StyleBox["mask", "TI"], ",", " ", 
         StyleBox["vox", "TI"]}], "}"}], "]"}]], "InlineFormula",
      ExpressionUUID->"68a41eb1-ee39-49d4-affd-414c6c220d90"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"adea9f99-4e51-4178-8a42-b35945c91cff"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "726af2db-1f29-4e1e-92e2-240d87d15994"],
     "\[LineSeparator]registers the moving data to the target data. target \
can be 2D or 3D. moving can be the same of one dimension higher than the \
target. "
    }],ExpressionUUID->"2dc5ba4e-51fa-4528-bc64-eb20172e8b76"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"f204f146-7288-4c3b-9427-bb1f5a13c034"],
     "\[LineSeparator]registers the data using the given voxel size only \
using data within the mask. "
    }],ExpressionUUID->"fcdd02ac-f8b4-4680-b435-10064a5e7c3e"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "f29f7cd0-3410-4e3b-9808-d39ba4b481e6"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }],ExpressionUUID->"4bfd7d65-706a-4cc4-ac21-4f4f442a7166"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"80149f9b-4674-45b2-853b-449cd50ce5b8"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }],ExpressionUUID->"2ab821ec-da10-4263-9797-55cdf7856011"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"95d3ec1b-ed24-40a2-a749-6a5f6ef89f95"],
     "\[LineSeparator]registers the data using the given voxel size. "
    }],ExpressionUUID->"43d221f3-0eaa-4f55-8701-f8a2fd466e10"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "77aa0b28-8078-4493-98a0-838e568b25cf"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"f2bf738a-b2ab-4e81-b520-90a5f6a9cb2f"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"c14e2182-37b9-45cb-bbca-035b983a4f4b"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"bb4f7aae-53e8-4f18-a134-c088d9ee1069"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "a74b6a6f-99ee-4c72-86f4-d52cfc926a15"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"c400e107-bbd4-4ef1-a17b-766d51b9030d"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"e33881d9-2261-4d3f-a3e1-181811141775"],
     "\[LineSeparator]registers the data series only using data whithin the \
mask. "
    }],ExpressionUUID->"ca243051-5f95-431e-8a65-2e6451b0f35c"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"ad3264cd-efa8-4c6c-8f3f-5edcf3f8654d"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"26627a67-e328-42e3-8188-691c2a22858e"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"1f872da4-f464-47bc-9479-cb31cb510296"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"3b6eb566-8178-42b1-8160-d7a702edf2d9"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"8ff191d4-25a9-4a1d-a855-a7e1f3babdbd"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"3c4c2f75-a731-4938-a09e-b51d66d170e6"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        StyleBox["moving", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "90d66107-f956-450a-afde-b95f7f7b29bd"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"5d1763bf-e96f-41d6-9dff-0c90cdd81efa"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"69a5d5b9-eeed-49a5-8ffb-22cdfb03d191"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"d824637b-ef13-4312-ab47-050ae633219c"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"757745f0-1c51-4ae1-8952-3fd8d3ceaa0f"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"0ca2a4df-9bff-4129-ab75-eb8df7ef4f73"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"3f11546a-4080-4a18-bd6f-ae03951bd5cc"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. "
    }],ExpressionUUID->"1f7aba4b-4731-463a-b54c-e821d7736a6b"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"RegisterData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["target", "TI"], ",", " ", 
          StyleBox["vox", "TI"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["moving", "TI"], ",", " ", 
          StyleBox["mask", "TI"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"05560fd2-d4c2-43c6-84aa-1d2c58aeace6"],
     "\[LineSeparator]registers the data series using the given voxel size \
only using data within the mask. Output is the registered data with the \
dimensions of the moving data. If ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputTransformation"]],
        "paclet:DTITools/ref/OutputTransformation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "646fadb3-f4b1-4959-8903-dd0cf2235874"],
     " is True it also outputs the translation, rotation scale and skew of \
all images or volumes."
    }],ExpressionUUID->"07d5c240-b670-4244-af8c-2c7d23d1cb95"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> \
{}}},ExpressionUUID->"d3dbe37a-c144-49cc-b949-378ddc4e1616"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    InterpretationBox[
     StyleBox[
      GraphicsBox[{},
       BaselinePosition->Baseline,
       ImageSize->{6, 0}],
      CacheGraphics->False],
     Spacer[6],
     Selectable->False]],ExpressionUUID->
    "3c10ad9c-9614-42d9-a637-edc34fa15f39"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"42a3adc9-44f0-4453-a8ad-8f0bf3a0bad9"],
  Appearance->{Automatic, None},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"8ef01f8b-2c4f-43ed-8150-104fa44f502c"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1,ExpressionUUID->"9a6f8d10-0477-47ef-a897-263fda3dd5b0"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"742a0a53-fb1b-4b16-9896-326f477ebfa1"],

Cell["The following options can be given: ", "Notes",ExpressionUUID->"1d1b112a-6c38-417a-a736-b03676e13c72"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "f298ad8b-e2a6-43ff-9a94-fdde0dc080f0"], 
    ButtonBox["Iterations",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/Iterations"], "1000", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Iterations"]],"paclet:DTITools/ref/Iterations"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "6b4b0242-1ae1-4ac6-9f8c-23c5e6d83c20"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "10cea8a4-fb8d-4145-b45c-2bdbde1c8c07"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "ca80fb28-91e9-4e2b-80a2-08fc73187eec"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "466af438-496d-4d8b-b40e-178a98e24a4d"],
     ". \nIt specifies the number of iterations used by the registration \
functions."
    }], "TableText",ExpressionUUID->"6963a928-fb04-4c30-bc58-bca17eba3ba6"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "0114d1ba-64af-46aa-b279-375d026b243c"], 
    ButtonBox["Resolutions",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/Resolutions"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Resolutions"]],"paclet:DTITools/ref/Resolutions"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "daa2e15d-5b29-4d26-9361-9231f7066380"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "d2118e86-9cc1-41da-bb5f-44b3733309be"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "c17e8a50-62e9-4be3-b2ac-2d570634c384"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "90853ac8-165c-4f7e-8a8a-53c85b5081aa"],
     ". \nIt specifies the number of scale space resolutions used by the \
registration functions."
    }], "TableText",ExpressionUUID->"5b95cc02-7f2a-4524-805f-bc5c7affba76"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "a8e4869d-abfc-4376-967a-bd146ebb66c0"], 
    ButtonBox["HistogramBins",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/HistogramBins"], "32", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["HistogramBins"]],"paclet:DTITools/ref/HistogramBins"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "75144cbb-84c3-4f14-8081-22a5675b76a9"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "2f950394-a72f-4af2-807f-6378948aa639"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "eced4583-e506-4847-b4da-061bc44e5e44"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "836cea1f-58c1-4aea-a862-eaadd8cdf028"],
     ". \nIt specifies the number of bins of the joined histogram used by the \
registration functions."
    }], "TableText",ExpressionUUID->"d1ac3a41-51d2-45eb-8867-719184cbedc9"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "1393f28d-3fe7-45e5-a11a-d0e90359978f"], 
    ButtonBox["NumberSamples",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/NumberSamples"], "2000", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["NumberSamples"]],"paclet:DTITools/ref/NumberSamples"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "988af03c-e9bb-4abd-86e7-17d6a0cdeecb"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "1ab6e978-6853-414c-b3d0-4559d606ab8b"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "6f464822-1c1e-4ba1-8989-a0238a8315c1"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "38a450aa-dde6-4599-a18b-7b84bb7068a2"],
     ". \nIt specifies the number of random samples that are taken each \
iteration used by the registration functions."
    }], "TableText",ExpressionUUID->"429bf294-49e7-48e7-a08a-a96030842db5"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "31a0c38d-bd8b-4af5-ac55-de4ce3b827b9"], 
    ButtonBox["InterpolationOrderReg",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/InterpolationOrderReg"], "1", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["InterpolationOrderReg"]],
        "paclet:DTITools/ref/InterpolationOrderReg"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "535a954b-4ff4-4d62-9912-eecc31ef916d"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "d6fe8a14-1a8a-4f75-b5e3-3c526ace70a8"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "51475dfd-317b-4bab-a144-74e9268af8a5"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "ca18ce2b-7466-41f8-9af0-a09dd369d4d6"],
     ". \nIt specifies the interpolation order used in the registration \
functions."
    }], "TableText",ExpressionUUID->"50223ddf-375c-445f-8eba-f80131027b15"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "778bcb34-1903-418d-acb7-573167c1d00b"], 
    ButtonBox["BsplineSpacing",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BsplineSpacing"], "30", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BsplineSpacing"]],"paclet:DTITools/ref/BsplineSpacing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "4718bbeb-6d94-44ea-97ce-f608272285dc"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "ea546d8d-f249-4bcd-b7d5-4faf67943863"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "2262a0bf-7f0d-4bfa-9067-db62d39cc6ae"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "b6ed3350-89c1-4975-a04b-3169dee408cf"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "cd78ed60-83de-4ff3-aae7-07b82d4c6bb4"],
     ". \nIt specifies the spacing of the bsplines if the method is \"bspline\
\"."
    }], "TableText",ExpressionUUID->"b8581fd7-9997-4cd2-b467-eae5a40c20f4"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "47ebd516-0709-4b04-80cb-92ad37b59c6d"], 
    ButtonBox["BsplineDirections",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/BsplineDirections"], 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BsplineDirections"]],
        "paclet:DTITools/ref/BsplineDirections"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "c5b7656e-0d5e-4d25-bde8-d05e9cd818e0"],
     " is an option for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "b968d530-83dd-45d8-aefb-086869a693da"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "654a25c9-4019-41f0-8fc6-83d9b3ccccf1"],
     ". \nIt gives the direction in which the bsplines are allowed to move \
when registering diffusion data to anatomical space."
    }], "TableText",ExpressionUUID->"212d0838-88b4-4cf0-aa88-5a44b956fa83"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "3022ad8e-521a-4e79-b030-deb7ae418483"], 
    ButtonBox["AffineDirections",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/AffineDirections"], 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["AffineDirections"]],"paclet:DTITools/ref/AffineDirections"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "4956ecb0-58bc-43f9-8821-b70ec2e04210"],
     " is an option for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "4e32948a-407b-4270-9162-a1ddbe6a7f4c"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "9f9c508f-1cd0-41ef-9ef8-acb18a4b5dd0"],
     ". \nIt gives the directions in which data can be moved when registering \
diffusion data to anatomical space."
    }], "TableText",ExpressionUUID->"f4cc2a77-e954-406e-b89e-4dfca758ae24"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "e7413877-b58a-4657-a2dd-b9d86fe1aa63"], 
    ButtonBox["MethodReg",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MethodReg"], "affine", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MethodReg"]],"paclet:DTITools/ref/MethodReg"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "48ce1a07-ac80-40bc-9b8b-60f23666f34a"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "bc431f6f-5c8e-42a8-a492-90cc95bee3b4"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "5e758c43-d1b6-4ca1-9525-e358f1cd9e57"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "0ac2d9cf-3ab3-4038-8267-5a8a9d0eb7a1"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "27f8e338-3691-4ab9-b877-54e6773cb936"],
     ". \nIt spefifies which registration method to use. Mehtods can be be \
\"rigid\",\"affine\", \"bspline\" or \"cyclyc\"."
    }], "TableText",ExpressionUUID->"5d4cb794-c9bd-4216-b30f-0b53cc8e0f8e"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "3a94153f-6b19-44fd-870b-3d81fd5fdd44"], 
    ButtonBox["OutputImage",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputImage"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputImage"]],"paclet:DTITools/ref/OutputImage"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "be32ba35-741c-48ed-bf88-62abb8de0db8"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "ffff7e1d-5737-4a76-bf8f-90c91238e212"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "519eef5a-0584-49b5-9c4d-7d2b831777c4"],
     ", and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "9672ad3d-3e41-4b66-9bc3-ae2b1160d144"],
     ". \nIt specifies if the result image should be writen in the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TempDirectory"]],"paclet:DTITools/ref/TempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "29f6a4aa-41ab-41ce-97b0-cfaecbbb7cc8"],
     " as nii file."
    }], "TableText",ExpressionUUID->"c64c7b37-ae2a-4ec1-b126-5002afc1793c"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "52e1b9f4-912a-4312-abdf-ed5d491db162"], 
    ButtonBox["TempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/TempDirectory"], 
    ButtonBox["Default",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Default"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TempDirectory"]],"paclet:DTITools/ref/TempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "5c111d47-dfb8-4314-9c3b-87d1da3fc85f"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "d17e8469-0fed-4460-a485-c48637e8f6ce"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "8e47b0d0-d973-422a-9114-ddb2fd2d2a5d"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "69c4ca88-e187-421a-945b-0c4c23dc81a9"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "29940944-e306-4601-b4e7-16c7a7283c6c"],
     ". \nIt specifies the temprary directory used to perform and output the \
registration."
    }], "TableText",ExpressionUUID->"70fbf093-6a93-40cf-8881-05c8e54c648d"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "fac79168-55f5-406e-9a4b-7716798a0cdc"], 
    ButtonBox["DeleteTempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/DeleteTempDirectory"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "DeleteTempDirectoryis",
     " an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "110a4616-6a59-45cf-956f-dd4074ea5a90"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "82c90181-f28a-458f-a13e-997a21fa309c"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "9ae18f32-7a51-4bb3-8ff5-14014928f84c"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "33eddfe1-d6d6-4bd4-bfc5-022fddace7ce"],
     ". \nIt specifies if the temp directory should be deleted after the \
registration is finisched."
    }], "TableText",ExpressionUUID->"f62e1a98-b97b-40bc-9cef-cc6460023427"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "22fed21f-54af-4940-91a9-aec2675d2f50"], 
    ButtonBox["PrintTempDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/PrintTempDirectory"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["PrintTempDirectory"]],
        "paclet:DTITools/ref/PrintTempDirectory"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "ce5001e7-b638-48c5-a74b-ae865ee5d70e"],
     " is an options for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "12cdd5e7-5eb8-46b5-bf7b-7ec9fcda47f5"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "ec3457ed-f29d-4e48-a00a-5aeed19a32f3"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterCardiacData"]],
        "paclet:DTITools/ref/RegisterCardiacData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "78dcc5c8-7633-4bea-a76f-6e2c13dbdbec"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDataTransform"]],
        "paclet:DTITools/ref/RegisterDataTransform"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "f5694ad9-be6d-483f-a788-b7236ac44976"],
     ". \nIt spefifies if the location of the temp directory should be \
deplayed."
    }], "TableText",ExpressionUUID->"efccde63-4c26-46e2-a102-fd0ccb4849ac"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "0385ad66-916e-4142-a49b-12dfbe558c4f"], 
    ButtonBox["OutputTransformation",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputTransformation"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputTransformation"]],
        "paclet:DTITools/ref/OutputTransformation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "d2e71861-eafa-44ef-8524-1a236d84f4b9"],
     " is an option for ",
     Cell[BoxData[
     "RegisterData"], "InlineFormula",ExpressionUUID->
      "f0413485-fe08-4e91-bb35-3a5cdd58afb6"],
     " ad ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["RegisterDiffusionData"]],
        "paclet:DTITools/ref/RegisterDiffusionData"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
      "697125e6-88c3-4305-befe-2f8595266c68"],
     ".\nIt specifies if the tranformation paramters (translation, rotation, \
scale and skew) should be given as output in the registration functions."
    }], "TableText",ExpressionUUID->"00a7d4a8-116f-4f69-9393-f08e735671e0"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {
    None, None, None, None, None, None, None, None, None, None, None, None, 
     None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, True, True, True, True, True, True, True, 
      True, True, 
      True}}}},ExpressionUUID->"81a937e6-3318-4c2d-ad2c-24df6babbe6f"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"bae04356-3816-4d49-a0b5-d72a1298ebda"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{6, 0}],
    CacheGraphics->False],
   Spacer[6],
   Selectable->False]],ExpressionUUID->"32779be7-9ef7-439e-90d3-84b91f31875d"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"224e2a39-2a62-415f-8e83-6cc94fc47086"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"2d688a51-acf6-4d3d-ae87-3bd1b47ed4ac"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["ElastixTools"]],"paclet:DTITools/guide/ElastixTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1,ExpressionUUID->"dbbbb57e-3d9c-4a14-94aa-aa68a5444e90"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"8cf19b74-3b8d-4a71-b08a-871073242557"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"RegisterData",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 5, 15, 14, 27, 11.9292442}", 
    "history" -> {"XX", "", "", ""}, "context" -> "DTITools`ElastixTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "RegisterData[data] registers the data series. If data is 3D it performs \
multiple 2D registration, if data is 4D it performs multipe 3D registration. \
The target is the first image orvolume in the series. RegisterData[{data, \
vox}] registers the data series using the given voxel size. \
RegisterData[{data, mask}] registers the data series only using data whithin \
the mask. RegisterData[{data, mask, vox}] registers the data series using the \
given voxel size only using data within the mask. RegisterData[target, \
moving] registers the moving data to the target data. target can be 2D or 3D. \
moving can be the same of one dimension higher than the target. \
RegisterData[{target, mask, vox}, {moving, mask, vox}] registers the data \
using the given voxel size only using data within the mask. \
RegisterData[{target, vox}, moving] registers the data using the given voxel \
size. RegisterData[target, {moving, vox}] registers the data using the given \
voxel size. RegisterData[{target, vox}, {moving, vox}] registers the data \
using the given voxel size. RegisterData[{target, mask}, moving] registers \
the data series only using data whithin the mask. RegisterData[target, \
{moving, mask}] registers the data series only using data whithin the mask. \
RegisterData[{target, mask}, moving] registers the data series only using \
data whithin the mask. RegisterData[{target, mask}, {moving, mask}] registers \
the data series only using data whithin the mask. RegisterData[target, \
{moving, mask, vox}] registers the data series using the given voxel size \
only using data within the mask. RegisterData[{target, mask}, {moving, mask, \
vox}] registers the data series using the given voxel size only using data \
within the mask. RegisterData[{target, vox}, {moving, mask, vox}] registers \
the data series using the given voxel size only using data within the mask. \
RegisterData[{target, mask, vox}, moving] registers the data series using the \
given voxel size only using data within the mask. RegisterData[{target, mask, \
vox}, {moving, mask}] registers the data series using the given voxel size \
only using data within the mask. RegisterData[{target, mask, vox}, {moving, \
vox}] registers the data series using the given voxel size only using data \
within the mask. RegisterData[{target, mask}, {moving, vox}] registers the \
data series using the given voxel size only using data within the mask. \
RegisterData[{target, vox}, {moving, mask}] registers the data series using \
the given voxel size only using data within the mask. Output is the \
registered data with the dimensions of the moving data. If \
OutputTransformation is True it also outputs the translation, rotation scale \
and skew of all images or volumes.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "RegisterData", "titlemodifier" -> "", "windowtitle" -> 
    "RegisterData", "type" -> "Symbol", "uri" -> "DTITools/ref/RegisterData"}},
CellContext->"Global`",
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 3458, 77, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"f1b8070d-1ec5-480c-8684-a268e021aef1",
 CellID->1],
Cell[4045, 100, 539, 15, 70, "ObjectNameGrid", "ExpressionUUID" -> \
"5562641a-4424-43b7-986d-f39e102ffdaf"],
Cell[4587, 117, 12734, 312, 70, "Usage", "ExpressionUUID" -> \
"d3dbe37a-c144-49cc-b949-378ddc4e1616"],
Cell[CellGroupData[{
Cell[17346, 433, 985, 28, 70, "NotesSection", "ExpressionUUID" -> \
"9a6f8d10-0477-47ef-a897-263fda3dd5b0",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[18334, 463, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"742a0a53-fb1b-4b16-9896-326f477ebfa1"],
Cell[18423, 465, 108, 0, 70, "Notes", "ExpressionUUID" -> \
"1d1b112a-6c38-417a-a736-b03676e13c72"],
Cell[18534, 467, 21375, 530, 70, "3ColumnTableMod", "ExpressionUUID" -> \
"81a937e6-3318-4c2d-ad2c-24df6babbe6f"],
Cell[39912, 999, 86, 0, 70, "SectionFooterSpacer", "ExpressionUUID" -> \
"bae04356-3816-4d49-a0b5-d72a1298ebda"]
}, Closed]],
Cell[CellGroupData[{
Cell[40035, 1004, 408, 13, 70, "MoreAboutSection", "ExpressionUUID" -> \
"224e2a39-2a62-415f-8e83-6cc94fc47086",
 CellID->38303248],
Cell[40446, 1019, 86, 0, 70, "SectionHeaderSpacer", "ExpressionUUID" -> \
"2d688a51-acf6-4d3d-ae87-3bd1b47ed4ac"],
Cell[40535, 1021, 223, 5, 70, "MoreAbout", "ExpressionUUID" -> \
"dbbbb57e-3d9c-4a14-94aa-aa68a5444e90",
 CellID->1]
}, Open  ]],
Cell[40773, 1029, 78, 0, 70, "FooterCell", "ExpressionUUID" -> \
"8cf19b74-3b8d-4a71-b08a-871073242557"]
}
]
*)

(* End of internal cache information *)
