(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     15914,        440]
NotebookOptionsPosition[     12439,        369]
NotebookOutlinePosition[     14673,        422]
CellTagsIndexPosition[     14630,        419]
WindowTitle->EPGT2Fit
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["D T I TOOLS PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"RelaxometryTools\"\>":>
       Documentation`HelpLookup["paclet:DTITools/guide/RelaxometryTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"DTITools/ref/EPGT2Fit\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["DTITools/ref/EPGT2Fit"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/DTITools/ref/EPGT2Fit.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$83250], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "DTITools/ref/EPGT2Fit", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[TextData[{
 Cell["EPGT2Fit", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell["\<\
EPGT2Fit[data, {Necho, detlaTE}, {exitation, refoucs}]\[LineSeparator]fits \
the T2 based on Marty B et.al. Simultaneous muscle water T2 and fat fraction \
mapping using transverse relaxometry with stimulated echo compensation. \
exitation and refocus are the RF pulse angles e.g. 90,180. They can also be a \
range of angeles over the slice profile as defined by GetSliceProfile. Output \
is {{{T2map,B1Map},{wat, fat, fatMap}},callibration} or {{T2map,B1Map},{wat, \
fat, fatMap}}\
\>"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],

Cell["", "SectionHeaderSpacer"],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DictB1Range",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/DictB1Range"], 
    RowBox[{"{", 
     RowBox[{"0.5", ",", " ", "1.5", ",", " ", "0.02"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DictB1Range"]],"paclet:DTITools/ref/DictB1Range"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["CreateT2Dictionary"]],
        "paclet:DTITools/ref/CreateT2Dictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". It specifies the range and step of the B1 values in the dictionary \
{min, max, step}."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["DictT2Range",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/DictT2Range"], 
    RowBox[{"{", 
     RowBox[{"10", ",", " ", "70", ",", " ", "0.2"}], "}"}], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DictT2Range"]],"paclet:DTITools/ref/DictT2Range"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["CreateT2Dictionary"]],
        "paclet:DTITools/ref/CreateT2Dictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". is specifies the range and step of the T2 values in the dictionary \
{min, max, step} in ms."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EPGRelaxPars",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/EPGRelaxPars"], 
    RowBox[{"{", 
     RowBox[{"1400.", ",", " ", "365.", ",", " ", "150"}], "}"}], Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EPGRelaxPars"]],"paclet:DTITools/ref/EPGRelaxPars"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is and option for ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". ",
     "Needs",
     " to be {T1muscl, T1Fat, T2Fat} in ms, defaul is {1400,365,137}."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EPGCalibrate",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/EPGCalibrate"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EPGCalibrate"]],"paclet:DTITools/ref/EPGCalibrate"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". ",
     "If",
     " set to ",
     "True",
     " it does autmatic callibration of the T2 fat relaxation time."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EPGFitPoints",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/EPGFitPoints"], "50", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EPGFitPoints"]],"paclet:DTITools/ref/EPGFitPoints"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is a option for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["CalibrateEPGT2Fit"]],
        "paclet:DTITools/ref/CalibrateEPGT2Fit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". ",
     "Number",
     " of points is 200 by default."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EPGMethod",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/EPGMethod"], "dictionaryM", Cell[
    TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EPGMethod"]],"paclet:DTITools/ref/EPGMethod"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an optionf for ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". ",
     "Values",
     " can be \"NLLS\", \"dictionary\" or \"dictionaryM\"."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["MonitorEPGFit",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/MonitorEPGFit"], 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["MonitorEPGFit"]],"paclet:DTITools/ref/MonitorEPGFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " show waitbar during ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     "."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["OutputCalibration",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/OutputCalibration"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OutputCalibration"]],
        "paclet:DTITools/ref/OutputCalibration"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     " and ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TriExponentialT2Fit"]],
        "paclet:DTITools/ref/TriExponentialT2Fit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     "If",
     " true it outputs the calibartion values."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    ButtonBox["EPGSmoothB1",
     BaseStyle->"Link",
     ButtonData->"paclet:DTITools/ref/EPGSmoothB1"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["EPGSmoothB1"]],"paclet:DTITools/ref/EPGSmoothB1"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an options for ",
     Cell[BoxData["EPGT2Fit"], "InlineFormula"],
     ". ",
     "If",
     " set to ",
     "True",
     " the B1 map of the fit will be smoothed after which the minimization if \
perfomed again but with a fixed B1."
    }], "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True, True, True}}}}],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["RelaxometryTools"]],"paclet:DTITools/guide/RelaxometryTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"EPGT2Fit",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "DTITools", ButtonData -> "paclet:DTITools/guide/DTITools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2018, 5, 9, 13, 31, 23.7956455}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "DTITools`RelaxometryTools`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "D T I Tools Package Symbol", "language" -> "en", "paclet" -> 
    "DTITools Package", "status" -> "None", "summary" -> 
    "EPGT2Fit[data, {Necho, detlaTE}, {exitation, refoucs}] fits the T2 based \
on Marty B et.al. Simultaneous muscle water T2 and fat fraction mapping using \
transverse relaxometry with stimulated echo compensation. exitation and \
refocus are the RF pulse angles e.g. 90,180. They can also be a range of \
angeles over the slice profile as defined by GetSliceProfile. Output is \
{{{T2map,B1Map},{wat, fat, fatMap}},callibration} or {{T2map,B1Map},{wat, \
fat, fatMap}}", "synonyms" -> {}, "tabletags" -> {}, "title" -> "EPGT2Fit", 
    "titlemodifier" -> "", "windowtitle" -> "EPGT2Fit", "type" -> "Symbol", 
    "uri" -> "DTITools/ref/EPGT2Fit"}},
CellContext->"Global`",
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[580, 21, 3043, 74, 70, "AnchorBarGrid",ExpressionUUID->"5bb91b22-c757-424a-97d3-9aa7716e97d4",
 CellID->1],
Cell[3626, 97, 165, 6, 70, "ObjectNameGrid",ExpressionUUID->"6cb028f0-5eac-47ac-b4c9-6a4919883cef"],
Cell[3794, 105, 683, 14, 70, "Usage",ExpressionUUID->"1455e606-4e50-42b6-9436-6a91f2c93310"],
Cell[CellGroupData[{
Cell[4502, 123, 621, 19, 70, "NotesSection",ExpressionUUID->"547c0995-5fd9-43ef-b818-a5c64753a397",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1],
Cell[5126, 144, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"92e95317-3b6e-4c4a-a547-6d76fcc1898c"],
Cell[5160, 146, 53, 0, 70, "Notes",ExpressionUUID->"60a9e609-9ed7-467f-9d14-7534c9bd8ca4"],
Cell[5216, 148, 6741, 193, 70, "3ColumnTableMod",ExpressionUUID->"663f2551-4926-4245-8bc6-25d64e36ec5b"],
Cell[11960, 343, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"32373d94-acb6-4218-970e-d29a4ce2d98e"]
}, Closed]],
Cell[CellGroupData[{
Cell[12028, 348, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"9f2652e0-0f2c-40a1-9343-ae58be9c3c3d",
 CellID->38303248],
Cell[12187, 357, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"3c7305b5-f622-40c1-873a-afba21c31e14"],
Cell[12221, 359, 176, 5, 70, "MoreAbout",ExpressionUUID->"3b99d5ac-4183-410d-a1ff-1515070db621",
 CellID->1]
}, Open  ]],
Cell[12412, 367, 23, 0, 70, "FooterCell",ExpressionUUID->"f3e079c9-3680-42fa-a020-50eb79d8dfa4"]
}
]
*)

(* End of internal cache information *)
